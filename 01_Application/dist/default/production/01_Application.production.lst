

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 07 12:29:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4620 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  0019E2                     __pidataCOMRAM:
    65                           	opt callstack 0
    66                           
    67                           ;initializer for _port_register
    68  0019E2  80                 	db	128
    69  0019E3  0F                 	db	15
    70  0019E4  81                 	db	129
    71  0019E5  0F                 	db	15
    72  0019E6  82                 	db	130
    73  0019E7  0F                 	db	15
    74  0019E8  83                 	db	131
    75  0019E9  0F                 	db	15
    76  0019EA  84                 	db	132
    77  0019EB  0F                 	db	15
    78                           
    79                           ;initializer for _lat_register
    80  0019EC  89                 	db	137
    81  0019ED  0F                 	db	15
    82  0019EE  8A                 	db	138
    83  0019EF  0F                 	db	15
    84  0019F0  8B                 	db	139
    85  0019F1  0F                 	db	15
    86  0019F2  8C                 	db	140
    87  0019F3  0F                 	db	15
    88  0019F4  8D                 	db	141
    89  0019F5  0F                 	db	15
    90                           
    91                           ;initializer for _tris_register
    92  0019F6  92                 	db	146
    93  0019F7  0F                 	db	15
    94  0019F8  93                 	db	147
    95  0019F9  0F                 	db	15
    96  0019FA  94                 	db	148
    97  0019FB  0F                 	db	15
    98  0019FC  95                 	db	149
    99  0019FD  0F                 	db	15
   100  0019FE  96                 	db	150
   101  0019FF  0F                 	db	15
   102                           
   103                           ;initializer for _lcd_1
   104  001A00  32                 	db	50
   105  001A01  13                 	db	19
   106  001A02  00                 	db	0
   107  001A03  00                 	db	0
   108                           
   109                           	psect	smallconst
   110  001000                     __psmallconst:
   111                           	opt callstack 0
   112  001000  00                 	db	0
   113  001001                     _character5:
   114                           	opt callstack 0
   115  001001  0E                 	db	14
   116  001002  0A                 	db	10
   117  001003  1F                 	db	31
   118  001004  1F                 	db	31
   119  001005  1F                 	db	31
   120  001006  1F                 	db	31
   121  001007  1F                 	db	31
   122  001008  00                 	db	0
   123  001009                     __end_of_character5:
   124                           	opt callstack 0
   125  001009                     _character4:
   126                           	opt callstack 0
   127  001009  0E                 	db	14
   128  00100A  0A                 	db	10
   129  00100B  11                 	db	17
   130  00100C  1F                 	db	31
   131  00100D  1F                 	db	31
   132  00100E  1F                 	db	31
   133  00100F  1F                 	db	31
   134  001010  00                 	db	0
   135  001011                     __end_of_character4:
   136                           	opt callstack 0
   137  001011                     _character3:
   138                           	opt callstack 0
   139  001011  0E                 	db	14
   140  001012  0A                 	db	10
   141  001013  11                 	db	17
   142  001014  11                 	db	17
   143  001015  1F                 	db	31
   144  001016  1F                 	db	31
   145  001017  1F                 	db	31
   146  001018  00                 	db	0
   147  001019                     __end_of_character3:
   148                           	opt callstack 0
   149  001019                     _character2:
   150                           	opt callstack 0
   151  001019  0E                 	db	14
   152  00101A  0A                 	db	10
   153  00101B  11                 	db	17
   154  00101C  11                 	db	17
   155  00101D  11                 	db	17
   156  00101E  1F                 	db	31
   157  00101F  1F                 	db	31
   158  001020  00                 	db	0
   159  001021                     __end_of_character2:
   160                           	opt callstack 0
   161  001021                     _character1:
   162                           	opt callstack 0
   163  001021  0E                 	db	14
   164  001022  0A                 	db	10
   165  001023  11                 	db	17
   166  001024  11                 	db	17
   167  001025  11                 	db	17
   168  001026  11                 	db	17
   169  001027  1F                 	db	31
   170  001028  00                 	db	0
   171  001029                     __end_of_character1:
   172                           	opt callstack 0
   173  001029                     _mesg2:
   174                           	opt callstack 0
   175  001029  1F                 	db	31
   176  00102A  03                 	db	3
   177  00102B  0D                 	db	13
   178  00102C  11                 	db	17
   179  00102D  01                 	db	1
   180  00102E  1F                 	db	31
   181  00102F  00                 	db	0
   182  001030  00                 	db	0
   183  001031                     __end_of_mesg2:
   184                           	opt callstack 0
   185  001031                     _mesg1:
   186                           	opt callstack 0
   187  001031  1F                 	db	31
   188  001032  18                 	db	24
   189  001033  16                 	db	22
   190  001034  11                 	db	17
   191  001035  10                 	db	16
   192  001036  1F                 	db	31
   193  001037  00                 	db	0
   194  001038  00                 	db	0
   195  001039                     __end_of_mesg1:
   196                           	opt callstack 0
   197  001039                     _shab_bat3:
   198                           	opt callstack 0
   199  001039  1E                 	db	30
   200  00103A  1E                 	db	30
   201  00103B  1E                 	db	30
   202  00103C  1E                 	db	30
   203  00103D  1E                 	db	30
   204  00103E  1E                 	db	30
   205  00103F  1E                 	db	30
   206  001040  00                 	db	0
   207  001041                     __end_of_shab_bat3:
   208                           	opt callstack 0
   209  001041                     _shab_bat2:
   210                           	opt callstack 0
   211  001041  1C                 	db	28
   212  001042  1C                 	db	28
   213  001043  1C                 	db	28
   214  001044  1C                 	db	28
   215  001045  1C                 	db	28
   216  001046  1C                 	db	28
   217  001047  1C                 	db	28
   218  001048  00                 	db	0
   219  001049                     __end_of_shab_bat2:
   220                           	opt callstack 0
   221  001049                     _shab_bat1:
   222                           	opt callstack 0
   223  001049  18                 	db	24
   224  00104A  18                 	db	24
   225  00104B  18                 	db	24
   226  00104C  18                 	db	24
   227  00104D  18                 	db	24
   228  00104E  18                 	db	24
   229  00104F  18                 	db	24
   230  001050  00                 	db	0
   231  001051                     __end_of_shab_bat1:
   232                           	opt callstack 0
   233  001051                     _Shab:
   234                           	opt callstack 0
   235  001051  1F                 	db	31
   236  001052  15                 	db	21
   237  001053  0E                 	db	14
   238  001054  04                 	db	4
   239  001055  04                 	db	4
   240  001056  04                 	db	4
   241  001057  04                 	db	4
   242  001058  00                 	db	0
   243  001059                     __end_of_Shab:
   244                           	opt callstack 0
   245  001059                     _blt:
   246                           	opt callstack 0
   247  001059  06                 	db	6
   248  00105A  15                 	db	21
   249  00105B  0D                 	db	13
   250  00105C  06                 	db	6
   251  00105D  0D                 	db	13
   252  00105E  15                 	db	21
   253  00105F  06                 	db	6
   254  001060  00                 	db	0
   255  001061                     __end_of_blt:
   256                           	opt callstack 0
   257  001061                     _character6:
   258                           	opt callstack 0
   259  001061  0E                 	db	14
   260  001062  0E                 	db	14
   261  001063  1F                 	db	31
   262  001064  1F                 	db	31
   263  001065  1F                 	db	31
   264  001066  1F                 	db	31
   265  001067  1F                 	db	31
   266  001068  00                 	db	0
   267  001069                     __end_of_character6:
   268                           	opt callstack 0
   269  0000                     _PORTE	set	3972
   270  0000                     _PORTD	set	3971
   271  0000                     _PORTC	set	3970
   272  0000                     _PORTB	set	3969
   273  0000                     _PORTA	set	3968
   274  0000                     _LATE	set	3981
   275  0000                     _LATD	set	3980
   276  0000                     _LATC	set	3979
   277  0000                     _LATB	set	3978
   278  0000                     _LATA	set	3977
   279  0000                     _TRISE	set	3990
   280  0000                     _TRISD	set	3989
   281  0000                     _TRISC	set	3988
   282  0000                     _TRISB	set	3987
   283  0000                     _TRISA	set	3986
   284  001069                     STR_4:
   285  001069  45                 	db	69	;'E'
   286  00106A  53                 	db	83	;'S'
   287  00106B  20                 	db	32
   288  00106C  44                 	db	68	;'D'
   289  00106D  69                 	db	105	;'i'
   290  00106E  70                 	db	112	;'p'
   291  00106F  6C                 	db	108	;'l'
   292  001070  6F                 	db	111	;'o'
   293  001071  6D                 	db	109	;'m'
   294  001072  61                 	db	97	;'a'
   295  001073  00                 	db	0
   296  001074                     STR_1:
   297  001074  33                 	db	51	;'3'
   298  001075  20                 	db	32
   299  001076  6D                 	db	109	;'m'
   300  001077  65                 	db	101	;'e'
   301  001078  73                 	db	115	;'s'
   302  001079  73                 	db	115	;'s'
   303  00107A  61                 	db	97	;'a'
   304  00107B  67                 	db	103	;'g'
   305  00107C  65                 	db	101	;'e'
   306  00107D  73                 	db	115	;'s'
   307  00107E  00                 	db	0
   308  00107F                     STR_2:
   309  00107F  72                 	db	114	;'r'
   310  001080  65                 	db	101	;'e'
   311  001081  63                 	db	99	;'c'
   312  001082  65                 	db	101	;'e'
   313  001083  69                 	db	105	;'i'
   314  001084  76                 	db	118	;'v'
   315  001085  65                 	db	101	;'e'
   316  001086  64                 	db	100	;'d'
   317  001087  00                 	db	0
   318  001088                     STR_6:
   319  001088  20                 	db	32
   320  001089  20                 	db	32
   321  00108A  20                 	db	32
   322  00108B  20                 	db	32
   323  00108C  00                 	db	0
   324  00108D                     STR_3:
   325  00108D  52                 	db	82	;'R'
   326  00108E  65                 	db	101	;'e'
   327  00108F  61                 	db	97	;'a'
   328  001090  64                 	db	100	;'d'
   329  001091  00                 	db	0
   330  001092                     STR_7:
   331  001092  25                 	db	37
   332  001093  69                 	db	105	;'i'
   333  001094  00                 	db	0
   334  0000                     
   335                           ; #config settings
   336  001095  00                 	db	0	; dummy byte at the end
   337  0000                     
   338                           	psect	cinit
   339  0019B8                     __pcinit:
   340                           	opt callstack 0
   341  0019B8                     start_initialization:
   342                           	opt callstack 0
   343  0019B8                     __initialization:
   344                           	opt callstack 0
   345                           
   346                           ; Initialize objects allocated to COMRAM (34 bytes)
   347                           ; load TBLPTR registers with __pidataCOMRAM
   348  0019B8  0EE2               	movlw	low __pidataCOMRAM
   349  0019BA  6EF6               	movwf	tblptrl,c
   350  0019BC  0E19               	movlw	high __pidataCOMRAM
   351  0019BE  6EF7               	movwf	tblptrh,c
   352  0019C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   353  0019C2  6EF8               	movwf	tblptru,c
   354  0019C4  EE00  F02A         	lfsr	0,__pdataCOMRAM
   355  0019C8  EE10 F022          	lfsr	1,34
   356  0019CC                     copy_data0:
   357  0019CC  0009               	tblrd		*+
   358  0019CE  CFF5 FFEE          	movff	tablat,postinc0
   359  0019D2  50E5               	movf	postdec1,w,c
   360  0019D4  50E1               	movf	fsr1l,w,c
   361  0019D6  E1FA               	bnz	copy_data0
   362  0019D8                     end_of_initialization:
   363                           	opt callstack 0
   364  0019D8                     __end_of__initialization:
   365                           	opt callstack 0
   366  0019D8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   367  0019DA  6EF8               	movwf	tblptru,c
   368  0019DC  0100               	movlb	0
   369  0019DE  EF4B  F008         	goto	_main	;jump to C main() function
   370                           
   371                           	psect	dataCOMRAM
   372  00002A                     __pdataCOMRAM:
   373                           	opt callstack 0
   374  00002A                     _port_register:
   375                           	opt callstack 0
   376  00002A                     	ds	10
   377  000034                     _lat_register:
   378                           	opt callstack 0
   379  000034                     	ds	10
   380  00003E                     _tris_register:
   381                           	opt callstack 0
   382  00003E                     	ds	10
   383  000048                     _lcd_1:
   384                           	opt callstack 0
   385  000048                     	ds	4
   386                           
   387                           	psect	cstackCOMRAM
   388  000001                     __pcstackCOMRAM:
   389                           	opt callstack 0
   390  000001                     gpio_pin_direction_intialize@pin:
   391                           	opt callstack 0
   392  000001                     gpio_pin_write_value@pin:
   393                           	opt callstack 0
   394  000001                     gpio_port_direction_intialize@direction:
   395                           	opt callstack 0
   396  000001                     gpio_port_write_value@value:
   397                           	opt callstack 0
   398                           
   399                           ; 1 bytes @ 0x0
   400  000001                     	ds	1
   401  000002                     ??_gpio_port_direction_intialize:
   402  000002                     ??_gpio_port_write_value:
   403  000002                     gpio_pin_direction_intialize@direction:
   404                           	opt callstack 0
   405  000002                     gpio_pin_write_value@logic:
   406                           	opt callstack 0
   407                           
   408                           ; 1 bytes @ 0x1
   409  000002                     	ds	1
   410  000003                     ??_gpio_pin_direction_intialize:
   411  000003                     ??_gpio_pin_write_value:
   412                           
   413                           ; 1 bytes @ 0x2
   414  000003                     	ds	2
   415  000005                     gpio_port_direction_intialize@port:
   416                           	opt callstack 0
   417  000005                     gpio_port_write_value@port:
   418                           	opt callstack 0
   419                           
   420                           ; 1 bytes @ 0x4
   421  000005                     	ds	4
   422  000009                     gpio_pin_direction_intialize@port:
   423                           	opt callstack 0
   424  000009                     gpio_pin_write_value@port:
   425                           	opt callstack 0
   426                           
   427                           ; 1 bytes @ 0x8
   428  000009                     	ds	1
   429  00000A                     lcd_send_enable@_lcd:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x9
   433  00000A                     	ds	2
   434  00000C                     lcd_send_command@_lcd:
   435                           	opt callstack 0
   436  00000C                     lcd_send_char_data@_lcd:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0xB
   440  00000C                     	ds	2
   441  00000E                     lcd_send_command@command:
   442                           	opt callstack 0
   443  00000E                     lcd_send_char_data@_data:
   444                           	opt callstack 0
   445                           
   446                           ; 1 bytes @ 0xD
   447  00000E                     	ds	1
   448  00000F                     ??_lcd_send_command:
   449  00000F                     
   450                           ; 1 bytes @ 0xE
   451  00000F                     	ds	2
   452  000011                     lcd_set_cursor@_lcd:
   453                           	opt callstack 0
   454  000011                     lcd_8bit_intialize@_lcd:
   455                           	opt callstack 0
   456                           
   457                           ; 2 bytes @ 0x10
   458  000011                     	ds	2
   459  000013                     ??_lcd_8bit_intialize:
   460  000013                     lcd_set_cursor@row:
   461                           	opt callstack 0
   462                           
   463                           ; 1 bytes @ 0x12
   464  000013                     	ds	1
   465  000014                     lcd_set_cursor@coulmn:
   466                           	opt callstack 0
   467  000014                     lcd_intialize@_lcd:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x13
   471  000014                     	ds	1
   472  000015                     ??_lcd_set_cursor:
   473                           
   474                           ; 1 bytes @ 0x14
   475  000015                     	ds	1
   476  000016                     
   477                           ; 1 bytes @ 0x15
   478  000016                     	ds	1
   479  000017                     lcd_send_char_data_pos@_lcd:
   480                           	opt callstack 0
   481  000017                     lcd_send_string_data_pos@_lcd:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x16
   485  000017                     	ds	2
   486  000019                     lcd_send_char_data_pos@row:
   487                           	opt callstack 0
   488  000019                     lcd_send_string_data_pos@row:
   489                           	opt callstack 0
   490                           
   491                           ; 1 bytes @ 0x18
   492  000019                     	ds	1
   493  00001A                     lcd_send_char_data_pos@coulmn:
   494                           	opt callstack 0
   495  00001A                     lcd_send_string_data_pos@coulmn:
   496                           	opt callstack 0
   497                           
   498                           ; 1 bytes @ 0x19
   499  00001A                     	ds	1
   500  00001B                     lcd_send_char_data_pos@_data:
   501                           	opt callstack 0
   502  00001B                     lcd_send_string_data_pos@_data:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x1A
   506  00001B                     	ds	1
   507  00001C                     
   508                           ; 1 bytes @ 0x1B
   509  00001C                     	ds	1
   510  00001D                     lcd_send_custome_char@_lcd:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x1C
   514  00001D                     	ds	2
   515  00001F                     lcd_send_custome_char@row:
   516                           	opt callstack 0
   517                           
   518                           ; 1 bytes @ 0x1E
   519  00001F                     	ds	1
   520  000020                     lcd_send_custome_char@coulmn:
   521                           	opt callstack 0
   522                           
   523                           ; 1 bytes @ 0x1F
   524  000020                     	ds	1
   525  000021                     lcd_send_custome_char@arr:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x20
   529  000021                     	ds	2
   530  000023                     lcd_send_custome_char@_pos:
   531                           	opt callstack 0
   532                           
   533                           ; 1 bytes @ 0x22
   534  000023                     	ds	1
   535  000024                     ??_lcd_send_custome_char:
   536                           
   537                           ; 1 bytes @ 0x23
   538  000024                     	ds	3
   539  000027                     lcd_send_custome_char@l_counter:
   540                           	opt callstack 0
   541                           
   542                           ; 1 bytes @ 0x26
   543  000027                     	ds	1
   544  000028                     ??_main:
   545                           
   546                           ; 1 bytes @ 0x27
   547  000028                     	ds	2
   548                           
   549 ;;
   550 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   551 ;;
   552 ;; *************** function _main *****************
   553 ;; Defined at:
   554 ;;		line 56 in file "application.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  2  265[None  ] int 
   561 ;; Registers used:
   562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;Total ram usage:        2 bytes
   573 ;; Hardware stack levels required when called:    6
   574 ;; This function calls:
   575 ;;		_application_init
   576 ;;		_lcd_send_custome_char
   577 ;;		_lcd_send_string_data_pos
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584  001096                     __ptext0:
   585                           	opt callstack 0
   586  001096                     _main:
   587                           	opt callstack 25
   588  001096                     
   589                           ;application.c: 57:     application_init();
   590  001096  EC02  F00D         	call	_application_init	;wreg free
   591  00109A                     
   592                           ;application.c: 58:     lcd_send_custome_char(&lcd_1, 4, 20, character6, 0);
   593  00109A  0E48               	movlw	low _lcd_1
   594  00109C  6E1D               	movwf	lcd_send_custome_char@_lcd^0,c
   595  00109E  0E00               	movlw	high _lcd_1
   596  0010A0  6E1E               	movwf	(lcd_send_custome_char@_lcd+1)^0,c
   597  0010A2  0E04               	movlw	4
   598  0010A4  6E1F               	movwf	lcd_send_custome_char@row^0,c
   599  0010A6  0E14               	movlw	20
   600  0010A8  6E20               	movwf	lcd_send_custome_char@coulmn^0,c
   601  0010AA  0E61               	movlw	low _character6
   602  0010AC  6E21               	movwf	lcd_send_custome_char@arr^0,c
   603  0010AE  0E10               	movlw	high _character6
   604  0010B0  6E22               	movwf	(lcd_send_custome_char@arr+1)^0,c
   605  0010B2  0E00               	movlw	0
   606  0010B4  6E23               	movwf	lcd_send_custome_char@_pos^0,c
   607  0010B6  EC2F  F00B         	call	_lcd_send_custome_char	;wreg free
   608  0010BA                     
   609                           ;application.c: 59:     lcd_send_custome_char(&lcd_1, 1, 19, blt, 1);
   610  0010BA  0E48               	movlw	low _lcd_1
   611  0010BC  6E1D               	movwf	lcd_send_custome_char@_lcd^0,c
   612  0010BE  0E00               	movlw	high _lcd_1
   613  0010C0  6E1E               	movwf	(lcd_send_custome_char@_lcd+1)^0,c
   614  0010C2  0E01               	movlw	1
   615  0010C4  6E1F               	movwf	lcd_send_custome_char@row^0,c
   616  0010C6  0E13               	movlw	19
   617  0010C8  6E20               	movwf	lcd_send_custome_char@coulmn^0,c
   618  0010CA  0E59               	movlw	low _blt
   619  0010CC  6E21               	movwf	lcd_send_custome_char@arr^0,c
   620  0010CE  0E10               	movlw	high _blt
   621  0010D0  6E22               	movwf	(lcd_send_custome_char@arr+1)^0,c
   622  0010D2  0E01               	movlw	1
   623  0010D4  6E23               	movwf	lcd_send_custome_char@_pos^0,c
   624  0010D6  EC2F  F00B         	call	_lcd_send_custome_char	;wreg free
   625  0010DA                     
   626                           ;application.c: 60:     lcd_send_custome_char(&lcd_1, 4, 1, Shab, 2);
   627  0010DA  0E48               	movlw	low _lcd_1
   628  0010DC  6E1D               	movwf	lcd_send_custome_char@_lcd^0,c
   629  0010DE  0E00               	movlw	high _lcd_1
   630  0010E0  6E1E               	movwf	(lcd_send_custome_char@_lcd+1)^0,c
   631  0010E2  0E04               	movlw	4
   632  0010E4  6E1F               	movwf	lcd_send_custome_char@row^0,c
   633  0010E6  0E01               	movlw	1
   634  0010E8  6E20               	movwf	lcd_send_custome_char@coulmn^0,c
   635  0010EA  0E51               	movlw	low _Shab
   636  0010EC  6E21               	movwf	lcd_send_custome_char@arr^0,c
   637  0010EE  0E10               	movlw	high _Shab
   638  0010F0  6E22               	movwf	(lcd_send_custome_char@arr+1)^0,c
   639  0010F2  0E02               	movlw	2
   640  0010F4  6E23               	movwf	lcd_send_custome_char@_pos^0,c
   641  0010F6  EC2F  F00B         	call	_lcd_send_custome_char	;wreg free
   642  0010FA                     
   643                           ;application.c: 61:     lcd_send_custome_char(&lcd_1, 3, 1, shab_bat1, 3);
   644  0010FA  0E48               	movlw	low _lcd_1
   645  0010FC  6E1D               	movwf	lcd_send_custome_char@_lcd^0,c
   646  0010FE  0E00               	movlw	high _lcd_1
   647  001100  6E1E               	movwf	(lcd_send_custome_char@_lcd+1)^0,c
   648  001102  0E03               	movlw	3
   649  001104  6E1F               	movwf	lcd_send_custome_char@row^0,c
   650  001106  0E01               	movlw	1
   651  001108  6E20               	movwf	lcd_send_custome_char@coulmn^0,c
   652  00110A  0E49               	movlw	low _shab_bat1
   653  00110C  6E21               	movwf	lcd_send_custome_char@arr^0,c
   654  00110E  0E10               	movlw	high _shab_bat1
   655  001110  6E22               	movwf	(lcd_send_custome_char@arr+1)^0,c
   656  001112  0E03               	movlw	3
   657  001114  6E23               	movwf	lcd_send_custome_char@_pos^0,c
   658  001116  EC2F  F00B         	call	_lcd_send_custome_char	;wreg free
   659  00111A                     
   660                           ;application.c: 62:     lcd_send_custome_char(&lcd_1, 3, 20, shab_bat1, 3);
   661  00111A  0E48               	movlw	low _lcd_1
   662  00111C  6E1D               	movwf	lcd_send_custome_char@_lcd^0,c
   663  00111E  0E00               	movlw	high _lcd_1
   664  001120  6E1E               	movwf	(lcd_send_custome_char@_lcd+1)^0,c
   665  001122  0E03               	movlw	3
   666  001124  6E1F               	movwf	lcd_send_custome_char@row^0,c
   667  001126  0E14               	movlw	20
   668  001128  6E20               	movwf	lcd_send_custome_char@coulmn^0,c
   669  00112A  0E49               	movlw	low _shab_bat1
   670  00112C  6E21               	movwf	lcd_send_custome_char@arr^0,c
   671  00112E  0E10               	movlw	high _shab_bat1
   672  001130  6E22               	movwf	(lcd_send_custome_char@arr+1)^0,c
   673  001132  0E03               	movlw	3
   674  001134  6E23               	movwf	lcd_send_custome_char@_pos^0,c
   675  001136  EC2F  F00B         	call	_lcd_send_custome_char	;wreg free
   676  00113A                     
   677                           ;application.c: 63:     lcd_send_custome_char(&lcd_1, 2, 1, shab_bat2, 4);
   678  00113A  0E48               	movlw	low _lcd_1
   679  00113C  6E1D               	movwf	lcd_send_custome_char@_lcd^0,c
   680  00113E  0E00               	movlw	high _lcd_1
   681  001140  6E1E               	movwf	(lcd_send_custome_char@_lcd+1)^0,c
   682  001142  0E02               	movlw	2
   683  001144  6E1F               	movwf	lcd_send_custome_char@row^0,c
   684  001146  0E01               	movlw	1
   685  001148  6E20               	movwf	lcd_send_custome_char@coulmn^0,c
   686  00114A  0E41               	movlw	low _shab_bat2
   687  00114C  6E21               	movwf	lcd_send_custome_char@arr^0,c
   688  00114E  0E10               	movlw	high _shab_bat2
   689  001150  6E22               	movwf	(lcd_send_custome_char@arr+1)^0,c
   690  001152  0E04               	movlw	4
   691  001154  6E23               	movwf	lcd_send_custome_char@_pos^0,c
   692  001156  EC2F  F00B         	call	_lcd_send_custome_char	;wreg free
   693  00115A                     
   694                           ;application.c: 64:     lcd_send_custome_char(&lcd_1, 2, 20, shab_bat2, 4);
   695  00115A  0E48               	movlw	low _lcd_1
   696  00115C  6E1D               	movwf	lcd_send_custome_char@_lcd^0,c
   697  00115E  0E00               	movlw	high _lcd_1
   698  001160  6E1E               	movwf	(lcd_send_custome_char@_lcd+1)^0,c
   699  001162  0E02               	movlw	2
   700  001164  6E1F               	movwf	lcd_send_custome_char@row^0,c
   701  001166  0E14               	movlw	20
   702  001168  6E20               	movwf	lcd_send_custome_char@coulmn^0,c
   703  00116A  0E41               	movlw	low _shab_bat2
   704  00116C  6E21               	movwf	lcd_send_custome_char@arr^0,c
   705  00116E  0E10               	movlw	high _shab_bat2
   706  001170  6E22               	movwf	(lcd_send_custome_char@arr+1)^0,c
   707  001172  0E04               	movlw	4
   708  001174  6E23               	movwf	lcd_send_custome_char@_pos^0,c
   709  001176  EC2F  F00B         	call	_lcd_send_custome_char	;wreg free
   710  00117A                     
   711                           ;application.c: 65:     lcd_send_custome_char(&lcd_1, 1, 20, shab_bat3, 4);
   712  00117A  0E48               	movlw	low _lcd_1
   713  00117C  6E1D               	movwf	lcd_send_custome_char@_lcd^0,c
   714  00117E  0E00               	movlw	high _lcd_1
   715  001180  6E1E               	movwf	(lcd_send_custome_char@_lcd+1)^0,c
   716  001182  0E01               	movlw	1
   717  001184  6E1F               	movwf	lcd_send_custome_char@row^0,c
   718  001186  0E14               	movlw	20
   719  001188  6E20               	movwf	lcd_send_custome_char@coulmn^0,c
   720  00118A  0E39               	movlw	low _shab_bat3
   721  00118C  6E21               	movwf	lcd_send_custome_char@arr^0,c
   722  00118E  0E10               	movlw	high _shab_bat3
   723  001190  6E22               	movwf	(lcd_send_custome_char@arr+1)^0,c
   724  001192  0E04               	movlw	4
   725  001194  6E23               	movwf	lcd_send_custome_char@_pos^0,c
   726  001196  EC2F  F00B         	call	_lcd_send_custome_char	;wreg free
   727  00119A                     
   728                           ;application.c: 66:     lcd_send_custome_char(&lcd_1, 1, 2, mesg1, 5);
   729  00119A  0E48               	movlw	low _lcd_1
   730  00119C  6E1D               	movwf	lcd_send_custome_char@_lcd^0,c
   731  00119E  0E00               	movlw	high _lcd_1
   732  0011A0  6E1E               	movwf	(lcd_send_custome_char@_lcd+1)^0,c
   733  0011A2  0E01               	movlw	1
   734  0011A4  6E1F               	movwf	lcd_send_custome_char@row^0,c
   735  0011A6  0E02               	movlw	2
   736  0011A8  6E20               	movwf	lcd_send_custome_char@coulmn^0,c
   737  0011AA  0E31               	movlw	low _mesg1
   738  0011AC  6E21               	movwf	lcd_send_custome_char@arr^0,c
   739  0011AE  0E10               	movlw	high _mesg1
   740  0011B0  6E22               	movwf	(lcd_send_custome_char@arr+1)^0,c
   741  0011B2  0E05               	movlw	5
   742  0011B4  6E23               	movwf	lcd_send_custome_char@_pos^0,c
   743  0011B6  EC2F  F00B         	call	_lcd_send_custome_char	;wreg free
   744  0011BA                     
   745                           ;application.c: 67:     lcd_send_custome_char(&lcd_1, 1, 3, mesg2, 6);
   746  0011BA  0E48               	movlw	low _lcd_1
   747  0011BC  6E1D               	movwf	lcd_send_custome_char@_lcd^0,c
   748  0011BE  0E00               	movlw	high _lcd_1
   749  0011C0  6E1E               	movwf	(lcd_send_custome_char@_lcd+1)^0,c
   750  0011C2  0E01               	movlw	1
   751  0011C4  6E1F               	movwf	lcd_send_custome_char@row^0,c
   752  0011C6  0E03               	movlw	3
   753  0011C8  6E20               	movwf	lcd_send_custome_char@coulmn^0,c
   754  0011CA  0E29               	movlw	low _mesg2
   755  0011CC  6E21               	movwf	lcd_send_custome_char@arr^0,c
   756  0011CE  0E10               	movlw	high _mesg2
   757  0011D0  6E22               	movwf	(lcd_send_custome_char@arr+1)^0,c
   758  0011D2  0E06               	movlw	6
   759  0011D4  6E23               	movwf	lcd_send_custome_char@_pos^0,c
   760  0011D6  EC2F  F00B         	call	_lcd_send_custome_char	;wreg free
   761  0011DA                     
   762                           ;application.c: 68:     lcd_send_string_data_pos(&lcd_1, 2, 2, "3 messages");
   763  0011DA  0E48               	movlw	low _lcd_1
   764  0011DC  6E17               	movwf	lcd_send_string_data_pos@_lcd^0,c
   765  0011DE  0E00               	movlw	high _lcd_1
   766  0011E0  6E18               	movwf	(lcd_send_string_data_pos@_lcd+1)^0,c
   767  0011E2  0E02               	movlw	2
   768  0011E4  6E19               	movwf	lcd_send_string_data_pos@row^0,c
   769  0011E6  0E02               	movlw	2
   770  0011E8  6E1A               	movwf	lcd_send_string_data_pos@coulmn^0,c
   771  0011EA  0E74               	movlw	low STR_1
   772  0011EC  6E1B               	movwf	lcd_send_string_data_pos@_data^0,c
   773  0011EE  0E10               	movlw	high STR_1
   774  0011F0  6E1C               	movwf	(lcd_send_string_data_pos@_data+1)^0,c
   775  0011F2  ECC3  F00B         	call	_lcd_send_string_data_pos	;wreg free
   776  0011F6                     
   777                           ;application.c: 69:     lcd_send_string_data_pos(&lcd_1, 3, 5, "received");
   778  0011F6  0E48               	movlw	low _lcd_1
   779  0011F8  6E17               	movwf	lcd_send_string_data_pos@_lcd^0,c
   780  0011FA  0E00               	movlw	high _lcd_1
   781  0011FC  6E18               	movwf	(lcd_send_string_data_pos@_lcd+1)^0,c
   782  0011FE  0E03               	movlw	3
   783  001200  6E19               	movwf	lcd_send_string_data_pos@row^0,c
   784  001202  0E05               	movlw	5
   785  001204  6E1A               	movwf	lcd_send_string_data_pos@coulmn^0,c
   786  001206  0E7F               	movlw	low STR_2
   787  001208  6E1B               	movwf	lcd_send_string_data_pos@_data^0,c
   788  00120A  0E10               	movlw	high STR_2
   789  00120C  6E1C               	movwf	(lcd_send_string_data_pos@_data+1)^0,c
   790  00120E  ECC3  F00B         	call	_lcd_send_string_data_pos	;wreg free
   791  001212                     
   792                           ;application.c: 70:     lcd_send_string_data_pos(&lcd_1, 4, 9, "Read");
   793  001212  0E48               	movlw	low _lcd_1
   794  001214  6E17               	movwf	lcd_send_string_data_pos@_lcd^0,c
   795  001216  0E00               	movlw	high _lcd_1
   796  001218  6E18               	movwf	(lcd_send_string_data_pos@_lcd+1)^0,c
   797  00121A  0E04               	movlw	4
   798  00121C  6E19               	movwf	lcd_send_string_data_pos@row^0,c
   799  00121E  0E09               	movlw	9
   800  001220  6E1A               	movwf	lcd_send_string_data_pos@coulmn^0,c
   801  001222  0E8D               	movlw	low STR_3
   802  001224  6E1B               	movwf	lcd_send_string_data_pos@_data^0,c
   803  001226  0E10               	movlw	high STR_3
   804  001228  6E1C               	movwf	(lcd_send_string_data_pos@_data+1)^0,c
   805  00122A  ECC3  F00B         	call	_lcd_send_string_data_pos	;wreg free
   806  00122E                     l2080:
   807                           
   808                           ;application.c: 72:         lcd_send_string_data_pos(&lcd_1, 1, 6, "ES Diploma");
   809  00122E  0E48               	movlw	low _lcd_1
   810  001230  6E17               	movwf	lcd_send_string_data_pos@_lcd^0,c
   811  001232  0E00               	movlw	high _lcd_1
   812  001234  6E18               	movwf	(lcd_send_string_data_pos@_lcd+1)^0,c
   813  001236  0E01               	movlw	1
   814  001238  6E19               	movwf	lcd_send_string_data_pos@row^0,c
   815  00123A  0E06               	movlw	6
   816  00123C  6E1A               	movwf	lcd_send_string_data_pos@coulmn^0,c
   817  00123E  0E69               	movlw	low STR_4
   818  001240  6E1B               	movwf	lcd_send_string_data_pos@_data^0,c
   819  001242  0E10               	movlw	high STR_4
   820  001244  6E1C               	movwf	(lcd_send_string_data_pos@_data+1)^0,c
   821  001246  ECC3  F00B         	call	_lcd_send_string_data_pos	;wreg free
   822  00124A                     
   823                           ;application.c: 73:         lcd_send_string_data_pos(&lcd_1, 4, 9, "Read");_delay((unsig
      +                          ned long)((500)*(4000000UL/4000.0)));
   824  00124A  0E48               	movlw	low _lcd_1
   825  00124C  6E17               	movwf	lcd_send_string_data_pos@_lcd^0,c
   826  00124E  0E00               	movlw	high _lcd_1
   827  001250  6E18               	movwf	(lcd_send_string_data_pos@_lcd+1)^0,c
   828  001252  0E04               	movlw	4
   829  001254  6E19               	movwf	lcd_send_string_data_pos@row^0,c
   830  001256  0E09               	movlw	9
   831  001258  6E1A               	movwf	lcd_send_string_data_pos@coulmn^0,c
   832  00125A  0E8D               	movlw	low STR_3
   833  00125C  6E1B               	movwf	lcd_send_string_data_pos@_data^0,c
   834  00125E  0E10               	movlw	high STR_3
   835  001260  6E1C               	movwf	(lcd_send_string_data_pos@_data+1)^0,c
   836  001262  ECC3  F00B         	call	_lcd_send_string_data_pos	;wreg free
   837  001266  0E03               	movlw	3
   838  001268  6E29               	movwf	(??_main+1)^0,c
   839  00126A  0E8A               	movlw	138
   840  00126C  6E28               	movwf	??_main^0,c
   841  00126E  0E56               	movlw	86
   842  001270                     u1077:
   843  001270  2EE8               	decfsz	wreg,f,c
   844  001272  D7FE               	bra	u1077
   845  001274  2E28               	decfsz	??_main^0,f,c
   846  001276  D7FC               	bra	u1077
   847  001278  2E29               	decfsz	(??_main+1)^0,f,c
   848  00127A  D7FA               	bra	u1077
   849  00127C                     
   850                           ;application.c: 74:         lcd_send_string_data_pos(&lcd_1, 4, 9, "    ");_delay((unsig
      +                          ned long)((500)*(4000000UL/4000.0)));
   851  00127C  0E48               	movlw	low _lcd_1
   852  00127E  6E17               	movwf	lcd_send_string_data_pos@_lcd^0,c
   853  001280  0E00               	movlw	high _lcd_1
   854  001282  6E18               	movwf	(lcd_send_string_data_pos@_lcd+1)^0,c
   855  001284  0E04               	movlw	4
   856  001286  6E19               	movwf	lcd_send_string_data_pos@row^0,c
   857  001288  0E09               	movlw	9
   858  00128A  6E1A               	movwf	lcd_send_string_data_pos@coulmn^0,c
   859  00128C  0E88               	movlw	low STR_6
   860  00128E  6E1B               	movwf	lcd_send_string_data_pos@_data^0,c
   861  001290  0E10               	movlw	high STR_6
   862  001292  6E1C               	movwf	(lcd_send_string_data_pos@_data+1)^0,c
   863  001294  ECC3  F00B         	call	_lcd_send_string_data_pos	;wreg free
   864  001298  0E03               	movlw	3
   865  00129A  6E29               	movwf	(??_main+1)^0,c
   866  00129C  0E8A               	movlw	138
   867  00129E  6E28               	movwf	??_main^0,c
   868  0012A0  0E56               	movlw	86
   869  0012A2                     u1087:
   870  0012A2  2EE8               	decfsz	wreg,f,c
   871  0012A4  D7FE               	bra	u1087
   872  0012A6  2E28               	decfsz	??_main^0,f,c
   873  0012A8  D7FC               	bra	u1087
   874  0012AA  2E29               	decfsz	(??_main+1)^0,f,c
   875  0012AC  D7FA               	bra	u1087
   876  0012AE  EF17  F009         	goto	l2080
   877  0012B2  EF00  F000         	goto	start
   878  0012B6                     __end_of_main:
   879                           	opt callstack 0
   880                           
   881 ;; *************** function _lcd_send_string_data_pos *****************
   882 ;; Defined at:
   883 ;;		line 237 in file "ecu/char_lcd/ecu_char_lcd.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  _lcd            2   22[COMRAM] PTR const struct .
   886 ;;		 -> lcd_1(4), 
   887 ;;  row             1   24[COMRAM] unsigned char 
   888 ;;  coulmn          1   25[COMRAM] unsigned char 
   889 ;;  _data           2   26[COMRAM] PTR unsigned char 
   890 ;;		 -> STR_6(5), STR_5(5), STR_4(11), STR_3(5), 
   891 ;;		 -> STR_2(9), STR_1(11), 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  ret             1    0        enum E2756
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      enum E2756
   896 ;; Registers used:
   897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   903 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;Total ram usage:        7 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    4
   910 ;; This function calls:
   911 ;;		_lcd_send_char_data
   912 ;;		_lcd_send_command
   913 ;;		_lcd_set_cursor
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text1
   920  001786                     __ptext1:
   921                           	opt callstack 0
   922  001786                     _lcd_send_string_data_pos:
   923                           	opt callstack 26
   924  001786                     
   925                           ;ecu/char_lcd/ecu_char_lcd.c: 239:     if(((void*)0) == _lcd){
   926  001786  5017               	movf	lcd_send_string_data_pos@_lcd^0,w,c
   927  001788  1018               	iorwf	(lcd_send_string_data_pos@_lcd+1)^0,w,c
   928  00178A  A4D8               	btfss	status,2,c
   929  00178C  EFCA  F00B         	goto	u771
   930  001790  EFCC  F00B         	goto	u770
   931  001794                     u771:
   932  001794  EFCE  F00B         	goto	l1860
   933  001798                     u770:
   934  001798  EF03  F00C         	goto	l332
   935  00179C                     l1860:
   936                           
   937                           ;ecu/char_lcd/ecu_char_lcd.c: 243:         lcd_send_command(_lcd, 0x02);
   938  00179C  C017  F00C         	movff	lcd_send_string_data_pos@_lcd,lcd_send_command@_lcd
   939  0017A0  C018  F00D         	movff	lcd_send_string_data_pos@_lcd+1,lcd_send_command@_lcd+1
   940  0017A4  0E02               	movlw	2
   941  0017A6  6E0E               	movwf	lcd_send_command@command^0,c
   942  0017A8  EC04  F00C         	call	_lcd_send_command	;wreg free
   943                           
   944                           ;ecu/char_lcd/ecu_char_lcd.c: 244:         lcd_set_cursor(_lcd, row, coulmn);
   945  0017AC  C017  F011         	movff	lcd_send_string_data_pos@_lcd,lcd_set_cursor@_lcd
   946  0017B0  C018  F012         	movff	lcd_send_string_data_pos@_lcd+1,lcd_set_cursor@_lcd+1
   947  0017B4  C019  F013         	movff	lcd_send_string_data_pos@row,lcd_set_cursor@row
   948  0017B8  C01A  F014         	movff	lcd_send_string_data_pos@coulmn,lcd_set_cursor@coulmn
   949  0017BC  ECE2  F00A         	call	_lcd_set_cursor	;wreg free
   950                           
   951                           ;ecu/char_lcd/ecu_char_lcd.c: 245:         while(*_data){
   952  0017C0  EFF5  F00B         	goto	l1868
   953  0017C4                     l1862:
   954                           
   955                           ;ecu/char_lcd/ecu_char_lcd.c: 246:             lcd_send_char_data(_lcd, *_data++);
   956  0017C4  C017  F00C         	movff	lcd_send_string_data_pos@_lcd,lcd_send_char_data@_lcd
   957  0017C8  C018  F00D         	movff	lcd_send_string_data_pos@_lcd+1,lcd_send_char_data@_lcd+1
   958  0017CC  C01B  FFF6         	movff	lcd_send_string_data_pos@_data,tblptrl
   959  0017D0  C01C  FFF7         	movff	lcd_send_string_data_pos@_data+1,tblptrh
   960  0017D4                     	if	0	;tblptru may be non-zero
   961  0017D4                     	endif
   962  0017D4                     	if	0	;tblptru may be non-zero
   963  0017D4                     	endif
   964  0017D4  0008               	tblrd		*
   965  0017D6  CFF5 F00E          	movff	tablat,lcd_send_char_data@_data
   966  0017DA  EC3C  F00C         	call	_lcd_send_char_data	;wreg free
   967  0017DE  4A1B               	infsnz	lcd_send_string_data_pos@_data^0,f,c
   968  0017E0  2A1C               	incf	(lcd_send_string_data_pos@_data+1)^0,f,c
   969  0017E2                     
   970                           ;ecu/char_lcd/ecu_char_lcd.c: 247:             _delay((unsigned long)((1)*(4000000UL/400
      +                          0.0)));
   971  0017E2  0EC8               	movlw	200
   972  0017E4                     u1097:
   973  0017E4  D000               	nop2	
   974  0017E6  2EE8               	decfsz	wreg,f,c
   975  0017E8  D7FD               	bra	u1097
   976  0017EA                     l1868:
   977                           
   978                           ;ecu/char_lcd/ecu_char_lcd.c: 245:         while(*_data){
   979  0017EA  C01B  FFF6         	movff	lcd_send_string_data_pos@_data,tblptrl
   980  0017EE  C01C  FFF7         	movff	lcd_send_string_data_pos@_data+1,tblptrh
   981  0017F2                     	if	0	;tblptru may be non-zero
   982  0017F2                     	endif
   983  0017F2                     	if	0	;tblptru may be non-zero
   984  0017F2                     	endif
   985  0017F2  0008               	tblrd		*
   986  0017F4  50F5               	movf	tablat,w,c
   987  0017F6  0900               	iorlw	0
   988  0017F8  A4D8               	btfss	status,2,c
   989  0017FA  EF01  F00C         	goto	u781
   990  0017FE  EF03  F00C         	goto	u780
   991  001802                     u781:
   992  001802  EFE2  F00B         	goto	l1862
   993  001806                     u780:
   994  001806                     l332:
   995  001806  0012               	return		;funcret
   996  001808                     __end_of_lcd_send_string_data_pos:
   997                           	opt callstack 0
   998                           
   999 ;; *************** function _lcd_send_custome_char *****************
  1000 ;; Defined at:
  1001 ;;		line 263 in file "ecu/char_lcd/ecu_char_lcd.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  _lcd            2   28[COMRAM] PTR const struct .
  1004 ;;		 -> lcd_1(4), 
  1005 ;;  row             1   30[COMRAM] unsigned char 
  1006 ;;  coulmn          1   31[COMRAM] unsigned char 
  1007 ;;  arr             2   32[COMRAM] PTR const unsigned char 
  1008 ;;		 -> mesg2(8), mesg1(8), shab_bat3(8), shab_bat2(8), 
  1009 ;;		 -> shab_bat1(8), Shab(8), blt(8), character6(8), 
  1010 ;;  _pos            1   34[COMRAM] unsigned char 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  l_counter       1   38[COMRAM] unsigned char 
  1013 ;;  ret             1    0        enum E2756
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      enum E2756
  1016 ;; Registers used:
  1017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1023 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;Total ram usage:       11 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; Hardware stack levels required when called:    5
  1030 ;; This function calls:
  1031 ;;		_lcd_send_char_data
  1032 ;;		_lcd_send_char_data_pos
  1033 ;;		_lcd_send_command
  1034 ;; This function is called by:
  1035 ;;		_main
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text2
  1040  00165E                     __ptext2:
  1041                           	opt callstack 0
  1042  00165E                     _lcd_send_custome_char:
  1043                           	opt callstack 25
  1044  00165E                     
  1045                           ;ecu/char_lcd/ecu_char_lcd.c: 265:      uint8_t l_counter = 0;
  1046  00165E  0E00               	movlw	0
  1047  001660  6E27               	movwf	lcd_send_custome_char@l_counter^0,c
  1048  001662                     
  1049                           ;ecu/char_lcd/ecu_char_lcd.c: 266:     if(((void*)0) == _lcd){
  1050  001662  501D               	movf	lcd_send_custome_char@_lcd^0,w,c
  1051  001664  101E               	iorwf	(lcd_send_custome_char@_lcd+1)^0,w,c
  1052  001666  A4D8               	btfss	status,2,c
  1053  001668  EF38  F00B         	goto	u751
  1054  00166C  EF3A  F00B         	goto	u750
  1055  001670                     u751:
  1056  001670  EF3C  F00B         	goto	l1832
  1057  001674                     u750:
  1058  001674  EF79  F00B         	goto	l340
  1059  001678                     l1832:
  1060                           
  1061                           ;ecu/char_lcd/ecu_char_lcd.c: 270:         lcd_send_command(_lcd, 0x40 +(_pos*8));
  1062  001678  C01D  F00C         	movff	lcd_send_custome_char@_lcd,lcd_send_command@_lcd
  1063  00167C  C01E  F00D         	movff	lcd_send_custome_char@_lcd+1,lcd_send_command@_lcd+1
  1064  001680  5023               	movf	lcd_send_custome_char@_pos^0,w,c
  1065  001682  0D08               	mullw	8
  1066  001684  50F3               	movf	243,w,c
  1067  001686  0F40               	addlw	64
  1068  001688  6E0E               	movwf	lcd_send_command@command^0,c
  1069  00168A  EC04  F00C         	call	_lcd_send_command	;wreg free
  1070  00168E                     
  1071                           ;ecu/char_lcd/ecu_char_lcd.c: 271:         for(l_counter=0; l_counter<=7; l_counter++){
  1072  00168E  0E00               	movlw	0
  1073  001690  6E27               	movwf	lcd_send_custome_char@l_counter^0,c
  1074  001692                     l1840:
  1075                           
  1076                           ;ecu/char_lcd/ecu_char_lcd.c: 272:             lcd_send_char_data(_lcd, arr[l_counter]);
  1077  001692  C01D  F00C         	movff	lcd_send_custome_char@_lcd,lcd_send_char_data@_lcd
  1078  001696  C01E  F00D         	movff	lcd_send_custome_char@_lcd+1,lcd_send_char_data@_lcd+1
  1079  00169A  5027               	movf	lcd_send_custome_char@l_counter^0,w,c
  1080  00169C  2421               	addwf	lcd_send_custome_char@arr^0,w,c
  1081  00169E  6E24               	movwf	??_lcd_send_custome_char^0,c
  1082  0016A0  0E00               	movlw	0
  1083  0016A2  2022               	addwfc	(lcd_send_custome_char@arr+1)^0,w,c
  1084  0016A4  6E25               	movwf	(??_lcd_send_custome_char+1)^0,c
  1085  0016A6  C024  FFF6         	movff	??_lcd_send_custome_char,tblptrl
  1086  0016AA  C025  FFF7         	movff	??_lcd_send_custome_char+1,tblptrh
  1087  0016AE                     	if	0	;tblptru may be non-zero
  1088  0016AE                     	endif
  1089  0016AE                     	if	0	;tblptru may be non-zero
  1090  0016AE                     	endif
  1091  0016AE  0008               	tblrd		*
  1092  0016B0  CFF5 F00E          	movff	tablat,lcd_send_char_data@_data
  1093  0016B4  EC3C  F00C         	call	_lcd_send_char_data	;wreg free
  1094  0016B8                     
  1095                           ;ecu/char_lcd/ecu_char_lcd.c: 273:         }
  1096  0016B8  2A27               	incf	lcd_send_custome_char@l_counter^0,f,c
  1097  0016BA  0E07               	movlw	7
  1098  0016BC  6427               	cpfsgt	lcd_send_custome_char@l_counter^0,c
  1099  0016BE  EF63  F00B         	goto	u761
  1100  0016C2  EF65  F00B         	goto	u760
  1101  0016C6                     u761:
  1102  0016C6  EF49  F00B         	goto	l1840
  1103  0016CA                     u760:
  1104  0016CA                     
  1105                           ;ecu/char_lcd/ecu_char_lcd.c: 274:         lcd_send_command(_lcd, 0x02);
  1106  0016CA  C01D  F00C         	movff	lcd_send_custome_char@_lcd,lcd_send_command@_lcd
  1107  0016CE  C01E  F00D         	movff	lcd_send_custome_char@_lcd+1,lcd_send_command@_lcd+1
  1108  0016D2  0E02               	movlw	2
  1109  0016D4  6E0E               	movwf	lcd_send_command@command^0,c
  1110  0016D6  EC04  F00C         	call	_lcd_send_command	;wreg free
  1111                           
  1112                           ;ecu/char_lcd/ecu_char_lcd.c: 275:         lcd_send_char_data_pos(_lcd, row, coulmn, _po
      +                          s);
  1113  0016DA  C01D  F017         	movff	lcd_send_custome_char@_lcd,lcd_send_char_data_pos@_lcd
  1114  0016DE  C01E  F018         	movff	lcd_send_custome_char@_lcd+1,lcd_send_char_data_pos@_lcd+1
  1115  0016E2  C01F  F019         	movff	lcd_send_custome_char@row,lcd_send_char_data_pos@row
  1116  0016E6  C020  F01A         	movff	lcd_send_custome_char@coulmn,lcd_send_char_data_pos@coulmn
  1117  0016EA  C023  F01B         	movff	lcd_send_custome_char@_pos,lcd_send_char_data_pos@_data
  1118  0016EE  EC98  F00C         	call	_lcd_send_char_data_pos	;wreg free
  1119  0016F2                     l340:
  1120  0016F2  0012               	return		;funcret
  1121  0016F4                     __end_of_lcd_send_custome_char:
  1122                           	opt callstack 0
  1123                           
  1124 ;; *************** function _lcd_send_char_data_pos *****************
  1125 ;; Defined at:
  1126 ;;		line 194 in file "ecu/char_lcd/ecu_char_lcd.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  _lcd            2   22[COMRAM] PTR const struct .
  1129 ;;		 -> lcd_1(4), 
  1130 ;;  row             1   24[COMRAM] unsigned char 
  1131 ;;  coulmn          1   25[COMRAM] unsigned char 
  1132 ;;  _data           1   26[COMRAM] unsigned char 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  ret             1    0        enum E2756
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      enum E2756
  1137 ;; Registers used:
  1138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1144 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;Total ram usage:        6 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    4
  1151 ;; This function calls:
  1152 ;;		_lcd_send_char_data
  1153 ;;		_lcd_send_command
  1154 ;;		_lcd_set_cursor
  1155 ;; This function is called by:
  1156 ;;		_lcd_send_custome_char
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text3
  1161  001930                     __ptext3:
  1162                           	opt callstack 0
  1163  001930                     _lcd_send_char_data_pos:
  1164                           	opt callstack 25
  1165  001930                     
  1166                           ;ecu/char_lcd/ecu_char_lcd.c: 196:     if(((void*)0) == _lcd){
  1167  001930  5017               	movf	lcd_send_char_data_pos@_lcd^0,w,c
  1168  001932  1018               	iorwf	(lcd_send_char_data_pos@_lcd+1)^0,w,c
  1169  001934  A4D8               	btfss	status,2,c
  1170  001936  EF9F  F00C         	goto	u741
  1171  00193A  EFA1  F00C         	goto	u740
  1172  00193E                     u741:
  1173  00193E  EFA3  F00C         	goto	l1816
  1174  001942                     u740:
  1175  001942  EFBD  F00C         	goto	l319
  1176  001946                     l1816:
  1177                           
  1178                           ;ecu/char_lcd/ecu_char_lcd.c: 200:         lcd_send_command(_lcd, 0x02);
  1179  001946  C017  F00C         	movff	lcd_send_char_data_pos@_lcd,lcd_send_command@_lcd
  1180  00194A  C018  F00D         	movff	lcd_send_char_data_pos@_lcd+1,lcd_send_command@_lcd+1
  1181  00194E  0E02               	movlw	2
  1182  001950  6E0E               	movwf	lcd_send_command@command^0,c
  1183  001952  EC04  F00C         	call	_lcd_send_command	;wreg free
  1184                           
  1185                           ;ecu/char_lcd/ecu_char_lcd.c: 201:         lcd_set_cursor(_lcd, row, coulmn);
  1186  001956  C017  F011         	movff	lcd_send_char_data_pos@_lcd,lcd_set_cursor@_lcd
  1187  00195A  C018  F012         	movff	lcd_send_char_data_pos@_lcd+1,lcd_set_cursor@_lcd+1
  1188  00195E  C019  F013         	movff	lcd_send_char_data_pos@row,lcd_set_cursor@row
  1189  001962  C01A  F014         	movff	lcd_send_char_data_pos@coulmn,lcd_set_cursor@coulmn
  1190  001966  ECE2  F00A         	call	_lcd_set_cursor	;wreg free
  1191                           
  1192                           ;ecu/char_lcd/ecu_char_lcd.c: 202:         lcd_send_char_data(_lcd, _data);
  1193  00196A  C017  F00C         	movff	lcd_send_char_data_pos@_lcd,lcd_send_char_data@_lcd
  1194  00196E  C018  F00D         	movff	lcd_send_char_data_pos@_lcd+1,lcd_send_char_data@_lcd+1
  1195  001972  C01B  F00E         	movff	lcd_send_char_data_pos@_data,lcd_send_char_data@_data
  1196  001976  EC3C  F00C         	call	_lcd_send_char_data	;wreg free
  1197  00197A                     l319:
  1198  00197A  0012               	return		;funcret
  1199  00197C                     __end_of_lcd_send_char_data_pos:
  1200                           	opt callstack 0
  1201                           
  1202 ;; *************** function _lcd_set_cursor *****************
  1203 ;; Defined at:
  1204 ;;		line 34 in file "ecu/char_lcd/ecu_char_lcd.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  _lcd            2   16[COMRAM] PTR const struct .
  1207 ;;		 -> lcd_1(4), 
  1208 ;;  row             1   18[COMRAM] unsigned char 
  1209 ;;  coulmn          1   19[COMRAM] unsigned char 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;Total ram usage:        6 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    3
  1228 ;; This function calls:
  1229 ;;		_lcd_send_command
  1230 ;; This function is called by:
  1231 ;;		_lcd_send_char_data_pos
  1232 ;;		_lcd_send_string_data_pos
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text4
  1237  0015C4                     __ptext4:
  1238                           	opt callstack 0
  1239  0015C4                     _lcd_set_cursor:
  1240                           	opt callstack 26
  1241  0015C4                     
  1242                           ;ecu/char_lcd/ecu_char_lcd.c: 35:     coulmn--;
  1243  0015C4  0614               	decf	lcd_set_cursor@coulmn^0,f,c
  1244                           
  1245                           ;ecu/char_lcd/ecu_char_lcd.c: 36:     switch(row){
  1246  0015C6  EF11  F00B         	goto	l1776
  1247  0015CA                     l1768:
  1248  0015CA  C011  F00C         	movff	lcd_set_cursor@_lcd,lcd_send_command@_lcd
  1249  0015CE  C012  F00D         	movff	lcd_set_cursor@_lcd+1,lcd_send_command@_lcd+1
  1250  0015D2  5014               	movf	lcd_set_cursor@coulmn^0,w,c
  1251  0015D4  0F80               	addlw	128
  1252  0015D6  6E0E               	movwf	lcd_send_command@command^0,c
  1253  0015D8  EC04  F00C         	call	_lcd_send_command	;wreg free
  1254  0015DC  EF2E  F00B         	goto	l299
  1255  0015E0                     l1770:
  1256  0015E0  C011  F00C         	movff	lcd_set_cursor@_lcd,lcd_send_command@_lcd
  1257  0015E4  C012  F00D         	movff	lcd_set_cursor@_lcd+1,lcd_send_command@_lcd+1
  1258  0015E8  5014               	movf	lcd_set_cursor@coulmn^0,w,c
  1259  0015EA  0FC0               	addlw	192
  1260  0015EC  6E0E               	movwf	lcd_send_command@command^0,c
  1261  0015EE  EC04  F00C         	call	_lcd_send_command	;wreg free
  1262  0015F2  EF2E  F00B         	goto	l299
  1263  0015F6                     l1772:
  1264  0015F6  C011  F00C         	movff	lcd_set_cursor@_lcd,lcd_send_command@_lcd
  1265  0015FA  C012  F00D         	movff	lcd_set_cursor@_lcd+1,lcd_send_command@_lcd+1
  1266  0015FE  5014               	movf	lcd_set_cursor@coulmn^0,w,c
  1267  001600  0F94               	addlw	148
  1268  001602  6E0E               	movwf	lcd_send_command@command^0,c
  1269  001604  EC04  F00C         	call	_lcd_send_command	;wreg free
  1270  001608  EF2E  F00B         	goto	l299
  1271  00160C                     l1774:
  1272  00160C  C011  F00C         	movff	lcd_set_cursor@_lcd,lcd_send_command@_lcd
  1273  001610  C012  F00D         	movff	lcd_set_cursor@_lcd+1,lcd_send_command@_lcd+1
  1274  001614  5014               	movf	lcd_set_cursor@coulmn^0,w,c
  1275  001616  0FD4               	addlw	212
  1276  001618  6E0E               	movwf	lcd_send_command@command^0,c
  1277  00161A  EC04  F00C         	call	_lcd_send_command	;wreg free
  1278  00161E  EF2E  F00B         	goto	l299
  1279  001622                     l1776:
  1280  001622  5013               	movf	lcd_set_cursor@row^0,w,c
  1281  001624  6E15               	movwf	??_lcd_set_cursor^0,c
  1282  001626  6A16               	clrf	(??_lcd_set_cursor+1)^0,c
  1283                           
  1284                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1285                           ; Switch size 1, requested type "simple"
  1286                           ; Number of cases is 1, Range of values is 0 to 0
  1287                           ; switch strategies available:
  1288                           ; Name         Instructions Cycles
  1289                           ; simple_byte            4     3 (average)
  1290                           ;	Chosen strategy is simple_byte
  1291  001628  5016               	movf	(??_lcd_set_cursor+1)^0,w,c
  1292  00162A  0A00               	xorlw	0	; case 0
  1293  00162C  B4D8               	btfsc	status,2,c
  1294  00162E  EF1B  F00B         	goto	l2138
  1295  001632  EF2E  F00B         	goto	l299
  1296  001636                     l2138:
  1297                           
  1298                           ; Switch size 1, requested type "simple"
  1299                           ; Number of cases is 4, Range of values is 1 to 4
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte           13     7 (average)
  1303                           ;	Chosen strategy is simple_byte
  1304  001636  5015               	movf	??_lcd_set_cursor^0,w,c
  1305  001638  0A01               	xorlw	1	; case 1
  1306  00163A  B4D8               	btfsc	status,2,c
  1307  00163C  EFE5  F00A         	goto	l1768
  1308  001640  0A03               	xorlw	3	; case 2
  1309  001642  B4D8               	btfsc	status,2,c
  1310  001644  EFF0  F00A         	goto	l1770
  1311  001648  0A01               	xorlw	1	; case 3
  1312  00164A  B4D8               	btfsc	status,2,c
  1313  00164C  EFFB  F00A         	goto	l1772
  1314  001650  0A07               	xorlw	7	; case 4
  1315  001652  B4D8               	btfsc	status,2,c
  1316  001654  EF06  F00B         	goto	l1774
  1317  001658  EF2E  F00B         	goto	l299
  1318  00165C                     l299:
  1319  00165C  0012               	return		;funcret
  1320  00165E                     __end_of_lcd_set_cursor:
  1321                           	opt callstack 0
  1322                           
  1323 ;; *************** function _lcd_send_char_data *****************
  1324 ;; Defined at:
  1325 ;;		line 164 in file "ecu/char_lcd/ecu_char_lcd.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  _lcd            2   11[COMRAM] PTR const struct .
  1328 ;;		 -> lcd_1(4), 
  1329 ;;  _data           1   13[COMRAM] unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  ret             1    0        enum E2756
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      enum E2756
  1334 ;; Registers used:
  1335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1341 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;Total ram usage:        4 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    2
  1348 ;; This function calls:
  1349 ;;		_gpio_pin_write_value
  1350 ;;		_gpio_port_write_value
  1351 ;;		_lcd_send_enable
  1352 ;; This function is called by:
  1353 ;;		_lcd_send_char_data_pos
  1354 ;;		_lcd_send_string_data_pos
  1355 ;;		_lcd_send_custome_char
  1356 ;;		_lcd_send_string_data_current_pos
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text5
  1361  001878                     __ptext5:
  1362                           	opt callstack 0
  1363  001878                     _lcd_send_char_data:
  1364                           	opt callstack 27
  1365  001878                     
  1366                           ;ecu/char_lcd/ecu_char_lcd.c: 166:     if(((void*)0) == _lcd){
  1367  001878  500C               	movf	lcd_send_char_data@_lcd^0,w,c
  1368  00187A  100D               	iorwf	(lcd_send_char_data@_lcd+1)^0,w,c
  1369  00187C  A4D8               	btfss	status,2,c
  1370  00187E  EF43  F00C         	goto	u731
  1371  001882  EF45  F00C         	goto	u730
  1372  001886                     u731:
  1373  001886  EF47  F00C         	goto	l1800
  1374  00188A                     u730:
  1375  00188A  EF6C  F00C         	goto	l314
  1376  00188E                     l1800:
  1377                           
  1378                           ;ecu/char_lcd/ecu_char_lcd.c: 177:         gpio_pin_write_value(_lcd->lcd_rs_port, _lcd-
      +                          >lcd_rs_pin, PIN_HIGH);
  1379  00188E  EE20 F002          	lfsr	2,2
  1380  001892  500C               	movf	lcd_send_char_data@_lcd^0,w,c
  1381  001894  26D9               	addwf	fsr2l,f,c
  1382  001896  500D               	movf	(lcd_send_char_data@_lcd+1)^0,w,c
  1383  001898  22DA               	addwfc	fsr2h,f,c
  1384  00189A  50DF               	movf	indf2,w,c
  1385  00189C  0B07               	andlw	7
  1386  00189E  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1387  0018A0  0E01               	movlw	1
  1388  0018A2  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1389  0018A4  EE20 F001          	lfsr	2,1
  1390  0018A8  500C               	movf	lcd_send_char_data@_lcd^0,w,c
  1391  0018AA  26D9               	addwf	fsr2l,f,c
  1392  0018AC  500D               	movf	(lcd_send_char_data@_lcd+1)^0,w,c
  1393  0018AE  22DA               	addwfc	fsr2h,f,c
  1394  0018B0  50DF               	movf	indf2,w,c
  1395  0018B2  0B0F               	andlw	15
  1396  0018B4  EC1A  F00A         	call	_gpio_pin_write_value
  1397                           
  1398                           ;ecu/char_lcd/ecu_char_lcd.c: 178:         gpio_port_write_value(_lcd->lcd_data_port, _d
      +                          ata);
  1399  0018B8  C00E  F001         	movff	lcd_send_char_data@_data,gpio_port_write_value@value
  1400  0018BC  C00C  FFD9         	movff	lcd_send_char_data@_lcd,fsr2l
  1401  0018C0  C00D  FFDA         	movff	lcd_send_char_data@_lcd+1,fsr2h
  1402  0018C4  50DF               	movf	indf2,w,c
  1403  0018C6  0B0F               	andlw	15
  1404  0018C8  ECBE  F00C         	call	_gpio_port_write_value
  1405                           
  1406                           ;ecu/char_lcd/ecu_char_lcd.c: 179:         lcd_send_enable(_lcd);
  1407  0018CC  C00C  F00A         	movff	lcd_send_char_data@_lcd,lcd_send_enable@_lcd
  1408  0018D0  C00D  F00B         	movff	lcd_send_char_data@_lcd+1,lcd_send_enable@_lcd+1
  1409  0018D4  EC6D  F00C         	call	_lcd_send_enable	;wreg free
  1410  0018D8                     l314:
  1411  0018D8  0012               	return		;funcret
  1412  0018DA                     __end_of_lcd_send_char_data:
  1413                           	opt callstack 0
  1414                           
  1415 ;; *************** function _application_init *****************
  1416 ;; Defined at:
  1417 ;;		line 83 in file "application.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;Total ram usage:        0 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    5
  1438 ;; This function calls:
  1439 ;;		_lcd_intialize
  1440 ;; This function is called by:
  1441 ;;		_main
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text6
  1446  001A04                     __ptext6:
  1447                           	opt callstack 0
  1448  001A04                     _application_init:
  1449                           	opt callstack 25
  1450  001A04                     
  1451                           ;application.c: 90:     lcd_intialize(&lcd_1);
  1452  001A04  0E48               	movlw	low _lcd_1
  1453  001A06  6E14               	movwf	lcd_intialize@_lcd^0,c
  1454  001A08  0E00               	movlw	high _lcd_1
  1455  001A0A  6E15               	movwf	(lcd_intialize@_lcd+1)^0,c
  1456  001A0C  EC09  F00D         	call	_lcd_intialize	;wreg free
  1457  001A10  0012               	return		;funcret
  1458  001A12                     __end_of_application_init:
  1459                           	opt callstack 0
  1460                           
  1461 ;; *************** function _lcd_intialize *****************
  1462 ;; Defined at:
  1463 ;;		line 121 in file "ecu/char_lcd/ecu_char_lcd.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  _lcd            2   19[COMRAM] PTR const struct .
  1466 ;;		 -> lcd_1(4), 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      enum E2756
  1471 ;; Registers used:
  1472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;Total ram usage:        2 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    4
  1485 ;; This function calls:
  1486 ;;		_lcd_8bit_intialize
  1487 ;; This function is called by:
  1488 ;;		_application_init
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text7
  1493  001A12                     __ptext7:
  1494                           	opt callstack 0
  1495  001A12                     _lcd_intialize:
  1496                           	opt callstack 25
  1497  001A12                     
  1498                           ;ecu/char_lcd/ecu_char_lcd.c: 123:     lcd_8bit_intialize(_lcd);
  1499  001A12  C014  F011         	movff	lcd_intialize@_lcd,lcd_8bit_intialize@_lcd
  1500  001A16  C015  F012         	movff	lcd_intialize@_lcd+1,lcd_8bit_intialize@_lcd+1
  1501  001A1A  EC5B  F009         	call	_lcd_8bit_intialize	;wreg free
  1502  001A1E  0012               	return		;funcret
  1503  001A20                     __end_of_lcd_intialize:
  1504                           	opt callstack 0
  1505                           
  1506 ;; *************** function _lcd_8bit_intialize *****************
  1507 ;; Defined at:
  1508 ;;		line 64 in file "ecu/char_lcd/ecu_char_lcd.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  _lcd            2   16[COMRAM] PTR const struct .
  1511 ;;		 -> lcd_1(4), 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;Total ram usage:        3 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    3
  1530 ;; This function calls:
  1531 ;;		_gpio_pin_direction_intialize
  1532 ;;		_gpio_pin_write_value
  1533 ;;		_gpio_port_direction_intialize
  1534 ;;		_gpio_port_write_value
  1535 ;;		_lcd_send_command
  1536 ;; This function is called by:
  1537 ;;		_lcd_intialize
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text8
  1542  0012B6                     __ptext8:
  1543                           	opt callstack 0
  1544  0012B6                     _lcd_8bit_intialize:
  1545                           	opt callstack 25
  1546  0012B6                     
  1547                           ;ecu/char_lcd/ecu_char_lcd.c: 65:     gpio_port_direction_intialize(_lcd->lcd_data_port,
      +                           0x00U);
  1548  0012B6  0E00               	movlw	0
  1549  0012B8  6E01               	movwf	gpio_port_direction_intialize@direction^0,c
  1550  0012BA  C011  FFD9         	movff	lcd_8bit_intialize@_lcd,fsr2l
  1551  0012BE  C012  FFDA         	movff	lcd_8bit_intialize@_lcd+1,fsr2h
  1552  0012C2  50DF               	movf	indf2,w,c
  1553  0012C4  0B0F               	andlw	15
  1554  0012C6  EC7A  F00B         	call	_gpio_port_direction_intialize
  1555                           
  1556                           ;ecu/char_lcd/ecu_char_lcd.c: 66:     gpio_port_write_value(_lcd->lcd_data_port, 0X00);
  1557  0012CA  0E00               	movlw	0
  1558  0012CC  6E01               	movwf	gpio_port_write_value@value^0,c
  1559  0012CE  C011  FFD9         	movff	lcd_8bit_intialize@_lcd,fsr2l
  1560  0012D2  C012  FFDA         	movff	lcd_8bit_intialize@_lcd+1,fsr2h
  1561  0012D6  50DF               	movf	indf2,w,c
  1562  0012D8  0B0F               	andlw	15
  1563  0012DA  ECBE  F00C         	call	_gpio_port_write_value
  1564                           
  1565                           ;ecu/char_lcd/ecu_char_lcd.c: 67:     gpio_pin_direction_intialize(_lcd->lcd_en_port, _l
      +                          cd->lcd_en_pin, DIRECTION_OUTPUT);
  1566  0012DE  EE20 F001          	lfsr	2,1
  1567  0012E2  5011               	movf	lcd_8bit_intialize@_lcd^0,w,c
  1568  0012E4  26D9               	addwf	fsr2l,f,c
  1569  0012E6  5012               	movf	(lcd_8bit_intialize@_lcd+1)^0,w,c
  1570  0012E8  22DA               	addwfc	fsr2h,f,c
  1571  0012EA  38DF               	swapf	indf2,w,c
  1572  0012EC  0B07               	andlw	7
  1573  0012EE  6E01               	movwf	gpio_pin_direction_intialize@pin^0,c
  1574  0012F0  0E00               	movlw	0
  1575  0012F2  6E02               	movwf	gpio_pin_direction_intialize@direction^0,c
  1576  0012F4  C011  FFD9         	movff	lcd_8bit_intialize@_lcd,fsr2l
  1577  0012F8  C012  FFDA         	movff	lcd_8bit_intialize@_lcd+1,fsr2h
  1578  0012FC  38DF               	swapf	indf2,w,c
  1579  0012FE  0B0F               	andlw	15
  1580  001300  EC7E  F00A         	call	_gpio_pin_direction_intialize
  1581                           
  1582                           ;ecu/char_lcd/ecu_char_lcd.c: 68:     gpio_pin_write_value(_lcd->lcd_en_port, _lcd->lcd_
      +                          en_pin, PIN_LOW);
  1583  001304  EE20 F001          	lfsr	2,1
  1584  001308  5011               	movf	lcd_8bit_intialize@_lcd^0,w,c
  1585  00130A  26D9               	addwf	fsr2l,f,c
  1586  00130C  5012               	movf	(lcd_8bit_intialize@_lcd+1)^0,w,c
  1587  00130E  22DA               	addwfc	fsr2h,f,c
  1588  001310  38DF               	swapf	indf2,w,c
  1589  001312  0B07               	andlw	7
  1590  001314  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1591  001316  0E00               	movlw	0
  1592  001318  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1593  00131A  C011  FFD9         	movff	lcd_8bit_intialize@_lcd,fsr2l
  1594  00131E  C012  FFDA         	movff	lcd_8bit_intialize@_lcd+1,fsr2h
  1595  001322  38DF               	swapf	indf2,w,c
  1596  001324  0B0F               	andlw	15
  1597  001326  EC1A  F00A         	call	_gpio_pin_write_value
  1598                           
  1599                           ;ecu/char_lcd/ecu_char_lcd.c: 69:     gpio_pin_direction_intialize(_lcd->lcd_rs_port, _l
      +                          cd->lcd_rs_pin, DIRECTION_OUTPUT);
  1600  00132A  EE20 F002          	lfsr	2,2
  1601  00132E  5011               	movf	lcd_8bit_intialize@_lcd^0,w,c
  1602  001330  26D9               	addwf	fsr2l,f,c
  1603  001332  5012               	movf	(lcd_8bit_intialize@_lcd+1)^0,w,c
  1604  001334  22DA               	addwfc	fsr2h,f,c
  1605  001336  50DF               	movf	indf2,w,c
  1606  001338  0B07               	andlw	7
  1607  00133A  6E01               	movwf	gpio_pin_direction_intialize@pin^0,c
  1608  00133C  0E00               	movlw	0
  1609  00133E  6E02               	movwf	gpio_pin_direction_intialize@direction^0,c
  1610  001340  EE20 F001          	lfsr	2,1
  1611  001344  5011               	movf	lcd_8bit_intialize@_lcd^0,w,c
  1612  001346  26D9               	addwf	fsr2l,f,c
  1613  001348  5012               	movf	(lcd_8bit_intialize@_lcd+1)^0,w,c
  1614  00134A  22DA               	addwfc	fsr2h,f,c
  1615  00134C  50DF               	movf	indf2,w,c
  1616  00134E  0B0F               	andlw	15
  1617  001350  EC7E  F00A         	call	_gpio_pin_direction_intialize
  1618                           
  1619                           ;ecu/char_lcd/ecu_char_lcd.c: 70:     gpio_pin_write_value(_lcd->lcd_rs_port, _lcd->lcd_
      +                          rs_pin, PIN_LOW);
  1620  001354  EE20 F002          	lfsr	2,2
  1621  001358  5011               	movf	lcd_8bit_intialize@_lcd^0,w,c
  1622  00135A  26D9               	addwf	fsr2l,f,c
  1623  00135C  5012               	movf	(lcd_8bit_intialize@_lcd+1)^0,w,c
  1624  00135E  22DA               	addwfc	fsr2h,f,c
  1625  001360  50DF               	movf	indf2,w,c
  1626  001362  0B07               	andlw	7
  1627  001364  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1628  001366  0E00               	movlw	0
  1629  001368  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1630  00136A  EE20 F001          	lfsr	2,1
  1631  00136E  5011               	movf	lcd_8bit_intialize@_lcd^0,w,c
  1632  001370  26D9               	addwf	fsr2l,f,c
  1633  001372  5012               	movf	(lcd_8bit_intialize@_lcd+1)^0,w,c
  1634  001374  22DA               	addwfc	fsr2h,f,c
  1635  001376  50DF               	movf	indf2,w,c
  1636  001378  0B0F               	andlw	15
  1637  00137A  EC1A  F00A         	call	_gpio_pin_write_value
  1638  00137E                     
  1639                           ;ecu/char_lcd/ecu_char_lcd.c: 72:     _delay((unsigned long)((40)*(4000000UL/4000.0)));
  1640  00137E  0E34               	movlw	52
  1641  001380  6E13               	movwf	??_lcd_8bit_intialize^0,c
  1642  001382  0EF2               	movlw	242
  1643  001384                     u1107:
  1644  001384  2EE8               	decfsz	wreg,f,c
  1645  001386  D7FE               	bra	u1107
  1646  001388  2E13               	decfsz	??_lcd_8bit_intialize^0,f,c
  1647  00138A  D7FC               	bra	u1107
  1648  00138C                     
  1649                           ;ecu/char_lcd/ecu_char_lcd.c: 73:     lcd_send_command(_lcd, 0x38);
  1650  00138C  C011  F00C         	movff	lcd_8bit_intialize@_lcd,lcd_send_command@_lcd
  1651  001390  C012  F00D         	movff	lcd_8bit_intialize@_lcd+1,lcd_send_command@_lcd+1
  1652  001394  0E38               	movlw	56
  1653  001396  6E0E               	movwf	lcd_send_command@command^0,c
  1654  001398  EC04  F00C         	call	_lcd_send_command	;wreg free
  1655                           
  1656                           ;ecu/char_lcd/ecu_char_lcd.c: 74:     _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1657  00139C  0E07               	movlw	7
  1658  00139E  6E13               	movwf	??_lcd_8bit_intialize^0,c
  1659  0013A0  0E7D               	movlw	125
  1660  0013A2                     u1117:
  1661  0013A2  2EE8               	decfsz	wreg,f,c
  1662  0013A4  D7FE               	bra	u1117
  1663  0013A6  2E13               	decfsz	??_lcd_8bit_intialize^0,f,c
  1664  0013A8  D7FC               	bra	u1117
  1665  0013AA  F000               	nop	
  1666  0013AC                     
  1667                           ;ecu/char_lcd/ecu_char_lcd.c: 75:     lcd_send_command(_lcd, 0x38);
  1668  0013AC  C011  F00C         	movff	lcd_8bit_intialize@_lcd,lcd_send_command@_lcd
  1669  0013B0  C012  F00D         	movff	lcd_8bit_intialize@_lcd+1,lcd_send_command@_lcd+1
  1670  0013B4  0E38               	movlw	56
  1671  0013B6  6E0E               	movwf	lcd_send_command@command^0,c
  1672  0013B8  EC04  F00C         	call	_lcd_send_command	;wreg free
  1673  0013BC                     
  1674                           ;ecu/char_lcd/ecu_char_lcd.c: 76:     _delay((unsigned long)((300)*(4000000UL/4000000.0)
      +                          ));
  1675  0013BC  0E64               	movlw	100
  1676  0013BE                     u1127:
  1677  0013BE  2EE8               	decfsz	wreg,f,c
  1678  0013C0  D7FE               	bra	u1127
  1679                           
  1680                           ;ecu/char_lcd/ecu_char_lcd.c: 77:     lcd_send_command(_lcd, 0x38);
  1681  0013C2  C011  F00C         	movff	lcd_8bit_intialize@_lcd,lcd_send_command@_lcd
  1682  0013C6  C012  F00D         	movff	lcd_8bit_intialize@_lcd+1,lcd_send_command@_lcd+1
  1683  0013CA  0E38               	movlw	56
  1684  0013CC  6E0E               	movwf	lcd_send_command@command^0,c
  1685  0013CE  EC04  F00C         	call	_lcd_send_command	;wreg free
  1686                           
  1687                           ;ecu/char_lcd/ecu_char_lcd.c: 79:     lcd_send_command(_lcd, 0X01);
  1688  0013D2  C011  F00C         	movff	lcd_8bit_intialize@_lcd,lcd_send_command@_lcd
  1689  0013D6  C012  F00D         	movff	lcd_8bit_intialize@_lcd+1,lcd_send_command@_lcd+1
  1690  0013DA  0E01               	movlw	1
  1691  0013DC  6E0E               	movwf	lcd_send_command@command^0,c
  1692  0013DE  EC04  F00C         	call	_lcd_send_command	;wreg free
  1693                           
  1694                           ;ecu/char_lcd/ecu_char_lcd.c: 80:     lcd_send_command(_lcd, 0x02);
  1695  0013E2  C011  F00C         	movff	lcd_8bit_intialize@_lcd,lcd_send_command@_lcd
  1696  0013E6  C012  F00D         	movff	lcd_8bit_intialize@_lcd+1,lcd_send_command@_lcd+1
  1697  0013EA  0E02               	movlw	2
  1698  0013EC  6E0E               	movwf	lcd_send_command@command^0,c
  1699  0013EE  EC04  F00C         	call	_lcd_send_command	;wreg free
  1700                           
  1701                           ;ecu/char_lcd/ecu_char_lcd.c: 81:     lcd_send_command(_lcd, 0X06);
  1702  0013F2  C011  F00C         	movff	lcd_8bit_intialize@_lcd,lcd_send_command@_lcd
  1703  0013F6  C012  F00D         	movff	lcd_8bit_intialize@_lcd+1,lcd_send_command@_lcd+1
  1704  0013FA  0E06               	movlw	6
  1705  0013FC  6E0E               	movwf	lcd_send_command@command^0,c
  1706  0013FE  EC04  F00C         	call	_lcd_send_command	;wreg free
  1707                           
  1708                           ;ecu/char_lcd/ecu_char_lcd.c: 82:     lcd_send_command(_lcd, 0X0C);
  1709  001402  C011  F00C         	movff	lcd_8bit_intialize@_lcd,lcd_send_command@_lcd
  1710  001406  C012  F00D         	movff	lcd_8bit_intialize@_lcd+1,lcd_send_command@_lcd+1
  1711  00140A  0E0C               	movlw	12
  1712  00140C  6E0E               	movwf	lcd_send_command@command^0,c
  1713  00140E  EC04  F00C         	call	_lcd_send_command	;wreg free
  1714                           
  1715                           ;ecu/char_lcd/ecu_char_lcd.c: 83:     lcd_send_command(_lcd, 0x38);
  1716  001412  C011  F00C         	movff	lcd_8bit_intialize@_lcd,lcd_send_command@_lcd
  1717  001416  C012  F00D         	movff	lcd_8bit_intialize@_lcd+1,lcd_send_command@_lcd+1
  1718  00141A  0E38               	movlw	56
  1719  00141C  6E0E               	movwf	lcd_send_command@command^0,c
  1720  00141E  EC04  F00C         	call	_lcd_send_command	;wreg free
  1721                           
  1722                           ;ecu/char_lcd/ecu_char_lcd.c: 84:     lcd_send_command(_lcd, 0x80);
  1723  001422  C011  F00C         	movff	lcd_8bit_intialize@_lcd,lcd_send_command@_lcd
  1724  001426  C012  F00D         	movff	lcd_8bit_intialize@_lcd+1,lcd_send_command@_lcd+1
  1725  00142A  0E80               	movlw	128
  1726  00142C  6E0E               	movwf	lcd_send_command@command^0,c
  1727  00142E  EC04  F00C         	call	_lcd_send_command	;wreg free
  1728  001432  0012               	return		;funcret
  1729  001434                     __end_of_lcd_8bit_intialize:
  1730                           	opt callstack 0
  1731                           
  1732 ;; *************** function _lcd_send_command *****************
  1733 ;; Defined at:
  1734 ;;		line 135 in file "ecu/char_lcd/ecu_char_lcd.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  _lcd            2   11[COMRAM] PTR const struct .
  1737 ;;		 -> lcd_1(4), 
  1738 ;;  command         1   13[COMRAM] unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  ret             1    0        enum E2756
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      enum E2756
  1743 ;; Registers used:
  1744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1750 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;Total ram usage:        5 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    2
  1757 ;; This function calls:
  1758 ;;		_gpio_pin_write_value
  1759 ;;		_gpio_port_write_value
  1760 ;;		_lcd_send_enable
  1761 ;; This function is called by:
  1762 ;;		_lcd_set_cursor
  1763 ;;		_lcd_8bit_intialize
  1764 ;;		_lcd_send_char_data_pos
  1765 ;;		_lcd_send_string_data_pos
  1766 ;;		_lcd_send_custome_char
  1767 ;;		_lcd_clear_display
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text9
  1772  001808                     __ptext9:
  1773                           	opt callstack 0
  1774  001808                     _lcd_send_command:
  1775                           	opt callstack 26
  1776  001808                     
  1777                           ;ecu/char_lcd/ecu_char_lcd.c: 137:     if(((void*)0) == _lcd){
  1778  001808  500C               	movf	lcd_send_command@_lcd^0,w,c
  1779  00180A  100D               	iorwf	(lcd_send_command@_lcd+1)^0,w,c
  1780  00180C  A4D8               	btfss	status,2,c
  1781  00180E  EF0B  F00C         	goto	u721
  1782  001812  EF0D  F00C         	goto	u720
  1783  001816                     u721:
  1784  001816  EF0F  F00C         	goto	l1758
  1785  00181A                     u720:
  1786  00181A  EF3B  F00C         	goto	l309
  1787  00181E                     l1758:
  1788                           
  1789                           ;ecu/char_lcd/ecu_char_lcd.c: 148:         gpio_pin_write_value(_lcd->lcd_rs_port, _lcd-
      +                          >lcd_rs_pin, PIN_LOW);
  1790  00181E  EE20 F002          	lfsr	2,2
  1791  001822  500C               	movf	lcd_send_command@_lcd^0,w,c
  1792  001824  26D9               	addwf	fsr2l,f,c
  1793  001826  500D               	movf	(lcd_send_command@_lcd+1)^0,w,c
  1794  001828  22DA               	addwfc	fsr2h,f,c
  1795  00182A  50DF               	movf	indf2,w,c
  1796  00182C  0B07               	andlw	7
  1797  00182E  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1798  001830  0E00               	movlw	0
  1799  001832  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1800  001834  EE20 F001          	lfsr	2,1
  1801  001838  500C               	movf	lcd_send_command@_lcd^0,w,c
  1802  00183A  26D9               	addwf	fsr2l,f,c
  1803  00183C  500D               	movf	(lcd_send_command@_lcd+1)^0,w,c
  1804  00183E  22DA               	addwfc	fsr2h,f,c
  1805  001840  50DF               	movf	indf2,w,c
  1806  001842  0B0F               	andlw	15
  1807  001844  EC1A  F00A         	call	_gpio_pin_write_value
  1808                           
  1809                           ;ecu/char_lcd/ecu_char_lcd.c: 149:         gpio_port_write_value(_lcd->lcd_data_port, co
      +                          mmand);
  1810  001848  C00E  F001         	movff	lcd_send_command@command,gpio_port_write_value@value
  1811  00184C  C00C  FFD9         	movff	lcd_send_command@_lcd,fsr2l
  1812  001850  C00D  FFDA         	movff	lcd_send_command@_lcd+1,fsr2h
  1813  001854  50DF               	movf	indf2,w,c
  1814  001856  0B0F               	andlw	15
  1815  001858  ECBE  F00C         	call	_gpio_port_write_value
  1816                           
  1817                           ;ecu/char_lcd/ecu_char_lcd.c: 150:         lcd_send_enable(_lcd);
  1818  00185C  C00C  F00A         	movff	lcd_send_command@_lcd,lcd_send_enable@_lcd
  1819  001860  C00D  F00B         	movff	lcd_send_command@_lcd+1,lcd_send_enable@_lcd+1
  1820  001864  EC6D  F00C         	call	_lcd_send_enable	;wreg free
  1821  001868                     
  1822                           ;ecu/char_lcd/ecu_char_lcd.c: 151:         _delay((unsigned long)((2)*(4000000UL/4000.0)
      +                          ));
  1823  001868  0E03               	movlw	3
  1824  00186A  6E0F               	movwf	??_lcd_send_command^0,c
  1825  00186C  0E98               	movlw	152
  1826  00186E                     u1137:
  1827  00186E  2EE8               	decfsz	wreg,f,c
  1828  001870  D7FE               	bra	u1137
  1829  001872  2E0F               	decfsz	??_lcd_send_command^0,f,c
  1830  001874  D7FC               	bra	u1137
  1831  001876                     l309:
  1832  001876  0012               	return		;funcret
  1833  001878                     __end_of_lcd_send_command:
  1834                           	opt callstack 0
  1835                           
  1836 ;; *************** function _lcd_send_enable *****************
  1837 ;; Defined at:
  1838 ;;		line 16 in file "ecu/char_lcd/ecu_char_lcd.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  _lcd            2    9[COMRAM] PTR const struct .
  1841 ;;		 -> lcd_1(4), 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;Total ram usage:        2 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    1
  1860 ;; This function calls:
  1861 ;;		_gpio_pin_write_value
  1862 ;; This function is called by:
  1863 ;;		_lcd_send_command
  1864 ;;		_lcd_send_char_data
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text10
  1869  0018DA                     __ptext10:
  1870                           	opt callstack 0
  1871  0018DA                     _lcd_send_enable:
  1872                           	opt callstack 26
  1873  0018DA                     
  1874                           ;ecu/char_lcd/ecu_char_lcd.c: 18:     gpio_pin_write_value(_lcd->lcd_en_port, _lcd->lcd_
      +                          en_pin, PIN_HIGH);
  1875  0018DA  EE20 F001          	lfsr	2,1
  1876  0018DE  500A               	movf	lcd_send_enable@_lcd^0,w,c
  1877  0018E0  26D9               	addwf	fsr2l,f,c
  1878  0018E2  500B               	movf	(lcd_send_enable@_lcd+1)^0,w,c
  1879  0018E4  22DA               	addwfc	fsr2h,f,c
  1880  0018E6  38DF               	swapf	indf2,w,c
  1881  0018E8  0B07               	andlw	7
  1882  0018EA  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1883  0018EC  0E01               	movlw	1
  1884  0018EE  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1885  0018F0  C00A  FFD9         	movff	lcd_send_enable@_lcd,fsr2l
  1886  0018F4  C00B  FFDA         	movff	lcd_send_enable@_lcd+1,fsr2h
  1887  0018F8  38DF               	swapf	indf2,w,c
  1888  0018FA  0B0F               	andlw	15
  1889  0018FC  EC1A  F00A         	call	_gpio_pin_write_value
  1890  001900                     
  1891                           ;ecu/char_lcd/ecu_char_lcd.c: 19:     _delay((unsigned long)((200)*(4000000UL/4000000.0)
      +                          ));
  1892  001900  0E42               	movlw	66
  1893  001902                     u1147:
  1894  001902  2EE8               	decfsz	wreg,f,c
  1895  001904  D7FE               	bra	u1147
  1896  001906  D000               	nop2	
  1897  001908                     
  1898                           ;ecu/char_lcd/ecu_char_lcd.c: 20:     gpio_pin_write_value(_lcd->lcd_en_port, _lcd->lcd_
      +                          en_pin, PIN_LOW);
  1899  001908  EE20 F001          	lfsr	2,1
  1900  00190C  500A               	movf	lcd_send_enable@_lcd^0,w,c
  1901  00190E  26D9               	addwf	fsr2l,f,c
  1902  001910  500B               	movf	(lcd_send_enable@_lcd+1)^0,w,c
  1903  001912  22DA               	addwfc	fsr2h,f,c
  1904  001914  38DF               	swapf	indf2,w,c
  1905  001916  0B07               	andlw	7
  1906  001918  6E01               	movwf	gpio_pin_write_value@pin^0,c
  1907  00191A  0E00               	movlw	0
  1908  00191C  6E02               	movwf	gpio_pin_write_value@logic^0,c
  1909  00191E  C00A  FFD9         	movff	lcd_send_enable@_lcd,fsr2l
  1910  001922  C00B  FFDA         	movff	lcd_send_enable@_lcd+1,fsr2h
  1911  001926  38DF               	swapf	indf2,w,c
  1912  001928  0B0F               	andlw	15
  1913  00192A  EC1A  F00A         	call	_gpio_pin_write_value
  1914  00192E  0012               	return		;funcret
  1915  001930                     __end_of_lcd_send_enable:
  1916                           	opt callstack 0
  1917                           
  1918 ;; *************** function _gpio_pin_write_value *****************
  1919 ;; Defined at:
  1920 ;;		line 92 in file "mcal/gpio/mcal_gpio.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  port            1    wreg     enum E2460
  1923 ;;  pin             1    0[COMRAM] enum E2450
  1924 ;;  logic           1    1[COMRAM] enum E2442
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  port            1    8[COMRAM] enum E2460
  1927 ;;  ret             1    0        enum E2438
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      enum E2438
  1930 ;; Registers used:
  1931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;Total ram usage:        9 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_lcd_send_enable
  1947 ;;		_lcd_8bit_intialize
  1948 ;;		_lcd_send_command
  1949 ;;		_lcd_send_char_data
  1950 ;;		_led_initialize
  1951 ;;		_led_turn_on
  1952 ;;		_led_turn_off
  1953 ;;		_relay_initialize
  1954 ;;		_relay_turn_on
  1955 ;;		_relay_turn_off
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text11
  1960  001434                     __ptext11:
  1961                           	opt callstack 0
  1962  001434                     _gpio_pin_write_value:
  1963                           	opt callstack 26
  1964                           
  1965                           ;incstack = 0
  1966                           ;gpio_pin_write_value@port stored from wreg
  1967  001434  6E09               	movwf	gpio_pin_write_value@port^0,c
  1968  001436                     
  1969                           ;mcal/gpio/mcal_gpio.c: 94:     if(pin > 8U -1 || pin < 0){
  1970  001436  0E08               	movlw	8
  1971  001438  6001               	cpfslt	gpio_pin_write_value@pin^0,c
  1972  00143A  EF21  F00A         	goto	u641
  1973  00143E  EF23  F00A         	goto	u640
  1974  001442                     u641:
  1975  001442  EF7D  F00A         	goto	l169
  1976  001446                     u640:
  1977  001446  EF68  F00A         	goto	l1672
  1978  00144A                     l1666:
  1979                           
  1980                           ;mcal/gpio/mcal_gpio.c: 101:                 (*lat_register[port] &= ~(1U << pin)); brea
      +                          k;
  1981  00144A  C001  F003         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  1982  00144E  0E01               	movlw	1
  1983  001450  6E04               	movwf	(??_gpio_pin_write_value+1)^0,c
  1984  001452  2A03               	incf	??_gpio_pin_write_value^0,f,c
  1985  001454  EF2E  F00A         	goto	u654
  1986  001458                     u655:
  1987  001458  90D8               	bcf	status,0,c
  1988  00145A  3604               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  1989  00145C                     u654:
  1990  00145C  2E03               	decfsz	??_gpio_pin_write_value^0,f,c
  1991  00145E  EF2C  F00A         	goto	u655
  1992  001462  5004               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1993  001464  0AFF               	xorlw	255
  1994  001466  6E05               	movwf	(??_gpio_pin_write_value+2)^0,c
  1995  001468  5009               	movf	gpio_pin_write_value@port^0,w,c
  1996  00146A  0D02               	mullw	2
  1997  00146C  0E34               	movlw	low _lat_register
  1998  00146E  24F3               	addwf	243,w,c
  1999  001470  6ED9               	movwf	fsr2l,c
  2000  001472  0E00               	movlw	high _lat_register
  2001  001474  20F4               	addwfc	prodh,w,c
  2002  001476  6EDA               	movwf	fsr2h,c
  2003  001478  CFDE F006          	movff	postinc2,??_gpio_pin_write_value+3
  2004  00147C  CFDD F007          	movff	postdec2,??_gpio_pin_write_value+4
  2005  001480  C006  FFD9         	movff	??_gpio_pin_write_value+3,fsr2l
  2006  001484  C007  FFDA         	movff	??_gpio_pin_write_value+4,fsr2h
  2007  001488  5005               	movf	(??_gpio_pin_write_value+2)^0,w,c
  2008  00148A  16DF               	andwf	indf2,f,c
  2009  00148C  EF7D  F00A         	goto	l1674
  2010  001490                     l1668:
  2011                           
  2012                           ;mcal/gpio/mcal_gpio.c: 104:                 (*lat_register[port] |= (1U << pin)); break
      +                          ;
  2013  001490  C001  F003         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  2014  001494  0E01               	movlw	1
  2015  001496  6E04               	movwf	(??_gpio_pin_write_value+1)^0,c
  2016  001498  2A03               	incf	??_gpio_pin_write_value^0,f,c
  2017  00149A  EF51  F00A         	goto	u664
  2018  00149E                     u665:
  2019  00149E  90D8               	bcf	status,0,c
  2020  0014A0  3604               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  2021  0014A2                     u664:
  2022  0014A2  2E03               	decfsz	??_gpio_pin_write_value^0,f,c
  2023  0014A4  EF4F  F00A         	goto	u665
  2024  0014A8  5009               	movf	gpio_pin_write_value@port^0,w,c
  2025  0014AA  0D02               	mullw	2
  2026  0014AC  0E34               	movlw	low _lat_register
  2027  0014AE  24F3               	addwf	243,w,c
  2028  0014B0  6ED9               	movwf	fsr2l,c
  2029  0014B2  0E00               	movlw	high _lat_register
  2030  0014B4  20F4               	addwfc	prodh,w,c
  2031  0014B6  6EDA               	movwf	fsr2h,c
  2032  0014B8  CFDE F005          	movff	postinc2,??_gpio_pin_write_value+2
  2033  0014BC  CFDD F006          	movff	postdec2,??_gpio_pin_write_value+3
  2034  0014C0  C005  FFD9         	movff	??_gpio_pin_write_value+2,fsr2l
  2035  0014C4  C006  FFDA         	movff	??_gpio_pin_write_value+3,fsr2h
  2036  0014C8  5004               	movf	(??_gpio_pin_write_value+1)^0,w,c
  2037  0014CA  12DF               	iorwf	indf2,f,c
  2038  0014CC  EF7D  F00A         	goto	l1674
  2039  0014D0                     l1672:
  2040  0014D0  5002               	movf	gpio_pin_write_value@logic^0,w,c
  2041  0014D2  6E03               	movwf	??_gpio_pin_write_value^0,c
  2042  0014D4  6A04               	clrf	(??_gpio_pin_write_value+1)^0,c
  2043                           
  2044                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2045                           ; Switch size 1, requested type "simple"
  2046                           ; Number of cases is 1, Range of values is 0 to 0
  2047                           ; switch strategies available:
  2048                           ; Name         Instructions Cycles
  2049                           ; simple_byte            4     3 (average)
  2050                           ;	Chosen strategy is simple_byte
  2051  0014D6  5004               	movf	(??_gpio_pin_write_value+1)^0,w,c
  2052  0014D8  0A00               	xorlw	0	; case 0
  2053  0014DA  B4D8               	btfsc	status,2,c
  2054  0014DC  EF72  F00A         	goto	l2140
  2055  0014E0  EF7D  F00A         	goto	l169
  2056  0014E4                     l2140:
  2057                           
  2058                           ; Switch size 1, requested type "simple"
  2059                           ; Number of cases is 2, Range of values is 0 to 1
  2060                           ; switch strategies available:
  2061                           ; Name         Instructions Cycles
  2062                           ; simple_byte            7     4 (average)
  2063                           ;	Chosen strategy is simple_byte
  2064  0014E4  5003               	movf	??_gpio_pin_write_value^0,w,c
  2065  0014E6  0A00               	xorlw	0	; case 0
  2066  0014E8  B4D8               	btfsc	status,2,c
  2067  0014EA  EF25  F00A         	goto	l1666
  2068  0014EE  0A01               	xorlw	1	; case 1
  2069  0014F0  B4D8               	btfsc	status,2,c
  2070  0014F2  EF48  F00A         	goto	l1668
  2071  0014F6  EF7D  F00A         	goto	l169
  2072  0014FA                     l1674:
  2073  0014FA                     l169:
  2074  0014FA  0012               	return		;funcret
  2075  0014FC                     __end_of_gpio_pin_write_value:
  2076                           	opt callstack 0
  2077                           
  2078 ;; *************** function _gpio_port_write_value *****************
  2079 ;; Defined at:
  2080 ;;		line 206 in file "mcal/gpio/mcal_gpio.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  port            1    wreg     enum E2460
  2083 ;;  value           1    0[COMRAM] unsigned char 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  port            1    4[COMRAM] enum E2460
  2086 ;;  ret             1    0        enum E2438
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      enum E2438
  2089 ;; Registers used:
  2090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2096 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;Total ram usage:        5 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_lcd_8bit_intialize
  2106 ;;		_lcd_send_command
  2107 ;;		_lcd_send_char_data
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text12
  2112  00197C                     __ptext12:
  2113                           	opt callstack 0
  2114  00197C                     _gpio_port_write_value:
  2115                           	opt callstack 27
  2116                           
  2117                           ;incstack = 0
  2118                           ;gpio_port_write_value@port stored from wreg
  2119  00197C  6E05               	movwf	gpio_port_write_value@port^0,c
  2120  00197E                     
  2121                           ;mcal/gpio/mcal_gpio.c: 208:     if(port > 5U -1){
  2122  00197E  0E04               	movlw	4
  2123  001980  6405               	cpfsgt	gpio_port_write_value@port^0,c
  2124  001982  EFC5  F00C         	goto	u671
  2125  001986  EFC7  F00C         	goto	u670
  2126  00198A                     u671:
  2127  00198A  EFC9  F00C         	goto	l1690
  2128  00198E                     u670:
  2129  00198E  EFDB  F00C         	goto	l210
  2130  001992                     l1690:
  2131                           
  2132                           ;mcal/gpio/mcal_gpio.c: 212:         *lat_register[port] = value;
  2133  001992  5005               	movf	gpio_port_write_value@port^0,w,c
  2134  001994  0D02               	mullw	2
  2135  001996  0E34               	movlw	low _lat_register
  2136  001998  24F3               	addwf	243,w,c
  2137  00199A  6ED9               	movwf	fsr2l,c
  2138  00199C  0E00               	movlw	high _lat_register
  2139  00199E  20F4               	addwfc	prodh,w,c
  2140  0019A0  6EDA               	movwf	fsr2h,c
  2141  0019A2  CFDE F002          	movff	postinc2,??_gpio_port_write_value
  2142  0019A6  CFDD F003          	movff	postdec2,??_gpio_port_write_value+1
  2143  0019AA  C002  FFD9         	movff	??_gpio_port_write_value,fsr2l
  2144  0019AE  C003  FFDA         	movff	??_gpio_port_write_value+1,fsr2h
  2145  0019B2  C001  FFDF         	movff	gpio_port_write_value@value,indf2
  2146  0019B6                     l210:
  2147  0019B6  0012               	return		;funcret
  2148  0019B8                     __end_of_gpio_port_write_value:
  2149                           	opt callstack 0
  2150                           
  2151 ;; *************** function _gpio_port_direction_intialize *****************
  2152 ;; Defined at:
  2153 ;;		line 160 in file "mcal/gpio/mcal_gpio.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  port            1    wreg     enum E2460
  2156 ;;  direction       1    0[COMRAM] enum E2446
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  port            1    4[COMRAM] enum E2460
  2159 ;;  ret             1    0        enum E2438
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      enum E2438
  2162 ;; Registers used:
  2163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2169 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;Total ram usage:        5 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_lcd_8bit_intialize
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text13
  2183  0016F4                     __ptext13:
  2184                           	opt callstack 0
  2185  0016F4                     _gpio_port_direction_intialize:
  2186                           	opt callstack 27
  2187                           
  2188                           ;incstack = 0
  2189                           ;gpio_port_direction_intialize@port stored from wreg
  2190  0016F4  6E05               	movwf	gpio_port_direction_intialize@port^0,c
  2191  0016F6                     
  2192                           ;mcal/gpio/mcal_gpio.c: 162:     if(port > 5U -1){
  2193  0016F6  0E04               	movlw	4
  2194  0016F8  6405               	cpfsgt	gpio_port_direction_intialize@port^0,c
  2195  0016FA  EF81  F00B         	goto	u711
  2196  0016FE  EF83  F00B         	goto	u710
  2197  001702                     u711:
  2198  001702  EFAD  F00B         	goto	l1740
  2199  001706                     u710:
  2200  001706  EFC2  F00B         	goto	l193
  2201  00170A                     l1734:
  2202                           
  2203                           ;mcal/gpio/mcal_gpio.c: 168:                 *tris_register[port] = 0x00U;
  2204  00170A  5005               	movf	gpio_port_direction_intialize@port^0,w,c
  2205  00170C  0D02               	mullw	2
  2206  00170E  0E3E               	movlw	low _tris_register
  2207  001710  24F3               	addwf	243,w,c
  2208  001712  6ED9               	movwf	fsr2l,c
  2209  001714  0E00               	movlw	high _tris_register
  2210  001716  20F4               	addwfc	prodh,w,c
  2211  001718  6EDA               	movwf	fsr2h,c
  2212  00171A  CFDE F002          	movff	postinc2,??_gpio_port_direction_intialize
  2213  00171E  CFDD F003          	movff	postdec2,??_gpio_port_direction_intialize+1
  2214  001722  C002  FFD9         	movff	??_gpio_port_direction_intialize,fsr2l
  2215  001726  C003  FFDA         	movff	??_gpio_port_direction_intialize+1,fsr2h
  2216  00172A  0E00               	movlw	0
  2217  00172C  6EDF               	movwf	indf2,c
  2218                           
  2219                           ;mcal/gpio/mcal_gpio.c: 169:                 break;
  2220  00172E  EFC2  F00B         	goto	l1742
  2221  001732                     l1736:
  2222                           
  2223                           ;mcal/gpio/mcal_gpio.c: 171:                 *tris_register[port] = 0xFFU;
  2224  001732  5005               	movf	gpio_port_direction_intialize@port^0,w,c
  2225  001734  0D02               	mullw	2
  2226  001736  0E3E               	movlw	low _tris_register
  2227  001738  24F3               	addwf	243,w,c
  2228  00173A  6ED9               	movwf	fsr2l,c
  2229  00173C  0E00               	movlw	high _tris_register
  2230  00173E  20F4               	addwfc	prodh,w,c
  2231  001740  6EDA               	movwf	fsr2h,c
  2232  001742  CFDE F002          	movff	postinc2,??_gpio_port_direction_intialize
  2233  001746  CFDD F003          	movff	postdec2,??_gpio_port_direction_intialize+1
  2234  00174A  C002  FFD9         	movff	??_gpio_port_direction_intialize,fsr2l
  2235  00174E  C003  FFDA         	movff	??_gpio_port_direction_intialize+1,fsr2h
  2236  001752  0EFF               	movlw	255
  2237  001754  6EDF               	movwf	indf2,c
  2238                           
  2239                           ;mcal/gpio/mcal_gpio.c: 172:                 break;
  2240  001756  EFC2  F00B         	goto	l1742
  2241  00175A                     l1740:
  2242  00175A  5001               	movf	gpio_port_direction_intialize@direction^0,w,c
  2243  00175C  6E02               	movwf	??_gpio_port_direction_intialize^0,c
  2244  00175E  6A03               	clrf	(??_gpio_port_direction_intialize+1)^0,c
  2245                           
  2246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2247                           ; Switch size 1, requested type "simple"
  2248                           ; Number of cases is 1, Range of values is 0 to 0
  2249                           ; switch strategies available:
  2250                           ; Name         Instructions Cycles
  2251                           ; simple_byte            4     3 (average)
  2252                           ;	Chosen strategy is simple_byte
  2253  001760  5003               	movf	(??_gpio_port_direction_intialize+1)^0,w,c
  2254  001762  0A00               	xorlw	0	; case 0
  2255  001764  B4D8               	btfsc	status,2,c
  2256  001766  EFB7  F00B         	goto	l2142
  2257  00176A  EFC2  F00B         	goto	l193
  2258  00176E                     l2142:
  2259                           
  2260                           ; Switch size 1, requested type "simple"
  2261                           ; Number of cases is 2, Range of values is 0 to 1
  2262                           ; switch strategies available:
  2263                           ; Name         Instructions Cycles
  2264                           ; simple_byte            7     4 (average)
  2265                           ;	Chosen strategy is simple_byte
  2266  00176E  5002               	movf	??_gpio_port_direction_intialize^0,w,c
  2267  001770  0A00               	xorlw	0	; case 0
  2268  001772  B4D8               	btfsc	status,2,c
  2269  001774  EF85  F00B         	goto	l1734
  2270  001778  0A01               	xorlw	1	; case 1
  2271  00177A  B4D8               	btfsc	status,2,c
  2272  00177C  EF99  F00B         	goto	l1736
  2273  001780  EFC2  F00B         	goto	l193
  2274  001784                     l1742:
  2275  001784                     l193:
  2276  001784  0012               	return		;funcret
  2277  001786                     __end_of_gpio_port_direction_intialize:
  2278                           	opt callstack 0
  2279                           
  2280 ;; *************** function _gpio_pin_direction_intialize *****************
  2281 ;; Defined at:
  2282 ;;		line 42 in file "mcal/gpio/mcal_gpio.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  port            1    wreg     enum E2460
  2285 ;;  pin             1    0[COMRAM] enum E2450
  2286 ;;  direction       1    1[COMRAM] enum E2446
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  port            1    8[COMRAM] enum E2460
  2289 ;;  ret             1    0        enum E2438
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      enum E2438
  2292 ;; Registers used:
  2293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;Total ram usage:        9 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_lcd_8bit_intialize
  2309 ;;		_button_initialize
  2310 ;;		_led_initialize
  2311 ;;		_relay_initialize
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text14
  2316  0014FC                     __ptext14:
  2317                           	opt callstack 0
  2318  0014FC                     _gpio_pin_direction_intialize:
  2319                           	opt callstack 27
  2320                           
  2321                           ;incstack = 0
  2322                           ;gpio_pin_direction_intialize@port stored from wreg
  2323  0014FC  6E09               	movwf	gpio_pin_direction_intialize@port^0,c
  2324  0014FE                     
  2325                           ;mcal/gpio/mcal_gpio.c: 45:     if((pin > 8U -1) || (pin < 0)){
  2326  0014FE  0E08               	movlw	8
  2327  001500  6001               	cpfslt	gpio_pin_direction_intialize@pin^0,c
  2328  001502  EF85  F00A         	goto	u681
  2329  001506  EF87  F00A         	goto	u680
  2330  00150A                     u681:
  2331  00150A  EFE1  F00A         	goto	l150
  2332  00150E                     u680:
  2333  00150E  EFCC  F00A         	goto	l1716
  2334  001512                     l1710:
  2335                           
  2336                           ;mcal/gpio/mcal_gpio.c: 52:                 (*tris_register[port] &= ~(1U << pin)); brea
      +                          k;
  2337  001512  C001  F003         	movff	gpio_pin_direction_intialize@pin,??_gpio_pin_direction_intialize
  2338  001516  0E01               	movlw	1
  2339  001518  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2340  00151A  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  2341  00151C  EF92  F00A         	goto	u694
  2342  001520                     u695:
  2343  001520  90D8               	bcf	status,0,c
  2344  001522  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2345  001524                     u694:
  2346  001524  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2347  001526  EF90  F00A         	goto	u695
  2348  00152A  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2349  00152C  0AFF               	xorlw	255
  2350  00152E  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2351  001530  5009               	movf	gpio_pin_direction_intialize@port^0,w,c
  2352  001532  0D02               	mullw	2
  2353  001534  0E3E               	movlw	low _tris_register
  2354  001536  24F3               	addwf	243,w,c
  2355  001538  6ED9               	movwf	fsr2l,c
  2356  00153A  0E00               	movlw	high _tris_register
  2357  00153C  20F4               	addwfc	prodh,w,c
  2358  00153E  6EDA               	movwf	fsr2h,c
  2359  001540  CFDE F006          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2360  001544  CFDD F007          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2361  001548  C006  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2362  00154C  C007  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2363  001550  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2364  001552  16DF               	andwf	indf2,f,c
  2365  001554  EFE1  F00A         	goto	l1718
  2366  001558                     l1712:
  2367                           
  2368                           ;mcal/gpio/mcal_gpio.c: 55:                 (*tris_register[port] |= (1U << pin)); break
      +                          ;
  2369  001558  C001  F003         	movff	gpio_pin_direction_intialize@pin,??_gpio_pin_direction_intialize
  2370  00155C  0E01               	movlw	1
  2371  00155E  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2372  001560  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  2373  001562  EFB5  F00A         	goto	u704
  2374  001566                     u705:
  2375  001566  90D8               	bcf	status,0,c
  2376  001568  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2377  00156A                     u704:
  2378  00156A  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2379  00156C  EFB3  F00A         	goto	u705
  2380  001570  5009               	movf	gpio_pin_direction_intialize@port^0,w,c
  2381  001572  0D02               	mullw	2
  2382  001574  0E3E               	movlw	low _tris_register
  2383  001576  24F3               	addwf	243,w,c
  2384  001578  6ED9               	movwf	fsr2l,c
  2385  00157A  0E00               	movlw	high _tris_register
  2386  00157C  20F4               	addwfc	prodh,w,c
  2387  00157E  6EDA               	movwf	fsr2h,c
  2388  001580  CFDE F005          	movff	postinc2,??_gpio_pin_direction_intialize+2
  2389  001584  CFDD F006          	movff	postdec2,??_gpio_pin_direction_intialize+3
  2390  001588  C005  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  2391  00158C  C006  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  2392  001590  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2393  001592  12DF               	iorwf	indf2,f,c
  2394  001594  EFE1  F00A         	goto	l1718
  2395  001598                     l1716:
  2396  001598  5002               	movf	gpio_pin_direction_intialize@direction^0,w,c
  2397  00159A  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  2398  00159C  6A04               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  2399                           
  2400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2401                           ; Switch size 1, requested type "simple"
  2402                           ; Number of cases is 1, Range of values is 0 to 0
  2403                           ; switch strategies available:
  2404                           ; Name         Instructions Cycles
  2405                           ; simple_byte            4     3 (average)
  2406                           ;	Chosen strategy is simple_byte
  2407  00159E  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2408  0015A0  0A00               	xorlw	0	; case 0
  2409  0015A2  B4D8               	btfsc	status,2,c
  2410  0015A4  EFD6  F00A         	goto	l2144
  2411  0015A8  EFE1  F00A         	goto	l150
  2412  0015AC                     l2144:
  2413                           
  2414                           ; Switch size 1, requested type "simple"
  2415                           ; Number of cases is 2, Range of values is 0 to 1
  2416                           ; switch strategies available:
  2417                           ; Name         Instructions Cycles
  2418                           ; simple_byte            7     4 (average)
  2419                           ;	Chosen strategy is simple_byte
  2420  0015AC  5003               	movf	??_gpio_pin_direction_intialize^0,w,c
  2421  0015AE  0A00               	xorlw	0	; case 0
  2422  0015B0  B4D8               	btfsc	status,2,c
  2423  0015B2  EF89  F00A         	goto	l1710
  2424  0015B6  0A01               	xorlw	1	; case 1
  2425  0015B8  B4D8               	btfsc	status,2,c
  2426  0015BA  EFAC  F00A         	goto	l1712
  2427  0015BE  EFE1  F00A         	goto	l150
  2428  0015C2                     l1718:
  2429  0015C2                     l150:
  2430  0015C2  0012               	return		;funcret
  2431  0015C4                     __end_of_gpio_pin_direction_intialize:
  2432                           	opt callstack 0
  2433                           
  2434                           	psect	rparam
  2435  0000                     tosu	equ	0xFFF
  2436                           tosh	equ	0xFFE
  2437                           tosl	equ	0xFFD
  2438                           stkptr	equ	0xFFC
  2439                           pclatu	equ	0xFFB
  2440                           pclath	equ	0xFFA
  2441                           pcl	equ	0xFF9
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           prodh	equ	0xFF4
  2447                           prodl	equ	0xFF3
  2448                           indf0	equ	0xFEF
  2449                           postinc0	equ	0xFEE
  2450                           postdec0	equ	0xFED
  2451                           preinc0	equ	0xFEC
  2452                           plusw0	equ	0xFEB
  2453                           fsr0h	equ	0xFEA
  2454                           fsr0l	equ	0xFE9
  2455                           wreg	equ	0xFE8
  2456                           indf1	equ	0xFE7
  2457                           postinc1	equ	0xFE6
  2458                           postdec1	equ	0xFE5
  2459                           preinc1	equ	0xFE4
  2460                           plusw1	equ	0xFE3
  2461                           fsr1h	equ	0xFE2
  2462                           fsr1l	equ	0xFE1
  2463                           bsr	equ	0xFE0
  2464                           indf2	equ	0xFDF
  2465                           postinc2	equ	0xFDE
  2466                           postdec2	equ	0xFDD
  2467                           preinc2	equ	0xFDC
  2468                           plusw2	equ	0xFDB
  2469                           fsr2h	equ	0xFDA
  2470                           fsr2l	equ	0xFD9
  2471                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    104
    Data        34
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     41      75
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S1024_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    f.buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_send_custome_char@arr	PTR const unsigned char  size(2) Largest target is 8
		 -> mesg2(CODE[8]), mesg1(CODE[8]), shab_bat3(CODE[8]), shab_bat2(CODE[8]), 
		 -> shab_bat1(CODE[8]), Shab(CODE[8]), blt(CODE[8]), character6(CODE[8]), 

    lcd_send_custome_char@_lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_send_string_data_pos@_data	PTR unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[11]), STR_3(CODE[5]), 
		 -> STR_2(CODE[9]), STR_1(CODE[11]), 

    lcd_send_string_data_pos@_lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_send_char_data_pos@_lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_send_char_data@_lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_send_command@_lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_intialize@_lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_8bit_intialize@_lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_set_cursor@_lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    lcd_send_enable@_lcd	PTR const struct . size(2) Largest target is 4
		 -> lcd_1(COMRAM[4]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_send_custome_char
    _lcd_send_string_data_pos->_lcd_set_cursor
    _lcd_send_custome_char->_lcd_send_char_data_pos
    _lcd_send_char_data_pos->_lcd_set_cursor
    _lcd_set_cursor->_lcd_send_command
    _lcd_send_char_data->_lcd_send_enable
    _application_init->_lcd_intialize
    _lcd_intialize->_lcd_8bit_intialize
    _lcd_8bit_intialize->_lcd_send_command
    _lcd_send_command->_lcd_send_enable
    _lcd_send_enable->_gpio_pin_write_value

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   71746
                                             39 COMRAM     2     2      0
                   _application_init
              _lcd_send_custome_char
           _lcd_send_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string_data_pos                             7     1      6   22634
                                             22 COMRAM     7     1      6
                 _lcd_send_char_data
                   _lcd_send_command
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_send_custome_char                               11     4      7   37794
                                             28 COMRAM    11     4      7
                 _lcd_send_char_data
             _lcd_send_char_data_pos
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_send_char_data_pos                               6     1      5   21091
                                             22 COMRAM     6     1      5
                 _lcd_send_char_data
                   _lcd_send_command
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       6     2      4    8019
                                             16 COMRAM     6     2      4
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_send_char_data                                   4     1      3    5236
                                             11 COMRAM     4     1      3
               _gpio_pin_write_value
              _gpio_port_write_value
                    _lcd_send_enable
 ---------------------------------------------------------------------------------
 (1) _application_init                                     0     0      0   11318
                      _lcd_intialize
 ---------------------------------------------------------------------------------
 (2) _lcd_intialize                                        2     0      2   11318
                                             19 COMRAM     2     0      2
                 _lcd_8bit_intialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_intialize                                   3     1      2   11220
                                             16 COMRAM     3     1      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_value
      _gpio_port_direction_intialize
              _gpio_port_write_value
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     5     2      3    7364
                                             11 COMRAM     5     2      3
               _gpio_pin_write_value
              _gpio_port_write_value
                    _lcd_send_enable
 ---------------------------------------------------------------------------------
 (4) _lcd_send_enable                                      2     0      2    2210
                                              9 COMRAM     2     0      2
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_value                                 9     7      2    1970
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _gpio_port_write_value                                5     4      1     302
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (4) _gpio_port_direction_intialize                        5     4      1     184
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         9     7      2     906
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_init
     _lcd_intialize
       _lcd_8bit_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_value
         _gpio_port_direction_intialize
         _gpio_port_write_value
         _lcd_send_command
           _gpio_pin_write_value
           _gpio_port_write_value
           _lcd_send_enable
             _gpio_pin_write_value
   _lcd_send_custome_char
     _lcd_send_char_data
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
     _lcd_send_char_data_pos
       _lcd_send_char_data
         _gpio_pin_write_value
         _gpio_port_write_value
         _lcd_send_enable
           _gpio_pin_write_value
       _lcd_send_command
         _gpio_pin_write_value
         _gpio_port_write_value
         _lcd_send_enable
           _gpio_pin_write_value
       _lcd_set_cursor
         _lcd_send_command
           _gpio_pin_write_value
           _gpio_port_write_value
           _lcd_send_enable
             _gpio_pin_write_value
     _lcd_send_command
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
   _lcd_send_string_data_pos
     _lcd_send_char_data
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
     _lcd_send_command
       _gpio_pin_write_value
       _gpio_port_write_value
       _lcd_send_enable
         _gpio_pin_write_value
     _lcd_set_cursor
       _lcd_send_command
         _gpio_pin_write_value
         _gpio_port_write_value
         _lcd_send_enable
           _gpio_pin_write_value

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     29      4B       1       59.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B      34        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 07 12:29:13 2020

          lcd_send_char_data_pos@coulmn 001A                   _lcd_send_custome_char 165E  
            ??_lcd_send_string_data_pos 001D                             __CFG_BORV$1 000000  
                          __CFG_CP0$OFF 000000                            __CFG_CP1$OFF 000000  
                          __CFG_CP2$OFF 000000                            __CFG_CP3$OFF 000000  
                           __CFG_OSC$HS 000000                                     l210 19B6  
                                   l150 15C2                                     l302 1432  
                                   l305 1A1E                                     l314 18D8  
                                   l340 16F2                                     l332 1806  
                                   l309 1876                                     l319 197A  
                                   l272 1A10                                     l193 1784  
                                   l169 14FA                                     l289 192E  
                                   l299 165C                            __CFG_CPB$OFF 000000  
                          __CFG_CPD$OFF 000000                                     u710 1706  
                                   u711 1702                                     u704 156A  
                                   u640 1446                                     u720 181A  
                                   u705 1566                                     u641 1442  
                                   u721 1816                                     u730 188A  
                                   u731 1886                                     u740 1942  
                                   u741 193E                                     u670 198E  
                                   u654 145C                                     u750 1674  
                                   u671 198A                                     u655 1458  
                                   u751 1670                                     u680 150E  
                                   u664 14A2                                     u760 16CA  
                                   u681 150A                                     u665 149E  
                                   u761 16C6                                     u770 1798  
                                   u771 1794                                     u780 1806  
                                   u781 1802                                     u694 1524  
                                   u695 1520                                     _blt 1059  
                                   prod 000FF3                                     wreg 000FE8  
            __end_of_lcd_send_char_data 18DA                         ?_lcd_set_cursor 0011  
                          __CFG_LVP$OFF 000000                            __CFG_WDT$OFF 000000  
                                  l2140 14E4                                    l2060 10FA  
                                  l2052 1096                                    l2142 176E  
                                  l2070 119A                                    l2062 111A  
                                  l2054 109A                                    l2144 15AC  
                                  l2080 122E                                    l2072 11BA  
                                  l2064 113A                                    l2056 10BA  
                                  l2138 1636                                    l2082 124A  
                                  l2074 11DA                                    l2066 115A  
                                  l2058 10DA                                    l1700 1908  
                                  l2084 1266                                    l2076 11F6  
                                  l2068 117A                                    l1710 1512  
                                  l1702 14FE                                    l2086 127C  
                                  l2078 1212                                    l1712 1558  
                                  l1704 14FE                                    l1800 188E  
                                  l2088 1298                                    l1802 18D8  
                                  l1810 1930                                    l1716 1598  
                                  l1740 175A                                    l1660 1436  
                                  l1718 15C2                                    l1742 1784  
                                  l1734 170A                                    l1726 16F6  
                                  l1750 1808                                    l1806 1A12  
                                  l1822 1A04                                    l1736 1732  
                                  l1728 16F6                                    l1672 14D0  
                                  l1760 1868                                    l1752 1808  
                                  l1816 1946                                    l1808 1930  
                                  l1840 1692                                    l1832 1678  
                                  l1824 165E                                    l1690 1992  
                                  l1682 197E                                    l1674 14FA  
                                  l1666 144A                                    l1658 1436  
                                  l1762 1876                                    l1770 15E0  
                                  l1818 197A                                    l1842 16B8  
                                  l1834 168E                                    l1826 1662  
                                  l1692 19B6                                    l1684 197E  
                                  l1668 1490                                    l1772 15F6  
                                  l1844 16BA                                    l1860 179C  
                                  l1852 1786                                    l1758 181E  
                                  l1790 13BC                                    l1782 12B6  
                                  l1774 160C                                    l1766 15C4  
                                  l1846 16CA                                    l1870 1806  
                                  l1862 17C4                                    l1854 1786  
                                  l1696 18DA                                    l1784 137E  
                                  l1792 1878                                    l1768 15CA  
                                  l1776 1622                                    l1848 16F2  
                                  l1864 17DE                                    l1698 1900  
                                  l1786 138C                                    l1794 1878  
                                  l1866 17E2                                    l1788 13AC  
                                  l1868 17EA                                    STR_1 1074  
                                  STR_2 107F                                    STR_3 108D  
                                  STR_4 1069                                    STR_5 108D  
                                  STR_6 1088                                    STR_7 1092  
                      ?_lcd_send_enable 000A                                    u1107 1384  
                                  u1117 13A2                                    u1127 13BE  
                                  u1137 186E                                    u1147 1902  
                                  u1077 1270                                    _LATA 000F89  
                                  _LATB 000F8A                                    u1087 12A2  
                                  _LATC 000F8B                                    _LATD 000F8C  
                                  u1097 17E4                                    _LATE 000F8D  
                                  _Shab 1051                                    _main 1096  
                                  fsr2h 000FDA                                    indf2 000FDF  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  prodl 000FF3                                    start 0000  
                         __CFG_IESO$OFF 000000                           __CFG_MCLRE$ON 000000  
                          ___param_bank 000000               __size_of_application_init 000E  
            gpio_port_write_value@value 0001                   _gpio_port_write_value 197C  
                  _gpio_pin_write_value 1434         __size_of_lcd_send_char_data_pos 004C  
                                 ?_main 0001                       ?_lcd_send_command 000C  
                                 _PORTA 000F80                                   _PORTB 000F81  
                                 _PORTC 000F82                                   _PORTD 000F83  
                                 _PORTE 000F84                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
                         __CFG_PWRT$OFF 000000                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                         __CFG_WRT3$OFF 000000                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                      ??_lcd_send_command 000F  
                        __CFG_EBTR3$OFF 000000                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                        __CFG_EBTRB$OFF 000000                                   _lcd_1 0048  
                                 _mesg1 1031                                   _mesg2 1029  
                        __CFG_BOREN$OFF 000000                                   tablat 000FF5  
                                 status 000FD8                         ??_lcd_intialize 0016  
                        __CFG_PBADEN$ON 000000   gpio_pin_direction_intialize@direction 0002  
gpio_port_direction_intialize@direction 0001            lcd_send_string_data_pos@_lcd 0017  
                       __initialization 19B8                            __end_of_Shab 1059  
                          __end_of_main 12B6                  ?_lcd_send_custome_char 001D  
                 ?_gpio_pin_write_value 0001                                  ??_main 0028  
                         __activetblptr 000002          ?_gpio_port_direction_intialize 0001  
             lcd_send_custome_char@_lcd 001D               lcd_send_custome_char@_pos 0023  
                _lcd_send_char_data_pos 1930                           _tris_register 003E  
                        __CFG_XINST$OFF 000000                  ?_gpio_port_write_value 0001  
      __end_of_lcd_send_string_data_pos 1808                          __CFG_STVREN$ON 000000  
                          __pdataCOMRAM 002A                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8               gpio_port_write_value@port 0005  
                            __accesstop 0080                 __end_of__initialization 19D8  
                     lcd_intialize@_lcd 0014                 lcd_send_char_data@_data 000E  
                         ___rparam_used 000001           lcd_send_string_data_pos@_data 001B  
                        __pcstackCOMRAM 0001                  ??_gpio_pin_write_value 0003  
                      _application_init 1A04                           __end_of_mesg1 1039  
                         __end_of_mesg2 1031                      _lcd_8bit_intialize 12B6  
                      ??_lcd_set_cursor 0015                lcd_send_custome_char@arr 0021  
              lcd_send_custome_char@row 001F                    lcd_set_cursor@coulmn 0014  
                   ?_lcd_8bit_intialize 0011                              _character1 1021  
                            _character2 1019                              _character3 1011  
                            _character4 1009                              _character5 1001  
                            _character6 1061                      _lcd_send_char_data 1878  
                  ??_lcd_8bit_intialize 0013                     ?_lcd_send_char_data 000C  
                  lcd_send_command@_lcd 000C                    ??_lcd_send_char_data 000F  
     __size_of_lcd_send_string_data_pos 0082               ?_lcd_send_string_data_pos 0017  
             __size_of_lcd_send_command 0070                 ??_lcd_send_custome_char 0024  
                               __Hparam 0000                __size_of_lcd_send_enable 0056  
                               __Lparam 0000                            __psmallconst 1000  
                               __pcinit 19B8                                 __ramtop 1000  
                               __ptext0 1096                                 __ptext1 1786  
                               __ptext2 165E                                 __ptext3 1930  
                               __ptext4 15C4                                 __ptext5 1878  
                               __ptext6 1A04                                 __ptext7 1A12  
                               __ptext8 12B6                                 __ptext9 1808  
               ?_lcd_send_char_data_pos 0017                       __end_of_shab_bat1 1051  
                     __end_of_shab_bat2 1049                       __end_of_shab_bat3 1041  
        lcd_send_custome_char@l_counter 0027                    end_of_initialization 19D8  
                         __Lmediumconst 0000         ??_gpio_port_direction_intialize 0002  
               ??_gpio_port_write_value 0002                   __end_of_lcd_intialize 1A20  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc2 000FDE  
                lcd_8bit_intialize@_lcd 0011          __end_of_lcd_send_char_data_pos 197C  
  __end_of_gpio_pin_direction_intialize 15C4   __size_of_gpio_pin_direction_intialize 00C8  
          _gpio_pin_direction_intialize 14FC                __end_of_application_init 1A12  
        lcd_send_string_data_pos@coulmn 001A                       ??_lcd_send_enable 000C  
                         __pidataCOMRAM 19E2                     start_initialization 19B8  
                           __end_of_blt 1061           ?_gpio_pin_direction_intialize 0001  
                          _lat_register 0034                        _lcd_send_command 1808  
              gpio_pin_write_value@port 0009   __end_of_gpio_port_direction_intialize 1786  
__size_of_gpio_port_direction_intialize 0092           _gpio_port_direction_intialize 16F4  
         __size_of_gpio_pin_write_value 00C8                        __CFG_LPT1OSC$OFF 000000  
     gpio_port_direction_intialize@port 0005                  lcd_send_char_data@_lcd 000C  
                   lcd_send_enable@_lcd 000A         gpio_pin_direction_intialize@pin 0001  
                     __CFG_CCP2MX$PORTC 000000          __size_of_lcd_send_custome_char 0096  
         __end_of_lcd_send_custome_char 16F4             __size_of_lcd_8bit_intialize 017E  
                           __smallconst 1000               lcd_send_char_data_pos@row 0019  
           __size_of_lcd_send_char_data 0062                 __size_of_lcd_set_cursor 009A  
                             _shab_bat1 1049                               _shab_bat2 1041  
                             _shab_bat3 1039          ??_gpio_pin_direction_intialize 0003  
        __size_of_gpio_port_write_value 003C           __end_of_gpio_port_write_value 19B8  
                      __CFG_WDTPS$32768 000000                      __end_of_character1 1029  
                    __end_of_character2 1021                      __end_of_character3 1019  
                    __end_of_character4 1011                      __end_of_character5 1009  
                    __end_of_character6 1069                _lcd_send_string_data_pos 1786  
           lcd_send_string_data_pos@row 0019                       ?_application_init 0001  
                             copy_data0 19CC               gpio_pin_write_value@logic 0002  
                    ??_application_init 0016                         _lcd_send_enable 18DA  
                              __Hrparam 0000                 gpio_pin_write_value@pin 0001  
                              __Lrparam 0000                __end_of_lcd_send_command 1878  
                    lcd_set_cursor@_lcd 0011                  __size_of_lcd_intialize 000E  
                              __ptext10 18DA                                __ptext11 1434  
                              __ptext12 197C                                __ptext13 16F4  
                              __ptext14 14FC                           __size_of_main 0220  
           lcd_send_custome_char@coulmn 0020                 lcd_send_command@command 000E  
      gpio_pin_direction_intialize@port 0009            __end_of_gpio_pin_write_value 14FC  
               __end_of_lcd_send_enable 1930                          _lcd_set_cursor 15C4  
                     lcd_set_cursor@row 0013                           _lcd_intialize 1A12  
              ??_lcd_send_char_data_pos 001C                  __end_of_lcd_set_cursor 165E  
                         _port_register 002A              __end_of_lcd_8bit_intialize 1434  
           lcd_send_char_data_pos@_data 001B                          ?_lcd_intialize 0014  
            lcd_send_char_data_pos@_lcd 0017  
