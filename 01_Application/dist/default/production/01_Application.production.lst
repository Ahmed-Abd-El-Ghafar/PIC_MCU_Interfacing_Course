

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Oct 30 20:10:15 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28  0000                     
    29                           ; Version 2.10
    30                           ; Generated 31/07/2019 GMT
    31                           ; 
    32                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4620 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  00F976                     __pidataCOMRAM:
    66                           	opt callstack 0
    67                           
    68                           ;initializer for _port_register
    69  00F976  80                 	db	128
    70  00F977  0F                 	db	15
    71  00F978  81                 	db	129
    72  00F979  0F                 	db	15
    73  00F97A  82                 	db	130
    74  00F97B  0F                 	db	15
    75  00F97C  83                 	db	131
    76  00F97D  0F                 	db	15
    77  00F97E  84                 	db	132
    78  00F97F  0F                 	db	15
    79                           
    80                           ;initializer for _lat_register
    81  00F980  89                 	db	137
    82  00F981  0F                 	db	15
    83  00F982  8A                 	db	138
    84  00F983  0F                 	db	15
    85  00F984  8B                 	db	139
    86  00F985  0F                 	db	15
    87  00F986  8C                 	db	140
    88  00F987  0F                 	db	15
    89  00F988  8D                 	db	141
    90  00F989  0F                 	db	15
    91                           
    92                           ;initializer for _tris_register
    93  00F98A  92                 	db	146
    94  00F98B  0F                 	db	15
    95  00F98C  93                 	db	147
    96  00F98D  0F                 	db	15
    97  00F98E  94                 	db	148
    98  00F98F  0F                 	db	15
    99  00F990  95                 	db	149
   100  00F991  0F                 	db	15
   101  00F992  96                 	db	150
   102  00F993  0F                 	db	15
   103                           
   104                           ;initializer for _dc_motor1_2
   105  00F994  22                 	db	34
   106  00F995  32                 	db	50
   107                           
   108                           ;initializer for _dc_motor1_1
   109  00F996  02                 	db	2
   110  00F997  12                 	db	18
   111                           
   112                           ;initializer for _btn2
   113  00F998  13                 	db	19
   114                           
   115                           ;initializer for _btn1
   116  00F999  03                 	db	3
   117  0000                     _PORTE	set	3972
   118  0000                     _PORTD	set	3971
   119  0000                     _PORTC	set	3970
   120  0000                     _PORTB	set	3969
   121  0000                     _PORTA	set	3968
   122  0000                     _LATE	set	3981
   123  0000                     _LATD	set	3980
   124  0000                     _LATC	set	3979
   125  0000                     _LATB	set	3978
   126  0000                     _LATA	set	3977
   127  0000                     _TRISE	set	3990
   128  0000                     _TRISD	set	3989
   129  0000                     _TRISC	set	3988
   130  0000                     _TRISB	set	3987
   131  0000                     _TRISA	set	3986
   132                           
   133                           ; #config settings
   134  0000                     
   135                           	psect	cinit
   136  00F99A                     __pcinit:
   137                           	opt callstack 0
   138  00F99A                     start_initialization:
   139                           	opt callstack 0
   140  00F99A                     __initialization:
   141                           	opt callstack 0
   142                           
   143                           ; Initialize objects allocated to COMRAM (36 bytes)
   144                           ; load TBLPTR registers with __pidataCOMRAM
   145  00F99A  0E76               	movlw	low __pidataCOMRAM
   146  00F99C  6EF6               	movwf	tblptrl,c
   147  00F99E  0EF9               	movlw	high __pidataCOMRAM
   148  00F9A0  6EF7               	movwf	tblptrh,c
   149  00F9A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   150  00F9A4  6EF8               	movwf	tblptru,c
   151  00F9A6  EE00  F001         	lfsr	0,__pdataCOMRAM
   152  00F9AA  EE10 F024          	lfsr	1,36
   153  00F9AE                     copy_data0:
   154  00F9AE  0009               	tblrd		*+
   155  00F9B0  CFF5 FFEE          	movff	tablat,postinc0
   156  00F9B4  50E5               	movf	postdec1,w,c
   157  00F9B6  50E1               	movf	fsr1l,w,c
   158  00F9B8  E1FA               	bnz	copy_data0
   159                           
   160                           ; Clear objects allocated to COMRAM (2 bytes)
   161  00F9BA  6A36               	clrf	(__pbssCOMRAM+1)& (0+255),c
   162  00F9BC  6A35               	clrf	__pbssCOMRAM& (0+255),c
   163  00F9BE                     end_of_initialization:
   164                           	opt callstack 0
   165  00F9BE                     __end_of__initialization:
   166                           	opt callstack 0
   167  00F9BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168  00F9C0  6EF8               	movwf	tblptru,c
   169  00F9C2  0100               	movlb	0
   170  00F9C4  EFDE  F07E         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssCOMRAM
   173  000035                     __pbssCOMRAM:
   174                           	opt callstack 0
   175  000035                     _btn2_status:
   176                           	opt callstack 0
   177  000035                     	ds	1
   178  000036                     _btn1_status:
   179                           	opt callstack 0
   180  000036                     	ds	1
   181                           
   182                           	psect	dataCOMRAM
   183  000001                     __pdataCOMRAM:
   184                           	opt callstack 0
   185  000001                     _port_register:
   186                           	opt callstack 0
   187  000001                     	ds	10
   188  00000B                     _lat_register:
   189                           	opt callstack 0
   190  00000B                     	ds	10
   191  000015                     _tris_register:
   192                           	opt callstack 0
   193  000015                     	ds	10
   194  00001F                     _dc_motor1_2:
   195                           	opt callstack 0
   196  00001F                     	ds	2
   197  000021                     _dc_motor1_1:
   198                           	opt callstack 0
   199  000021                     	ds	2
   200  000023                     _btn2:
   201                           	opt callstack 0
   202  000023                     	ds	1
   203  000024                     _btn1:
   204                           	opt callstack 0
   205  000024                     	ds	1
   206                           
   207                           	psect	cstackCOMRAM
   208  000025                     __pcstackCOMRAM:
   209                           	opt callstack 0
   210  000025                     gpio_pin_direction_intialize@pin:
   211                           	opt callstack 0
   212  000025                     gpio_pin_write_value@pin:
   213                           	opt callstack 0
   214  000025                     gpio_pin_read_value@pin:
   215                           	opt callstack 0
   216                           
   217                           ; 1 bytes @ 0x0
   218  000025                     	ds	1
   219  000026                     gpio_pin_direction_intialize@direction:
   220                           	opt callstack 0
   221  000026                     gpio_pin_write_value@logic:
   222                           	opt callstack 0
   223  000026                     gpio_pin_read_value@logic:
   224                           	opt callstack 0
   225                           
   226                           ; 2 bytes @ 0x1
   227  000026                     	ds	1
   228  000027                     ??_gpio_pin_direction_intialize:
   229  000027                     ??_gpio_pin_write_value:
   230                           
   231                           ; 1 bytes @ 0x2
   232  000027                     	ds	1
   233  000028                     ??_gpio_pin_read_value:
   234                           
   235                           ; 1 bytes @ 0x3
   236  000028                     	ds	5
   237  00002D                     gpio_pin_direction_intialize@port:
   238                           	opt callstack 0
   239  00002D                     gpio_pin_write_value@port:
   240                           	opt callstack 0
   241  00002D                     gpio_pin_read_value@port:
   242                           	opt callstack 0
   243                           
   244                           ; 1 bytes @ 0x8
   245  00002D                     	ds	1
   246  00002E                     button_initialize@btn:
   247                           	opt callstack 0
   248  00002E                     button_get_status@btn:
   249                           	opt callstack 0
   250  00002E                     relay_initialize@relay:
   251                           	opt callstack 0
   252  00002E                     relay_turn_on@relay:
   253                           	opt callstack 0
   254  00002E                     relay_turn_off@relay:
   255                           	opt callstack 0
   256                           
   257                           ; 2 bytes @ 0x9
   258  00002E                     	ds	2
   259  000030                     ??_button_initialize:
   260  000030                     ??_relay_initialize:
   261  000030                     ??_relay_turn_on:
   262  000030                     ??_relay_turn_off:
   263  000030                     button_get_status@btn_status:
   264                           	opt callstack 0
   265                           
   266                           ; 2 bytes @ 0xB
   267  000030                     	ds	2
   268  000032                     ??_button_get_status:
   269  000032                     dc_motor_initialize@dc_mtor:
   270                           	opt callstack 0
   271  000032                     dc_motor_rotate_right@dc_mtor:
   272                           	opt callstack 0
   273  000032                     dc_motor_rotate_left@dc_mtor:
   274                           	opt callstack 0
   275  000032                     dc_motor_stop@dc_mtor:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0xD
   279  000032                     	ds	2
   280  000034                     
   281                           ; 1 bytes @ 0xF
   282  000034                     	ds	1
   283  000035                     
   284                           ; 1 bytes @ 0x10
   285 ;;
   286 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   287 ;;
   288 ;; *************** function _main *****************
   289 ;; Defined at:
   290 ;;		line 26 in file "application.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  2  206[None  ] int 
   297 ;; Registers used:
   298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;Total ram usage:        0 bytes
   309 ;; Hardware stack levels required when called:    4
   310 ;; This function calls:
   311 ;;		_button_get_status
   312 ;;		_button_initialize
   313 ;;		_dc_motor_initialize
   314 ;;		_robot_move_backward
   315 ;;		_robot_move_forward
   316 ;;		_robot_move_stop
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text0
   323  00FDBC                     __ptext0:
   324                           	opt callstack 0
   325  00FDBC                     _main:
   326                           	opt callstack 27
   327  00FDBC                     
   328                           ;application.c: 29:     dc_motor_initialize(&dc_motor1_1);
   329  00FDBC  0E21               	movlw	low _dc_motor1_1
   330  00FDBE  6E32               	movwf	dc_motor_initialize@dc_mtor^0,c
   331  00FDC0  0E00               	movlw	high _dc_motor1_1
   332  00FDC2  6E33               	movwf	(dc_motor_initialize@dc_mtor+1)^0,c
   333  00FDC4  ECE4  F07C         	call	_dc_motor_initialize	;wreg free
   334                           
   335                           ;application.c: 30:     dc_motor_initialize(&dc_motor1_2);
   336  00FDC8  0E1F               	movlw	low _dc_motor1_2
   337  00FDCA  6E32               	movwf	dc_motor_initialize@dc_mtor^0,c
   338  00FDCC  0E00               	movlw	high _dc_motor1_2
   339  00FDCE  6E33               	movwf	(dc_motor_initialize@dc_mtor+1)^0,c
   340  00FDD0  ECE4  F07C         	call	_dc_motor_initialize	;wreg free
   341                           
   342                           ;application.c: 31:     button_initialize(&btn1);
   343  00FDD4  0E24               	movlw	low _btn1
   344  00FDD6  6E2E               	movwf	button_initialize@btn^0,c
   345  00FDD8  0E00               	movlw	high _btn1
   346  00FDDA  6E2F               	movwf	(button_initialize@btn+1)^0,c
   347  00FDDC  EC84  F07D         	call	_button_initialize	;wreg free
   348                           
   349                           ;application.c: 32:     button_initialize(&btn2);
   350  00FDE0  0E23               	movlw	low _btn2
   351  00FDE2  6E2E               	movwf	button_initialize@btn^0,c
   352  00FDE4  0E00               	movlw	high _btn2
   353  00FDE6  6E2F               	movwf	(button_initialize@btn+1)^0,c
   354  00FDE8  EC84  F07D         	call	_button_initialize	;wreg free
   355  00FDEC                     l207:
   356                           
   357                           ;application.c: 43:         button_get_status(&btn1, &btn1_status);
   358  00FDEC  0E24               	movlw	low _btn1
   359  00FDEE  6E2E               	movwf	button_get_status@btn^0,c
   360  00FDF0  0E00               	movlw	high _btn1
   361  00FDF2  6E2F               	movwf	(button_get_status@btn+1)^0,c
   362  00FDF4  0E36               	movlw	low _btn1_status
   363  00FDF6  6E30               	movwf	button_get_status@btn_status^0,c
   364  00FDF8  0E00               	movlw	high _btn1_status
   365  00FDFA  6E31               	movwf	(button_get_status@btn_status+1)^0,c
   366  00FDFC  EC3F  F07E         	call	_button_get_status	;wreg free
   367                           
   368                           ;application.c: 44:         button_get_status(&btn2, &btn2_status);
   369  00FE00  0E23               	movlw	low _btn2
   370  00FE02  6E2E               	movwf	button_get_status@btn^0,c
   371  00FE04  0E00               	movlw	high _btn2
   372  00FE06  6E2F               	movwf	(button_get_status@btn+1)^0,c
   373  00FE08  0E35               	movlw	low _btn2_status
   374  00FE0A  6E30               	movwf	button_get_status@btn_status^0,c
   375  00FE0C  0E00               	movlw	high _btn2_status
   376  00FE0E  6E31               	movwf	(button_get_status@btn_status+1)^0,c
   377  00FE10  EC3F  F07E         	call	_button_get_status	;wreg free
   378  00FE14                     
   379                           ;application.c: 45:         if(btn1_status == BUTTON_PRESSED && btn2_status == BUTTON_NO
      +                          T_PRESSED){
   380  00FE14  0436               	decf	_btn1_status^0,w,c
   381  00FE16  A4D8               	btfss	status,2,c
   382  00FE18  EF10  F07F         	goto	u951
   383  00FE1C  EF12  F07F         	goto	u950
   384  00FE20                     u951:
   385  00FE20  EF1E  F07F         	goto	l1646
   386  00FE24                     u950:
   387  00FE24  5035               	movf	_btn2_status^0,w,c
   388  00FE26  A4D8               	btfss	status,2,c
   389  00FE28  EF18  F07F         	goto	u961
   390  00FE2C  EF1A  F07F         	goto	u960
   391  00FE30                     u961:
   392  00FE30  EF1E  F07F         	goto	l1646
   393  00FE34                     u960:
   394  00FE34                     
   395                           ;application.c: 46:             robot_move_forward();
   396  00FE34  ECA1  F07C         	call	_robot_move_forward	;wreg free
   397                           
   398                           ;application.c: 47:         }
   399  00FE38  EFF6  F07E         	goto	l207
   400  00FE3C                     l1646:
   401  00FE3C  0435               	decf	_btn2_status^0,w,c
   402  00FE3E  A4D8               	btfss	status,2,c
   403  00FE40  EF24  F07F         	goto	u971
   404  00FE44  EF26  F07F         	goto	u970
   405  00FE48                     u971:
   406  00FE48  EF32  F07F         	goto	l1652
   407  00FE4C                     u970:
   408  00FE4C  5036               	movf	_btn1_status^0,w,c
   409  00FE4E  A4D8               	btfss	status,2,c
   410  00FE50  EF2C  F07F         	goto	u981
   411  00FE54  EF2E  F07F         	goto	u980
   412  00FE58                     u981:
   413  00FE58  EF32  F07F         	goto	l1652
   414  00FE5C                     u980:
   415  00FE5C                     
   416                           ;application.c: 49:             robot_move_backward();
   417  00FE5C  EC94  F07C         	call	_robot_move_backward	;wreg free
   418                           
   419                           ;application.c: 50:         }
   420  00FE60  EFF6  F07E         	goto	l207
   421  00FE64                     l1652:
   422                           
   423                           ;application.c: 52:             robot_move_stop();
   424  00FE64  ECAE  F07C         	call	_robot_move_stop	;wreg free
   425  00FE68  EFF6  F07E         	goto	l207
   426  00FE6C  EF00  F000         	goto	start
   427  00FE70                     __end_of_main:
   428                           	opt callstack 0
   429                           
   430 ;; *************** function _robot_move_stop *****************
   431 ;; Defined at:
   432 ;;		line 68 in file "application.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;Total ram usage:        0 bytes
   451 ;; Hardware stack levels used:    1
   452 ;; Hardware stack levels required when called:    3
   453 ;; This function calls:
   454 ;;		_dc_motor_stop
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           	psect	text1
   461  00F95C                     __ptext1:
   462                           	opt callstack 0
   463  00F95C                     _robot_move_stop:
   464                           	opt callstack 27
   465  00F95C                     
   466                           ;application.c: 69:     dc_motor_stop(&dc_motor1_1);
   467  00F95C  0E21               	movlw	low _dc_motor1_1
   468  00F95E  6E32               	movwf	dc_motor_stop@dc_mtor^0,c
   469  00F960  0E00               	movlw	high _dc_motor1_1
   470  00F962  6E33               	movwf	(dc_motor_stop@dc_mtor+1)^0,c
   471  00F964  EC32  F07D         	call	_dc_motor_stop	;wreg free
   472                           
   473                           ;application.c: 70:     dc_motor_stop(&dc_motor1_2);
   474  00F968  0E1F               	movlw	low _dc_motor1_2
   475  00F96A  6E32               	movwf	dc_motor_stop@dc_mtor^0,c
   476  00F96C  0E00               	movlw	high _dc_motor1_2
   477  00F96E  6E33               	movwf	(dc_motor_stop@dc_mtor+1)^0,c
   478  00F970  EC32  F07D         	call	_dc_motor_stop	;wreg free
   479  00F974  0012               	return		;funcret
   480  00F976                     __end_of_robot_move_stop:
   481                           	opt callstack 0
   482                           
   483 ;; *************** function _dc_motor_stop *****************
   484 ;; Defined at:
   485 ;;		line 49 in file "ecu/dc_motor/ecu_dc_motor.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;  dc_mtor         2   13[COMRAM] PTR struct .
   488 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  ret             1    0        enum E2444
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      enum E2762
   493 ;; Registers used:
   494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;Total ram usage:        3 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    2
   507 ;; This function calls:
   508 ;;		_relay_turn_off
   509 ;; This function is called by:
   510 ;;		_robot_move_stop
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text2
   515  00FA64                     __ptext2:
   516                           	opt callstack 0
   517  00FA64                     _dc_motor_stop:
   518                           	opt callstack 27
   519  00FA64                     
   520                           ;ecu/dc_motor/ecu_dc_motor.c: 51:     if(((void*)0) == dc_mtor){
   521  00FA64  5032               	movf	dc_motor_stop@dc_mtor^0,w,c
   522  00FA66  1033               	iorwf	(dc_motor_stop@dc_mtor+1)^0,w,c
   523  00FA68  A4D8               	btfss	status,2,c
   524  00FA6A  EF39  F07D         	goto	u751
   525  00FA6E  EF3B  F07D         	goto	u750
   526  00FA72                     u751:
   527  00FA72  EF3D  F07D         	goto	l1508
   528  00FA76                     u750:
   529  00FA76  EF4B  F07D         	goto	l273
   530  00FA7A                     l1508:
   531                           
   532                           ;ecu/dc_motor/ecu_dc_motor.c: 55:         relay_turn_off(&(dc_mtor->relay1));
   533  00FA7A  C032  F02E         	movff	dc_motor_stop@dc_mtor,relay_turn_off@relay
   534  00FA7E  C033  F02F         	movff	dc_motor_stop@dc_mtor+1,relay_turn_off@relay+1
   535  00FA82  ECBF  F07D         	call	_relay_turn_off	;wreg free
   536                           
   537                           ;ecu/dc_motor/ecu_dc_motor.c: 56:         relay_turn_off(&(dc_mtor->relay2));
   538  00FA86  0E01               	movlw	1
   539  00FA88  2432               	addwf	dc_motor_stop@dc_mtor^0,w,c
   540  00FA8A  6E2E               	movwf	relay_turn_off@relay^0,c
   541  00FA8C  0E00               	movlw	0
   542  00FA8E  2033               	addwfc	(dc_motor_stop@dc_mtor+1)^0,w,c
   543  00FA90  6E2F               	movwf	(relay_turn_off@relay+1)^0,c
   544  00FA92  ECBF  F07D         	call	_relay_turn_off	;wreg free
   545  00FA96                     l273:
   546  00FA96  0012               	return		;funcret
   547  00FA98                     __end_of_dc_motor_stop:
   548                           	opt callstack 0
   549                           
   550 ;; *************** function _robot_move_forward *****************
   551 ;; Defined at:
   552 ;;		line 58 in file "application.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:    3
   573 ;; This function calls:
   574 ;;		_dc_motor_rotate_right
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text3
   581  00F942                     __ptext3:
   582                           	opt callstack 0
   583  00F942                     _robot_move_forward:
   584                           	opt callstack 27
   585  00F942                     
   586                           ;application.c: 59:     dc_motor_rotate_right(&dc_motor1_1);
   587  00F942  0E21               	movlw	low _dc_motor1_1
   588  00F944  6E32               	movwf	dc_motor_rotate_right@dc_mtor^0,c
   589  00F946  0E00               	movlw	high _dc_motor1_1
   590  00F948  6E33               	movwf	(dc_motor_rotate_right@dc_mtor+1)^0,c
   591  00F94A  EC18  F07D         	call	_dc_motor_rotate_right	;wreg free
   592                           
   593                           ;application.c: 60:     dc_motor_rotate_right(&dc_motor1_2);
   594  00F94E  0E1F               	movlw	low _dc_motor1_2
   595  00F950  6E32               	movwf	dc_motor_rotate_right@dc_mtor^0,c
   596  00F952  0E00               	movlw	high _dc_motor1_2
   597  00F954  6E33               	movwf	(dc_motor_rotate_right@dc_mtor+1)^0,c
   598  00F956  EC18  F07D         	call	_dc_motor_rotate_right	;wreg free
   599  00F95A  0012               	return		;funcret
   600  00F95C                     __end_of_robot_move_forward:
   601                           	opt callstack 0
   602                           
   603 ;; *************** function _dc_motor_rotate_right *****************
   604 ;; Defined at:
   605 ;;		line 23 in file "ecu/dc_motor/ecu_dc_motor.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;  dc_mtor         2   13[COMRAM] PTR struct .
   608 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   609 ;; Auto vars:     Size  Location     Type
   610 ;;  ret             1    0        enum E2444
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      enum E2762
   613 ;; Registers used:
   614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;Total ram usage:        3 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    2
   627 ;; This function calls:
   628 ;;		_relay_turn_off
   629 ;;		_relay_turn_on
   630 ;; This function is called by:
   631 ;;		_robot_move_forward
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text4
   636  00FA30                     __ptext4:
   637                           	opt callstack 0
   638  00FA30                     _dc_motor_rotate_right:
   639                           	opt callstack 27
   640  00FA30                     
   641                           ;ecu/dc_motor/ecu_dc_motor.c: 25:     if(((void*)0) == dc_mtor){
   642  00FA30  5032               	movf	dc_motor_rotate_right@dc_mtor^0,w,c
   643  00FA32  1033               	iorwf	(dc_motor_rotate_right@dc_mtor+1)^0,w,c
   644  00FA34  A4D8               	btfss	status,2,c
   645  00FA36  EF1F  F07D         	goto	u731
   646  00FA3A  EF21  F07D         	goto	u730
   647  00FA3E                     u731:
   648  00FA3E  EF23  F07D         	goto	l1480
   649  00FA42                     u730:
   650  00FA42  EF31  F07D         	goto	l263
   651  00FA46                     l1480:
   652                           
   653                           ;ecu/dc_motor/ecu_dc_motor.c: 29:         relay_turn_on(&(dc_mtor->relay1));
   654  00FA46  C032  F02E         	movff	dc_motor_rotate_right@dc_mtor,relay_turn_on@relay
   655  00FA4A  C033  F02F         	movff	dc_motor_rotate_right@dc_mtor+1,relay_turn_on@relay+1
   656  00FA4E  ECFF  F07D         	call	_relay_turn_on	;wreg free
   657                           
   658                           ;ecu/dc_motor/ecu_dc_motor.c: 30:         relay_turn_off(&(dc_mtor->relay2));
   659  00FA52  0E01               	movlw	1
   660  00FA54  2432               	addwf	dc_motor_rotate_right@dc_mtor^0,w,c
   661  00FA56  6E2E               	movwf	relay_turn_off@relay^0,c
   662  00FA58  0E00               	movlw	0
   663  00FA5A  2033               	addwfc	(dc_motor_rotate_right@dc_mtor+1)^0,w,c
   664  00FA5C  6E2F               	movwf	(relay_turn_off@relay+1)^0,c
   665  00FA5E  ECBF  F07D         	call	_relay_turn_off	;wreg free
   666  00FA62                     l263:
   667  00FA62  0012               	return		;funcret
   668  00FA64                     __end_of_dc_motor_rotate_right:
   669                           	opt callstack 0
   670                           
   671 ;; *************** function _robot_move_backward *****************
   672 ;; Defined at:
   673 ;;		line 63 in file "application.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    3
   694 ;; This function calls:
   695 ;;		_dc_motor_rotate_left
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text5
   702  00F928                     __ptext5:
   703                           	opt callstack 0
   704  00F928                     _robot_move_backward:
   705                           	opt callstack 27
   706  00F928                     
   707                           ;application.c: 64:     dc_motor_rotate_left(&dc_motor1_1);
   708  00F928  0E21               	movlw	low _dc_motor1_1
   709  00F92A  6E32               	movwf	dc_motor_rotate_left@dc_mtor^0,c
   710  00F92C  0E00               	movlw	high _dc_motor1_1
   711  00F92E  6E33               	movwf	(dc_motor_rotate_left@dc_mtor+1)^0,c
   712  00F930  ECFE  F07C         	call	_dc_motor_rotate_left	;wreg free
   713                           
   714                           ;application.c: 65:     dc_motor_rotate_left(&dc_motor1_2);
   715  00F934  0E1F               	movlw	low _dc_motor1_2
   716  00F936  6E32               	movwf	dc_motor_rotate_left@dc_mtor^0,c
   717  00F938  0E00               	movlw	high _dc_motor1_2
   718  00F93A  6E33               	movwf	(dc_motor_rotate_left@dc_mtor+1)^0,c
   719  00F93C  ECFE  F07C         	call	_dc_motor_rotate_left	;wreg free
   720  00F940  0012               	return		;funcret
   721  00F942                     __end_of_robot_move_backward:
   722                           	opt callstack 0
   723                           
   724 ;; *************** function _dc_motor_rotate_left *****************
   725 ;; Defined at:
   726 ;;		line 36 in file "ecu/dc_motor/ecu_dc_motor.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  dc_mtor         2   13[COMRAM] PTR struct .
   729 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  ret             1    0        enum E2444
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      enum E2762
   734 ;; Registers used:
   735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;Total ram usage:        3 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    2
   748 ;; This function calls:
   749 ;;		_relay_turn_off
   750 ;;		_relay_turn_on
   751 ;; This function is called by:
   752 ;;		_robot_move_backward
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text6
   757  00F9FC                     __ptext6:
   758                           	opt callstack 0
   759  00F9FC                     _dc_motor_rotate_left:
   760                           	opt callstack 27
   761  00F9FC                     
   762                           ;ecu/dc_motor/ecu_dc_motor.c: 38:     if(((void*)0) == dc_mtor){
   763  00F9FC  5032               	movf	dc_motor_rotate_left@dc_mtor^0,w,c
   764  00F9FE  1033               	iorwf	(dc_motor_rotate_left@dc_mtor+1)^0,w,c
   765  00FA00  A4D8               	btfss	status,2,c
   766  00FA02  EF05  F07D         	goto	u741
   767  00FA06  EF07  F07D         	goto	u740
   768  00FA0A                     u741:
   769  00FA0A  EF09  F07D         	goto	l1494
   770  00FA0E                     u740:
   771  00FA0E  EF17  F07D         	goto	l268
   772  00FA12                     l1494:
   773                           
   774                           ;ecu/dc_motor/ecu_dc_motor.c: 42:         relay_turn_off(&(dc_mtor->relay1));
   775  00FA12  C032  F02E         	movff	dc_motor_rotate_left@dc_mtor,relay_turn_off@relay
   776  00FA16  C033  F02F         	movff	dc_motor_rotate_left@dc_mtor+1,relay_turn_off@relay+1
   777  00FA1A  ECBF  F07D         	call	_relay_turn_off	;wreg free
   778                           
   779                           ;ecu/dc_motor/ecu_dc_motor.c: 43:         relay_turn_on(&(dc_mtor->relay2));
   780  00FA1E  0E01               	movlw	1
   781  00FA20  2432               	addwf	dc_motor_rotate_left@dc_mtor^0,w,c
   782  00FA22  6E2E               	movwf	relay_turn_on@relay^0,c
   783  00FA24  0E00               	movlw	0
   784  00FA26  2033               	addwfc	(dc_motor_rotate_left@dc_mtor+1)^0,w,c
   785  00FA28  6E2F               	movwf	(relay_turn_on@relay+1)^0,c
   786  00FA2A  ECFF  F07D         	call	_relay_turn_on	;wreg free
   787  00FA2E                     l268:
   788  00FA2E  0012               	return		;funcret
   789  00FA30                     __end_of_dc_motor_rotate_left:
   790                           	opt callstack 0
   791                           
   792 ;; *************** function _relay_turn_on *****************
   793 ;; Defined at:
   794 ;;		line 25 in file "ecu/realy/ecu_relay.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  relay           2    9[COMRAM] PTR struct .
   797 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  ret             1    0        enum E2444
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      enum E2444
   802 ;; Registers used:
   803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;Total ram usage:        4 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    1
   816 ;; This function calls:
   817 ;;		_gpio_pin_write_value
   818 ;; This function is called by:
   819 ;;		_dc_motor_rotate_right
   820 ;;		_dc_motor_rotate_left
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text7
   825  00FBFE                     __ptext7:
   826                           	opt callstack 0
   827  00FBFE                     _relay_turn_on:
   828                           	opt callstack 27
   829  00FBFE                     
   830                           ;ecu/realy/ecu_relay.c: 27:     if((((void*)0) == relay) || (relay->port_name > 5U -1) |
      +                          |
   831  00FBFE  502E               	movf	relay_turn_on@relay^0,w,c
   832  00FC00  102F               	iorwf	(relay_turn_on@relay+1)^0,w,c
   833  00FC02  B4D8               	btfsc	status,2,c
   834  00FC04  EF06  F07E         	goto	u641
   835  00FC08  EF08  F07E         	goto	u640
   836  00FC0C                     u641:
   837  00FC0C  EF3E  F07E         	goto	l240
   838  00FC10                     u640:
   839  00FC10  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
   840  00FC14  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
   841  00FC18  50DF               	movf	indf2,w,c
   842  00FC1A  0B0F               	andlw	15
   843  00FC1C  6E30               	movwf	??_relay_turn_on^0,c
   844  00FC1E  0E05               	movlw	5
   845  00FC20  6030               	cpfslt	??_relay_turn_on^0,c
   846  00FC22  EF15  F07E         	goto	u651
   847  00FC26  EF17  F07E         	goto	u650
   848  00FC2A                     u651:
   849  00FC2A  EF3E  F07E         	goto	l240
   850  00FC2E                     u650:
   851  00FC2E  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
   852  00FC32  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
   853  00FC36  38DF               	swapf	indf2,w,c
   854  00FC38  0B07               	andlw	7
   855  00FC3A  6E30               	movwf	??_relay_turn_on^0,c
   856  00FC3C  0E07               	movlw	7
   857  00FC3E  6430               	cpfsgt	??_relay_turn_on^0,c
   858  00FC40  EF24  F07E         	goto	u661
   859  00FC44  EF26  F07E         	goto	u660
   860  00FC48                     u661:
   861  00FC48  EF28  F07E         	goto	l1434
   862  00FC4C                     u660:
   863  00FC4C  EF3E  F07E         	goto	l240
   864  00FC50                     l1434:
   865                           
   866                           ;ecu/realy/ecu_relay.c: 32:         gpio_pin_write_value(relay->port_name, relay->pin, P
      +                          IN_HIGH);
   867  00FC50  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
   868  00FC54  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
   869  00FC58  38DF               	swapf	indf2,w,c
   870  00FC5A  0B07               	andlw	7
   871  00FC5C  6E25               	movwf	gpio_pin_write_value@pin^0,c
   872  00FC5E  0E01               	movlw	1
   873  00FC60  6E26               	movwf	gpio_pin_write_value@logic^0,c
   874  00FC62  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
   875  00FC66  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
   876  00FC6A  50DF               	movf	indf2,w,c
   877  00FC6C  0B0F               	andlw	15
   878  00FC6E  EC9C  F07F         	call	_gpio_pin_write_value
   879  00FC72                     
   880                           ;ecu/realy/ecu_relay.c: 33:         relay->relay_status = RELAY_ON;
   881  00FC72  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
   882  00FC76  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
   883  00FC7A  8EDF               	bsf	indf2,7,c
   884  00FC7C                     l240:
   885  00FC7C  0012               	return		;funcret
   886  00FC7E                     __end_of_relay_turn_on:
   887                           	opt callstack 0
   888                           
   889 ;; *************** function _relay_turn_off *****************
   890 ;; Defined at:
   891 ;;		line 39 in file "ecu/realy/ecu_relay.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  relay           2    9[COMRAM] PTR struct .
   894 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  ret             1    0        enum E2444
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      enum E2444
   899 ;; Registers used:
   900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;Total ram usage:        4 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    1
   913 ;; This function calls:
   914 ;;		_gpio_pin_write_value
   915 ;; This function is called by:
   916 ;;		_dc_motor_rotate_right
   917 ;;		_dc_motor_rotate_left
   918 ;;		_dc_motor_stop
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text8
   923  00FB7E                     __ptext8:
   924                           	opt callstack 0
   925  00FB7E                     _relay_turn_off:
   926                           	opt callstack 27
   927  00FB7E                     
   928                           ;ecu/realy/ecu_relay.c: 41:     if((((void*)0) == relay) || (relay->port_name > 5U -1) |
      +                          |
   929  00FB7E  502E               	movf	relay_turn_off@relay^0,w,c
   930  00FB80  102F               	iorwf	(relay_turn_off@relay+1)^0,w,c
   931  00FB82  B4D8               	btfsc	status,2,c
   932  00FB84  EFC6  F07D         	goto	u671
   933  00FB88  EFC8  F07D         	goto	u670
   934  00FB8C                     u671:
   935  00FB8C  EFFE  F07D         	goto	l247
   936  00FB90                     u670:
   937  00FB90  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
   938  00FB94  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
   939  00FB98  50DF               	movf	indf2,w,c
   940  00FB9A  0B0F               	andlw	15
   941  00FB9C  6E30               	movwf	??_relay_turn_off^0,c
   942  00FB9E  0E05               	movlw	5
   943  00FBA0  6030               	cpfslt	??_relay_turn_off^0,c
   944  00FBA2  EFD5  F07D         	goto	u681
   945  00FBA6  EFD7  F07D         	goto	u680
   946  00FBAA                     u681:
   947  00FBAA  EFFE  F07D         	goto	l247
   948  00FBAE                     u680:
   949  00FBAE  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
   950  00FBB2  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
   951  00FBB6  38DF               	swapf	indf2,w,c
   952  00FBB8  0B07               	andlw	7
   953  00FBBA  6E30               	movwf	??_relay_turn_off^0,c
   954  00FBBC  0E07               	movlw	7
   955  00FBBE  6430               	cpfsgt	??_relay_turn_off^0,c
   956  00FBC0  EFE4  F07D         	goto	u691
   957  00FBC4  EFE6  F07D         	goto	u690
   958  00FBC8                     u691:
   959  00FBC8  EFE8  F07D         	goto	l1452
   960  00FBCC                     u690:
   961  00FBCC  EFFE  F07D         	goto	l247
   962  00FBD0                     l1452:
   963                           
   964                           ;ecu/realy/ecu_relay.c: 46:         gpio_pin_write_value(relay->port_name, relay->pin, P
      +                          IN_LOW);
   965  00FBD0  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
   966  00FBD4  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
   967  00FBD8  38DF               	swapf	indf2,w,c
   968  00FBDA  0B07               	andlw	7
   969  00FBDC  6E25               	movwf	gpio_pin_write_value@pin^0,c
   970  00FBDE  0E00               	movlw	0
   971  00FBE0  6E26               	movwf	gpio_pin_write_value@logic^0,c
   972  00FBE2  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
   973  00FBE6  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
   974  00FBEA  50DF               	movf	indf2,w,c
   975  00FBEC  0B0F               	andlw	15
   976  00FBEE  EC9C  F07F         	call	_gpio_pin_write_value
   977  00FBF2                     
   978                           ;ecu/realy/ecu_relay.c: 47:         relay->relay_status = RELAY_OFF;
   979  00FBF2  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
   980  00FBF6  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
   981  00FBFA  9EDF               	bcf	indf2,7,c
   982  00FBFC                     l247:
   983  00FBFC  0012               	return		;funcret
   984  00FBFE                     __end_of_relay_turn_off:
   985                           	opt callstack 0
   986                           
   987 ;; *************** function _dc_motor_initialize *****************
   988 ;; Defined at:
   989 ;;		line 10 in file "ecu/dc_motor/ecu_dc_motor.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  dc_mtor         2   13[COMRAM] PTR struct .
   992 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  ret             1    0        enum E2444
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      enum E2762
   997 ;; Registers used:
   998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;Total ram usage:        3 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    2
  1011 ;; This function calls:
  1012 ;;		_relay_initialize
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text9
  1019  00F9C8                     __ptext9:
  1020                           	opt callstack 0
  1021  00F9C8                     _dc_motor_initialize:
  1022                           	opt callstack 28
  1023  00F9C8                     
  1024                           ;ecu/dc_motor/ecu_dc_motor.c: 12:     if(((void*)0) == dc_mtor){
  1025  00F9C8  5032               	movf	dc_motor_initialize@dc_mtor^0,w,c
  1026  00F9CA  1033               	iorwf	(dc_motor_initialize@dc_mtor+1)^0,w,c
  1027  00F9CC  A4D8               	btfss	status,2,c
  1028  00F9CE  EFEB  F07C         	goto	u851
  1029  00F9D2  EFED  F07C         	goto	u850
  1030  00F9D6                     u851:
  1031  00F9D6  EFEF  F07C         	goto	l1574
  1032  00F9DA                     u850:
  1033  00F9DA  EFFD  F07C         	goto	l258
  1034  00F9DE                     l1574:
  1035                           
  1036                           ;ecu/dc_motor/ecu_dc_motor.c: 16:         relay_initialize(&(dc_mtor->relay1));
  1037  00F9DE  C032  F02E         	movff	dc_motor_initialize@dc_mtor,relay_initialize@relay
  1038  00F9E2  C033  F02F         	movff	dc_motor_initialize@dc_mtor+1,relay_initialize@relay+1
  1039  00F9E6  EC8D  F07E         	call	_relay_initialize	;wreg free
  1040                           
  1041                           ;ecu/dc_motor/ecu_dc_motor.c: 17:         relay_initialize(&(dc_mtor->relay2));
  1042  00F9EA  0E01               	movlw	1
  1043  00F9EC  2432               	addwf	dc_motor_initialize@dc_mtor^0,w,c
  1044  00F9EE  6E2E               	movwf	relay_initialize@relay^0,c
  1045  00F9F0  0E00               	movlw	0
  1046  00F9F2  2033               	addwfc	(dc_motor_initialize@dc_mtor+1)^0,w,c
  1047  00F9F4  6E2F               	movwf	(relay_initialize@relay+1)^0,c
  1048  00F9F6  EC8D  F07E         	call	_relay_initialize	;wreg free
  1049  00F9FA                     l258:
  1050  00F9FA  0012               	return		;funcret
  1051  00F9FC                     __end_of_dc_motor_initialize:
  1052                           	opt callstack 0
  1053                           
  1054 ;; *************** function _relay_initialize *****************
  1055 ;; Defined at:
  1056 ;;		line 10 in file "ecu/realy/ecu_relay.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  relay           2    9[COMRAM] PTR struct .
  1059 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  ret             1    0        enum E2444
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      enum E2444
  1064 ;; Registers used:
  1065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1071 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;Total ram usage:        4 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    1
  1078 ;; This function calls:
  1079 ;;		_gpio_pin_direction_intialize
  1080 ;;		_gpio_pin_write_value
  1081 ;; This function is called by:
  1082 ;;		_dc_motor_initialize
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text10
  1087  00FD1A                     __ptext10:
  1088                           	opt callstack 0
  1089  00FD1A                     _relay_initialize:
  1090                           	opt callstack 28
  1091  00FD1A                     
  1092                           ;ecu/realy/ecu_relay.c: 12:     if((((void*)0) == relay) || (relay->port_name > 5U -1) |
      +                          |
  1093  00FD1A  502E               	movf	relay_initialize@relay^0,w,c
  1094  00FD1C  102F               	iorwf	(relay_initialize@relay+1)^0,w,c
  1095  00FD1E  B4D8               	btfsc	status,2,c
  1096  00FD20  EF94  F07E         	goto	u761
  1097  00FD24  EF96  F07E         	goto	u760
  1098  00FD28                     u761:
  1099  00FD28  EFDD  F07E         	goto	l233
  1100  00FD2C                     u760:
  1101  00FD2C  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1102  00FD30  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1103  00FD34  50DF               	movf	indf2,w,c
  1104  00FD36  0B0F               	andlw	15
  1105  00FD38  6E30               	movwf	??_relay_initialize^0,c
  1106  00FD3A  0E05               	movlw	5
  1107  00FD3C  6030               	cpfslt	??_relay_initialize^0,c
  1108  00FD3E  EFA3  F07E         	goto	u771
  1109  00FD42  EFA5  F07E         	goto	u770
  1110  00FD46                     u771:
  1111  00FD46  EFDD  F07E         	goto	l233
  1112  00FD4A                     u770:
  1113  00FD4A  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1114  00FD4E  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1115  00FD52  38DF               	swapf	indf2,w,c
  1116  00FD54  0B07               	andlw	7
  1117  00FD56  6E30               	movwf	??_relay_initialize^0,c
  1118  00FD58  0E07               	movlw	7
  1119  00FD5A  6430               	cpfsgt	??_relay_initialize^0,c
  1120  00FD5C  EFB2  F07E         	goto	u781
  1121  00FD60  EFB4  F07E         	goto	u780
  1122  00FD64                     u781:
  1123  00FD64  EFB6  F07E         	goto	l1524
  1124  00FD68                     u780:
  1125  00FD68  EFDD  F07E         	goto	l233
  1126  00FD6C                     l1524:
  1127                           
  1128                           ;ecu/realy/ecu_relay.c: 17:         gpio_pin_direction_intialize(relay->port_name, relay
      +                          ->pin, DIRECTION_OUTPUT);
  1129  00FD6C  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1130  00FD70  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1131  00FD74  38DF               	swapf	indf2,w,c
  1132  00FD76  0B07               	andlw	7
  1133  00FD78  6E25               	movwf	gpio_pin_direction_intialize@pin^0,c
  1134  00FD7A  0E00               	movlw	0
  1135  00FD7C  6E26               	movwf	gpio_pin_direction_intialize@direction^0,c
  1136  00FD7E  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1137  00FD82  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1138  00FD86  50DF               	movf	indf2,w,c
  1139  00FD88  0B0F               	andlw	15
  1140  00FD8A  EC38  F07F         	call	_gpio_pin_direction_intialize
  1141                           
  1142                           ;ecu/realy/ecu_relay.c: 18:         gpio_pin_write_value(relay->port_name, relay->pin, P
      +                          IN_LOW);
  1143  00FD8E  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1144  00FD92  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1145  00FD96  38DF               	swapf	indf2,w,c
  1146  00FD98  0B07               	andlw	7
  1147  00FD9A  6E25               	movwf	gpio_pin_write_value@pin^0,c
  1148  00FD9C  0E00               	movlw	0
  1149  00FD9E  6E26               	movwf	gpio_pin_write_value@logic^0,c
  1150  00FDA0  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1151  00FDA4  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1152  00FDA8  50DF               	movf	indf2,w,c
  1153  00FDAA  0B0F               	andlw	15
  1154  00FDAC  EC9C  F07F         	call	_gpio_pin_write_value
  1155  00FDB0                     
  1156                           ;ecu/realy/ecu_relay.c: 19:         relay->relay_status = RELAY_OFF;
  1157  00FDB0  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1158  00FDB4  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1159  00FDB8  9EDF               	bcf	indf2,7,c
  1160  00FDBA                     l233:
  1161  00FDBA  0012               	return		;funcret
  1162  00FDBC                     __end_of_relay_initialize:
  1163                           	opt callstack 0
  1164                           
  1165 ;; *************** function _gpio_pin_write_value *****************
  1166 ;; Defined at:
  1167 ;;		line 92 in file "mcal/gpio/mcal_gpio.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  port            1    wreg     enum E2466
  1170 ;;  pin             1    0[COMRAM] enum E2456
  1171 ;;  logic           1    1[COMRAM] enum E2448
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  port            1    8[COMRAM] enum E2466
  1174 ;;  ret             1    0        enum E2444
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      enum E2444
  1177 ;; Registers used:
  1178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;Total ram usage:        9 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_relay_initialize
  1194 ;;		_relay_turn_on
  1195 ;;		_relay_turn_off
  1196 ;;		_led_initialize
  1197 ;;		_led_turn_on
  1198 ;;		_led_turn_off
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text11
  1203  00FF38                     __ptext11:
  1204                           	opt callstack 0
  1205  00FF38                     _gpio_pin_write_value:
  1206                           	opt callstack 27
  1207                           
  1208                           ;incstack = 0
  1209                           ;gpio_pin_write_value@port stored from wreg
  1210  00FF38  6E2D               	movwf	gpio_pin_write_value@port^0,c
  1211  00FF3A                     
  1212                           ;mcal/gpio/mcal_gpio.c: 94:     if(pin > 8U -1 || pin < 0){
  1213  00FF3A  0E08               	movlw	8
  1214  00FF3C  6025               	cpfslt	gpio_pin_write_value@pin^0,c
  1215  00FF3E  EFA3  F07F         	goto	u581
  1216  00FF42  EFA5  F07F         	goto	u580
  1217  00FF46                     u581:
  1218  00FF46  EFFF  F07F         	goto	l118
  1219  00FF4A                     u580:
  1220  00FF4A  EFEA  F07F         	goto	l1390
  1221  00FF4E                     l1384:
  1222                           
  1223                           ;mcal/gpio/mcal_gpio.c: 101:                 (*lat_register[port] &= ~(1U << pin)); brea
      +                          k;
  1224  00FF4E  C025  F027         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  1225  00FF52  0E01               	movlw	1
  1226  00FF54  6E28               	movwf	(??_gpio_pin_write_value+1)^0,c
  1227  00FF56  2A27               	incf	??_gpio_pin_write_value^0,f,c
  1228  00FF58  EFB0  F07F         	goto	u594
  1229  00FF5C                     u595:
  1230  00FF5C  90D8               	bcf	status,0,c
  1231  00FF5E  3628               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  1232  00FF60                     u594:
  1233  00FF60  2E27               	decfsz	??_gpio_pin_write_value^0,f,c
  1234  00FF62  EFAE  F07F         	goto	u595
  1235  00FF66  5028               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1236  00FF68  0AFF               	xorlw	255
  1237  00FF6A  6E29               	movwf	(??_gpio_pin_write_value+2)^0,c
  1238  00FF6C  502D               	movf	gpio_pin_write_value@port^0,w,c
  1239  00FF6E  0D02               	mullw	2
  1240  00FF70  0E0B               	movlw	low _lat_register
  1241  00FF72  24F3               	addwf	243,w,c
  1242  00FF74  6ED9               	movwf	fsr2l,c
  1243  00FF76  0E00               	movlw	high _lat_register
  1244  00FF78  20F4               	addwfc	prodh,w,c
  1245  00FF7A  6EDA               	movwf	fsr2h,c
  1246  00FF7C  CFDE F02A          	movff	postinc2,??_gpio_pin_write_value+3
  1247  00FF80  CFDD F02B          	movff	postdec2,??_gpio_pin_write_value+4
  1248  00FF84  C02A  FFD9         	movff	??_gpio_pin_write_value+3,fsr2l
  1249  00FF88  C02B  FFDA         	movff	??_gpio_pin_write_value+4,fsr2h
  1250  00FF8C  5029               	movf	(??_gpio_pin_write_value+2)^0,w,c
  1251  00FF8E  16DF               	andwf	indf2,f,c
  1252  00FF90  EFFF  F07F         	goto	l1392
  1253  00FF94                     l1386:
  1254                           
  1255                           ;mcal/gpio/mcal_gpio.c: 104:                 (*lat_register[port] |= (1U << pin)); break
      +                          ;
  1256  00FF94  C025  F027         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  1257  00FF98  0E01               	movlw	1
  1258  00FF9A  6E28               	movwf	(??_gpio_pin_write_value+1)^0,c
  1259  00FF9C  2A27               	incf	??_gpio_pin_write_value^0,f,c
  1260  00FF9E  EFD3  F07F         	goto	u604
  1261  00FFA2                     u605:
  1262  00FFA2  90D8               	bcf	status,0,c
  1263  00FFA4  3628               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  1264  00FFA6                     u604:
  1265  00FFA6  2E27               	decfsz	??_gpio_pin_write_value^0,f,c
  1266  00FFA8  EFD1  F07F         	goto	u605
  1267  00FFAC  502D               	movf	gpio_pin_write_value@port^0,w,c
  1268  00FFAE  0D02               	mullw	2
  1269  00FFB0  0E0B               	movlw	low _lat_register
  1270  00FFB2  24F3               	addwf	243,w,c
  1271  00FFB4  6ED9               	movwf	fsr2l,c
  1272  00FFB6  0E00               	movlw	high _lat_register
  1273  00FFB8  20F4               	addwfc	prodh,w,c
  1274  00FFBA  6EDA               	movwf	fsr2h,c
  1275  00FFBC  CFDE F029          	movff	postinc2,??_gpio_pin_write_value+2
  1276  00FFC0  CFDD F02A          	movff	postdec2,??_gpio_pin_write_value+3
  1277  00FFC4  C029  FFD9         	movff	??_gpio_pin_write_value+2,fsr2l
  1278  00FFC8  C02A  FFDA         	movff	??_gpio_pin_write_value+3,fsr2h
  1279  00FFCC  5028               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1280  00FFCE  12DF               	iorwf	indf2,f,c
  1281  00FFD0  EFFF  F07F         	goto	l1392
  1282  00FFD4                     l1390:
  1283  00FFD4  5026               	movf	gpio_pin_write_value@logic^0,w,c
  1284  00FFD6  6E27               	movwf	??_gpio_pin_write_value^0,c
  1285  00FFD8  6A28               	clrf	(??_gpio_pin_write_value+1)^0,c
  1286                           
  1287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1288                           ; Switch size 1, requested type "simple"
  1289                           ; Number of cases is 1, Range of values is 0 to 0
  1290                           ; switch strategies available:
  1291                           ; Name         Instructions Cycles
  1292                           ; simple_byte            4     3 (average)
  1293                           ;	Chosen strategy is simple_byte
  1294  00FFDA  5028               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1295  00FFDC  0A00               	xorlw	0	; case 0
  1296  00FFDE  B4D8               	btfsc	status,2,c
  1297  00FFE0  EFF4  F07F         	goto	l1662
  1298  00FFE4  EFFF  F07F         	goto	l118
  1299  00FFE8                     l1662:
  1300                           
  1301                           ; Switch size 1, requested type "simple"
  1302                           ; Number of cases is 2, Range of values is 0 to 1
  1303                           ; switch strategies available:
  1304                           ; Name         Instructions Cycles
  1305                           ; simple_byte            7     4 (average)
  1306                           ;	Chosen strategy is simple_byte
  1307  00FFE8  5027               	movf	??_gpio_pin_write_value^0,w,c
  1308  00FFEA  0A00               	xorlw	0	; case 0
  1309  00FFEC  B4D8               	btfsc	status,2,c
  1310  00FFEE  EFA7  F07F         	goto	l1384
  1311  00FFF2  0A01               	xorlw	1	; case 1
  1312  00FFF4  B4D8               	btfsc	status,2,c
  1313  00FFF6  EFCA  F07F         	goto	l1386
  1314  00FFFA  EFFF  F07F         	goto	l118
  1315  00FFFE                     l1392:
  1316  00FFFE                     l118:
  1317  00FFFE  0012               	return		;funcret
  1318  010000                     __end_of_gpio_pin_write_value:
  1319                           	opt callstack 0
  1320                           
  1321 ;; *************** function _button_initialize *****************
  1322 ;; Defined at:
  1323 ;;		line 15 in file "ecu/button/ecu_button.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  btn             2    9[COMRAM] PTR struct .
  1326 ;;		 -> btn2(1), btn1(1), 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  ret             1    0        enum E2444
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      enum E2444
  1331 ;; Registers used:
  1332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;Total ram usage:        4 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    1
  1345 ;; This function calls:
  1346 ;;		_gpio_pin_direction_intialize
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text12
  1353  00FB08                     __ptext12:
  1354                           	opt callstack 0
  1355  00FB08                     _button_initialize:
  1356                           	opt callstack 29
  1357  00FB08                     
  1358                           ;ecu/button/ecu_button.c: 17:     if((((void*)0) == btn) || (btn->port_name > 5U -1) ||
  1359  00FB08  502E               	movf	button_initialize@btn^0,w,c
  1360  00FB0A  102F               	iorwf	(button_initialize@btn+1)^0,w,c
  1361  00FB0C  B4D8               	btfsc	status,2,c
  1362  00FB0E  EF8B  F07D         	goto	u791
  1363  00FB12  EF8D  F07D         	goto	u790
  1364  00FB16                     u791:
  1365  00FB16  EFBE  F07D         	goto	l10
  1366  00FB1A                     u790:
  1367  00FB1A  C02E  FFD9         	movff	button_initialize@btn,fsr2l
  1368  00FB1E  C02F  FFDA         	movff	button_initialize@btn+1,fsr2h
  1369  00FB22  50DF               	movf	indf2,w,c
  1370  00FB24  0B0F               	andlw	15
  1371  00FB26  6E30               	movwf	??_button_initialize^0,c
  1372  00FB28  0E05               	movlw	5
  1373  00FB2A  6030               	cpfslt	??_button_initialize^0,c
  1374  00FB2C  EF9A  F07D         	goto	u801
  1375  00FB30  EF9C  F07D         	goto	u800
  1376  00FB34                     u801:
  1377  00FB34  EFBE  F07D         	goto	l10
  1378  00FB38                     u800:
  1379  00FB38  C02E  FFD9         	movff	button_initialize@btn,fsr2l
  1380  00FB3C  C02F  FFDA         	movff	button_initialize@btn+1,fsr2h
  1381  00FB40  38DF               	swapf	indf2,w,c
  1382  00FB42  0B07               	andlw	7
  1383  00FB44  6E30               	movwf	??_button_initialize^0,c
  1384  00FB46  0E07               	movlw	7
  1385  00FB48  6430               	cpfsgt	??_button_initialize^0,c
  1386  00FB4A  EFA9  F07D         	goto	u811
  1387  00FB4E  EFAB  F07D         	goto	u810
  1388  00FB52                     u811:
  1389  00FB52  EFAD  F07D         	goto	l1542
  1390  00FB56                     u810:
  1391  00FB56  EFBE  F07D         	goto	l10
  1392  00FB5A                     l1542:
  1393                           
  1394                           ;ecu/button/ecu_button.c: 22:         gpio_pin_direction_intialize(btn->port_name, btn->
      +                          pin, DIRECTION_INPUT);
  1395  00FB5A  C02E  FFD9         	movff	button_initialize@btn,fsr2l
  1396  00FB5E  C02F  FFDA         	movff	button_initialize@btn+1,fsr2h
  1397  00FB62  38DF               	swapf	indf2,w,c
  1398  00FB64  0B07               	andlw	7
  1399  00FB66  6E25               	movwf	gpio_pin_direction_intialize@pin^0,c
  1400  00FB68  0E01               	movlw	1
  1401  00FB6A  6E26               	movwf	gpio_pin_direction_intialize@direction^0,c
  1402  00FB6C  C02E  FFD9         	movff	button_initialize@btn,fsr2l
  1403  00FB70  C02F  FFDA         	movff	button_initialize@btn+1,fsr2h
  1404  00FB74  50DF               	movf	indf2,w,c
  1405  00FB76  0B0F               	andlw	15
  1406  00FB78  EC38  F07F         	call	_gpio_pin_direction_intialize
  1407  00FB7C                     l10:
  1408  00FB7C  0012               	return		;funcret
  1409  00FB7E                     __end_of_button_initialize:
  1410                           	opt callstack 0
  1411                           
  1412 ;; *************** function _gpio_pin_direction_intialize *****************
  1413 ;; Defined at:
  1414 ;;		line 42 in file "mcal/gpio/mcal_gpio.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  port            1    wreg     enum E2466
  1417 ;;  pin             1    0[COMRAM] enum E2456
  1418 ;;  direction       1    1[COMRAM] enum E2452
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  port            1    8[COMRAM] enum E2466
  1421 ;;  ret             1    0        enum E2444
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      enum E2444
  1424 ;; Registers used:
  1425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;Total ram usage:        9 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_button_initialize
  1441 ;;		_relay_initialize
  1442 ;;		_led_initialize
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text13
  1447  00FE70                     __ptext13:
  1448                           	opt callstack 0
  1449  00FE70                     _gpio_pin_direction_intialize:
  1450                           	opt callstack 28
  1451                           
  1452                           ;incstack = 0
  1453                           ;gpio_pin_direction_intialize@port stored from wreg
  1454  00FE70  6E2D               	movwf	gpio_pin_direction_intialize@port^0,c
  1455  00FE72                     
  1456                           ;mcal/gpio/mcal_gpio.c: 45:     if((pin > 8U -1) || (pin < 0)){
  1457  00FE72  0E08               	movlw	8
  1458  00FE74  6025               	cpfslt	gpio_pin_direction_intialize@pin^0,c
  1459  00FE76  EF3F  F07F         	goto	u611
  1460  00FE7A  EF41  F07F         	goto	u610
  1461  00FE7E                     u611:
  1462  00FE7E  EF9B  F07F         	goto	l99
  1463  00FE82                     u610:
  1464  00FE82  EF86  F07F         	goto	l1414
  1465  00FE86                     l1408:
  1466                           
  1467                           ;mcal/gpio/mcal_gpio.c: 52:                 (*tris_register[port] &= ~(1U << pin)); brea
      +                          k;
  1468  00FE86  C025  F027         	movff	gpio_pin_direction_intialize@pin,??_gpio_pin_direction_intialize
  1469  00FE8A  0E01               	movlw	1
  1470  00FE8C  6E28               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1471  00FE8E  2A27               	incf	??_gpio_pin_direction_intialize^0,f,c
  1472  00FE90  EF4C  F07F         	goto	u624
  1473  00FE94                     u625:
  1474  00FE94  90D8               	bcf	status,0,c
  1475  00FE96  3628               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1476  00FE98                     u624:
  1477  00FE98  2E27               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1478  00FE9A  EF4A  F07F         	goto	u625
  1479  00FE9E  5028               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1480  00FEA0  0AFF               	xorlw	255
  1481  00FEA2  6E29               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1482  00FEA4  502D               	movf	gpio_pin_direction_intialize@port^0,w,c
  1483  00FEA6  0D02               	mullw	2
  1484  00FEA8  0E15               	movlw	low _tris_register
  1485  00FEAA  24F3               	addwf	243,w,c
  1486  00FEAC  6ED9               	movwf	fsr2l,c
  1487  00FEAE  0E00               	movlw	high _tris_register
  1488  00FEB0  20F4               	addwfc	prodh,w,c
  1489  00FEB2  6EDA               	movwf	fsr2h,c
  1490  00FEB4  CFDE F02A          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1491  00FEB8  CFDD F02B          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1492  00FEBC  C02A  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1493  00FEC0  C02B  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1494  00FEC4  5029               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1495  00FEC6  16DF               	andwf	indf2,f,c
  1496  00FEC8  EF9B  F07F         	goto	l1416
  1497  00FECC                     l1410:
  1498                           
  1499                           ;mcal/gpio/mcal_gpio.c: 55:                 (*tris_register[port] |= (1U << pin)); break
      +                          ;
  1500  00FECC  C025  F027         	movff	gpio_pin_direction_intialize@pin,??_gpio_pin_direction_intialize
  1501  00FED0  0E01               	movlw	1
  1502  00FED2  6E28               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1503  00FED4  2A27               	incf	??_gpio_pin_direction_intialize^0,f,c
  1504  00FED6  EF6F  F07F         	goto	u634
  1505  00FEDA                     u635:
  1506  00FEDA  90D8               	bcf	status,0,c
  1507  00FEDC  3628               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1508  00FEDE                     u634:
  1509  00FEDE  2E27               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1510  00FEE0  EF6D  F07F         	goto	u635
  1511  00FEE4  502D               	movf	gpio_pin_direction_intialize@port^0,w,c
  1512  00FEE6  0D02               	mullw	2
  1513  00FEE8  0E15               	movlw	low _tris_register
  1514  00FEEA  24F3               	addwf	243,w,c
  1515  00FEEC  6ED9               	movwf	fsr2l,c
  1516  00FEEE  0E00               	movlw	high _tris_register
  1517  00FEF0  20F4               	addwfc	prodh,w,c
  1518  00FEF2  6EDA               	movwf	fsr2h,c
  1519  00FEF4  CFDE F029          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1520  00FEF8  CFDD F02A          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1521  00FEFC  C029  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1522  00FF00  C02A  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1523  00FF04  5028               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1524  00FF06  12DF               	iorwf	indf2,f,c
  1525  00FF08  EF9B  F07F         	goto	l1416
  1526  00FF0C                     l1414:
  1527  00FF0C  5026               	movf	gpio_pin_direction_intialize@direction^0,w,c
  1528  00FF0E  6E27               	movwf	??_gpio_pin_direction_intialize^0,c
  1529  00FF10  6A28               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  1530                           
  1531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1532                           ; Switch size 1, requested type "simple"
  1533                           ; Number of cases is 1, Range of values is 0 to 0
  1534                           ; switch strategies available:
  1535                           ; Name         Instructions Cycles
  1536                           ; simple_byte            4     3 (average)
  1537                           ;	Chosen strategy is simple_byte
  1538  00FF12  5028               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1539  00FF14  0A00               	xorlw	0	; case 0
  1540  00FF16  B4D8               	btfsc	status,2,c
  1541  00FF18  EF90  F07F         	goto	l1664
  1542  00FF1C  EF9B  F07F         	goto	l99
  1543  00FF20                     l1664:
  1544                           
  1545                           ; Switch size 1, requested type "simple"
  1546                           ; Number of cases is 2, Range of values is 0 to 1
  1547                           ; switch strategies available:
  1548                           ; Name         Instructions Cycles
  1549                           ; simple_byte            7     4 (average)
  1550                           ;	Chosen strategy is simple_byte
  1551  00FF20  5027               	movf	??_gpio_pin_direction_intialize^0,w,c
  1552  00FF22  0A00               	xorlw	0	; case 0
  1553  00FF24  B4D8               	btfsc	status,2,c
  1554  00FF26  EF43  F07F         	goto	l1408
  1555  00FF2A  0A01               	xorlw	1	; case 1
  1556  00FF2C  B4D8               	btfsc	status,2,c
  1557  00FF2E  EF66  F07F         	goto	l1410
  1558  00FF32  EF9B  F07F         	goto	l99
  1559  00FF36                     l1416:
  1560  00FF36                     l99:
  1561  00FF36  0012               	return		;funcret
  1562  00FF38                     __end_of_gpio_pin_direction_intialize:
  1563                           	opt callstack 0
  1564                           
  1565 ;; *************** function _button_get_status *****************
  1566 ;; Defined at:
  1567 ;;		line 33 in file "ecu/button/ecu_button.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  btn             2    9[COMRAM] PTR struct .
  1570 ;;		 -> btn2(1), btn1(1), 
  1571 ;;  btn_status      2   11[COMRAM] PTR enum E2508
  1572 ;;		 -> btn2_status(1), btn1_status(1), 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  ret             1    0        enum E2444
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      enum E2444
  1577 ;; Registers used:
  1578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;Total ram usage:        6 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    1
  1591 ;; This function calls:
  1592 ;;		_gpio_pin_read_value
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text14
  1599  00FC7E                     __ptext14:
  1600                           	opt callstack 0
  1601  00FC7E                     _button_get_status:
  1602                           	opt callstack 29
  1603  00FC7E                     
  1604                           ;ecu/button/ecu_button.c: 35:     if((((void*)0) == btn) || (btn->port_name > 5U -1) ||
  1605  00FC7E  502E               	movf	button_get_status@btn^0,w,c
  1606  00FC80  102F               	iorwf	(button_get_status@btn+1)^0,w,c
  1607  00FC82  B4D8               	btfsc	status,2,c
  1608  00FC84  EF46  F07E         	goto	u821
  1609  00FC88  EF48  F07E         	goto	u820
  1610  00FC8C                     u821:
  1611  00FC8C  EF8C  F07E         	goto	l17
  1612  00FC90                     u820:
  1613  00FC90  C02E  FFD9         	movff	button_get_status@btn,fsr2l
  1614  00FC94  C02F  FFDA         	movff	button_get_status@btn+1,fsr2h
  1615  00FC98  50DF               	movf	indf2,w,c
  1616  00FC9A  0B0F               	andlw	15
  1617  00FC9C  6E32               	movwf	??_button_get_status^0,c
  1618  00FC9E  0E05               	movlw	5
  1619  00FCA0  6032               	cpfslt	??_button_get_status^0,c
  1620  00FCA2  EF55  F07E         	goto	u831
  1621  00FCA6  EF57  F07E         	goto	u830
  1622  00FCAA                     u831:
  1623  00FCAA  EF8C  F07E         	goto	l17
  1624  00FCAE                     u830:
  1625  00FCAE  C02E  FFD9         	movff	button_get_status@btn,fsr2l
  1626  00FCB2  C02F  FFDA         	movff	button_get_status@btn+1,fsr2h
  1627  00FCB6  38DF               	swapf	indf2,w,c
  1628  00FCB8  0B07               	andlw	7
  1629  00FCBA  6E32               	movwf	??_button_get_status^0,c
  1630  00FCBC  0E07               	movlw	7
  1631  00FCBE  6432               	cpfsgt	??_button_get_status^0,c
  1632  00FCC0  EF64  F07E         	goto	u841
  1633  00FCC4  EF66  F07E         	goto	u840
  1634  00FCC8                     u841:
  1635  00FCC8  EF68  F07E         	goto	l1558
  1636  00FCCC                     u840:
  1637  00FCCC  EF8C  F07E         	goto	l17
  1638  00FCD0                     l1558:
  1639                           
  1640                           ;ecu/button/ecu_button.c: 40:         gpio_pin_read_value(btn->port_name, btn->pin, btn_
      +                          status);
  1641  00FCD0  C02E  FFD9         	movff	button_get_status@btn,fsr2l
  1642  00FCD4  C02F  FFDA         	movff	button_get_status@btn+1,fsr2h
  1643  00FCD8  38DF               	swapf	indf2,w,c
  1644  00FCDA  0B07               	andlw	7
  1645  00FCDC  6E25               	movwf	gpio_pin_read_value@pin^0,c
  1646  00FCDE  C030  F026         	movff	button_get_status@btn_status,gpio_pin_read_value@logic
  1647  00FCE2  C031  F027         	movff	button_get_status@btn_status+1,gpio_pin_read_value@logic+1
  1648  00FCE6  C02E  FFD9         	movff	button_get_status@btn,fsr2l
  1649  00FCEA  C02F  FFDA         	movff	button_get_status@btn+1,fsr2h
  1650  00FCEE  50DF               	movf	indf2,w,c
  1651  00FCF0  0B0F               	andlw	15
  1652  00FCF2  EC4C  F07D         	call	_gpio_pin_read_value
  1653  00FCF6                     
  1654                           ;ecu/button/ecu_button.c: 41:         btn->button_status = *btn_status;
  1655  00FCF6  C030  FFD9         	movff	button_get_status@btn_status,fsr2l
  1656  00FCFA  C031  FFDA         	movff	button_get_status@btn_status+1,fsr2h
  1657  00FCFE  50DF               	movf	indf2,w,c
  1658  00FD00  6E32               	movwf	??_button_get_status^0,c
  1659  00FD02  C02E  FFD9         	movff	button_get_status@btn,fsr2l
  1660  00FD06  C02F  FFDA         	movff	button_get_status@btn+1,fsr2h
  1661  00FD0A  3232               	rrcf	??_button_get_status^0,f,c
  1662  00FD0C  3232               	rrcf	??_button_get_status^0,f,c
  1663  00FD0E  50DF               	movf	indf2,w,c
  1664  00FD10  1832               	xorwf	??_button_get_status^0,w,c
  1665  00FD12  0B7F               	andlw	-129
  1666  00FD14  1832               	xorwf	??_button_get_status^0,w,c
  1667  00FD16  6EDF               	movwf	indf2,c
  1668  00FD18                     l17:
  1669  00FD18  0012               	return		;funcret
  1670  00FD1A                     __end_of_button_get_status:
  1671                           	opt callstack 0
  1672                           
  1673 ;; *************** function _gpio_pin_read_value *****************
  1674 ;; Defined at:
  1675 ;;		line 120 in file "mcal/gpio/mcal_gpio.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  port            1    wreg     enum E2466
  1678 ;;  pin             1    0[COMRAM] enum E2456
  1679 ;;  logic           2    1[COMRAM] PTR enum E2448
  1680 ;;		 -> btn2_status(1), btn1_status(1), 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  port            1    8[COMRAM] enum E2466
  1683 ;;  ret             1    0        enum E2444
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      enum E2444
  1686 ;; Registers used:
  1687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1693 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;Total ram usage:        9 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_button_get_status
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text15
  1707  00FA98                     __ptext15:
  1708                           	opt callstack 0
  1709  00FA98                     _gpio_pin_read_value:
  1710                           	opt callstack 29
  1711                           
  1712                           ;incstack = 0
  1713                           ;gpio_pin_read_value@port stored from wreg
  1714  00FA98  6E2D               	movwf	gpio_pin_read_value@port^0,c
  1715  00FA9A                     
  1716                           ;mcal/gpio/mcal_gpio.c: 121:     ret_status ret;;mcal/gpio/mcal_gpio.c: 122:     if(pin 
      +                          > 8U -1 || ((void*)0) == logic){
  1717  00FA9A  0E08               	movlw	8
  1718  00FA9C  6025               	cpfslt	gpio_pin_read_value@pin^0,c
  1719  00FA9E  EF53  F07D         	goto	u701
  1720  00FAA2  EF55  F07D         	goto	u700
  1721  00FAA6                     u701:
  1722  00FAA6  EF83  F07D         	goto	l130
  1723  00FAAA                     u700:
  1724  00FAAA  5026               	movf	gpio_pin_read_value@logic^0,w,c
  1725  00FAAC  1027               	iorwf	(gpio_pin_read_value@logic+1)^0,w,c
  1726  00FAAE  A4D8               	btfss	status,2,c
  1727  00FAB0  EF5C  F07D         	goto	u711
  1728  00FAB4  EF5E  F07D         	goto	u710
  1729  00FAB8                     u711:
  1730  00FAB8  EF60  F07D         	goto	l1466
  1731  00FABC                     u710:
  1732  00FABC  EF83  F07D         	goto	l130
  1733  00FAC0                     l1466:
  1734                           
  1735                           ;mcal/gpio/mcal_gpio.c: 127:         *logic = ((*port_register[port] >> pin) & 1U);
  1736  00FAC0  C025  F028         	movff	gpio_pin_read_value@pin,??_gpio_pin_read_value
  1737  00FAC4  502D               	movf	gpio_pin_read_value@port^0,w,c
  1738  00FAC6  0D02               	mullw	2
  1739  00FAC8  0E01               	movlw	low _port_register
  1740  00FACA  24F3               	addwf	243,w,c
  1741  00FACC  6ED9               	movwf	fsr2l,c
  1742  00FACE  0E00               	movlw	high _port_register
  1743  00FAD0  20F4               	addwfc	prodh,w,c
  1744  00FAD2  6EDA               	movwf	fsr2h,c
  1745  00FAD4  CFDE F029          	movff	postinc2,??_gpio_pin_read_value+1
  1746  00FAD8  CFDD F02A          	movff	postdec2,??_gpio_pin_read_value+2
  1747  00FADC  C029  FFD9         	movff	??_gpio_pin_read_value+1,fsr2l
  1748  00FAE0  C02A  FFDA         	movff	??_gpio_pin_read_value+2,fsr2h
  1749  00FAE4  50DF               	movf	indf2,w,c
  1750  00FAE6  6E2B               	movwf	(??_gpio_pin_read_value+3)^0,c
  1751  00FAE8  2A28               	incf	??_gpio_pin_read_value^0,f,c
  1752  00FAEA  EF79  F07D         	goto	u724
  1753  00FAEE                     u725:
  1754  00FAEE  90D8               	bcf	status,0,c
  1755  00FAF0  322B               	rrcf	(??_gpio_pin_read_value+3)^0,f,c
  1756  00FAF2                     u724:
  1757  00FAF2  2E28               	decfsz	??_gpio_pin_read_value^0,f,c
  1758  00FAF4  EF77  F07D         	goto	u725
  1759  00FAF8  502B               	movf	(??_gpio_pin_read_value+3)^0,w,c
  1760  00FAFA  0B01               	andlw	1
  1761  00FAFC  C026  FFD9         	movff	gpio_pin_read_value@logic,fsr2l
  1762  00FB00  C027  FFDA         	movff	gpio_pin_read_value@logic+1,fsr2h
  1763  00FB04  6EDF               	movwf	indf2,c
  1764  00FB06                     l130:
  1765  00FB06  0012               	return		;funcret
  1766  00FB08                     __end_of_gpio_pin_read_value:
  1767                           	opt callstack 0
  1768  0000                     
  1769                           	psect	rparam
  1770  0000                     tosu	equ	0xFFF
  1771                           tosh	equ	0xFFE
  1772                           tosl	equ	0xFFD
  1773                           stkptr	equ	0xFFC
  1774                           pclatu	equ	0xFFB
  1775                           pclath	equ	0xFFA
  1776                           pcl	equ	0xFF9
  1777                           tblptru	equ	0xFF8
  1778                           tblptrh	equ	0xFF7
  1779                           tblptrl	equ	0xFF6
  1780                           tablat	equ	0xFF5
  1781                           prodh	equ	0xFF4
  1782                           prodl	equ	0xFF3
  1783                           indf0	equ	0xFEF
  1784                           postinc0	equ	0xFEE
  1785                           postdec0	equ	0xFED
  1786                           preinc0	equ	0xFEC
  1787                           plusw0	equ	0xFEB
  1788                           fsr0h	equ	0xFEA
  1789                           fsr0l	equ	0xFE9
  1790                           wreg	equ	0xFE8
  1791                           indf1	equ	0xFE7
  1792                           postinc1	equ	0xFE6
  1793                           postdec1	equ	0xFE5
  1794                           preinc1	equ	0xFE4
  1795                           plusw1	equ	0xFE3
  1796                           fsr1h	equ	0xFE2
  1797                           fsr1l	equ	0xFE1
  1798                           bsr	equ	0xFE0
  1799                           indf2	equ	0xFDF
  1800                           postinc2	equ	0xFDE
  1801                           postdec2	equ	0xFDD
  1802                           preinc2	equ	0xFDC
  1803                           plusw2	equ	0xFDB
  1804                           fsr2h	equ	0xFDA
  1805                           fsr2l	equ	0xFD9
  1806                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        36
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     16      54
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_stop@dc_mtor	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    dc_motor_rotate_left@dc_mtor	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    dc_motor_rotate_right@dc_mtor	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    dc_motor_initialize@dc_mtor	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    relay_turn_off@relay	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    relay_turn_on@relay	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    relay_initialize@relay	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    gpio_pin_read_value@logic	PTR enum E2448 size(2) Largest target is 1
		 -> btn2_status(COMRAM[1]), btn1_status(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 

    button_get_status@btn_status	PTR enum E2508 size(2) Largest target is 1
		 -> btn2_status(COMRAM[1]), btn1_status(COMRAM[1]), 

    button_get_status@btn	PTR struct . size(2) Largest target is 1
		 -> btn2(COMRAM[1]), btn1(COMRAM[1]), 

    button_initialize@btn	PTR struct . size(2) Largest target is 1
		 -> btn2(COMRAM[1]), btn1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_dc_motor_initialize
    _robot_move_stop->_dc_motor_stop
    _dc_motor_stop->_relay_turn_off
    _robot_move_forward->_dc_motor_rotate_right
    _dc_motor_rotate_right->_relay_turn_off
    _dc_motor_rotate_right->_relay_turn_on
    _robot_move_backward->_dc_motor_rotate_left
    _dc_motor_rotate_left->_relay_turn_off
    _dc_motor_rotate_left->_relay_turn_on
    _relay_turn_on->_gpio_pin_write_value
    _relay_turn_off->_gpio_pin_write_value
    _dc_motor_initialize->_relay_initialize
    _relay_initialize->_gpio_pin_direction_intialize
    _relay_initialize->_gpio_pin_write_value
    _button_initialize->_gpio_pin_direction_intialize
    _button_get_status->_gpio_pin_read_value

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11807
                  _button_get_status
                  _button_initialize
                _dc_motor_initialize
                _robot_move_backward
                 _robot_move_forward
                    _robot_move_stop
 ---------------------------------------------------------------------------------
 (1) _robot_move_stop                                      0     0      0    1740
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (2) _dc_motor_stop                                        3     1      2    1740
                                             13 COMRAM     3     1      2
                     _relay_turn_off
 ---------------------------------------------------------------------------------
 (1) _robot_move_forward                                   0     0      0    3096
              _dc_motor_rotate_right
 ---------------------------------------------------------------------------------
 (2) _dc_motor_rotate_right                                3     1      2    3096
                                             13 COMRAM     3     1      2
                     _relay_turn_off
                      _relay_turn_on
 ---------------------------------------------------------------------------------
 (1) _robot_move_backward                                  0     0      0    3096
               _dc_motor_rotate_left
 ---------------------------------------------------------------------------------
 (2) _dc_motor_rotate_left                                 3     1      2    3096
                                             13 COMRAM     3     1      2
                     _relay_turn_off
                      _relay_turn_on
 ---------------------------------------------------------------------------------
 (3) _relay_turn_on                                        4     2      2    1356
                                              9 COMRAM     4     2      2
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (3) _relay_turn_off                                       4     2      2    1508
                                              9 COMRAM     4     2      2
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (1) _dc_motor_initialize                                  3     1      2    2234
                                             13 COMRAM     3     1      2
                   _relay_initialize
 ---------------------------------------------------------------------------------
 (2) _relay_initialize                                     4     2      2    2002
                                              9 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_value                                 9     7      2    1058
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _button_initialize                                    4     2      2     878
                                              9 COMRAM     4     2      2
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         9     7      2     602
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _button_get_status                                    6     2      4     763
                                              9 COMRAM     6     2      4
                _gpio_pin_read_value
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_value                                  9     6      3     269
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _button_get_status
     _gpio_pin_read_value
   _button_initialize
     _gpio_pin_direction_intialize
   _dc_motor_initialize
     _relay_initialize
       _gpio_pin_direction_intialize
       _gpio_pin_write_value
   _robot_move_backward
     _dc_motor_rotate_left
       _relay_turn_off
         _gpio_pin_write_value
       _relay_turn_on
         _gpio_pin_write_value
   _robot_move_forward
     _dc_motor_rotate_right
       _relay_turn_off
         _gpio_pin_write_value
       _relay_turn_on
         _gpio_pin_write_value
   _robot_move_stop
     _dc_motor_stop
       _relay_turn_off
         _gpio_pin_write_value

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     10      36       1       42.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      34        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Oct 30 20:10:15 2020

                                   l10 FB7C                                     l17 FD18  
                                   l99 FF36                            __CFG_BORV$3 000000  
                         __CFG_CP0$OFF 000000                           __CFG_CP1$OFF 000000  
                         __CFG_CP2$OFF 000000                           __CFG_CP3$OFF 000000  
                          __CFG_OSC$HS 000000                __size_of_relay_turn_off 0080  
                          __CFG_LVP$ON 000000                                    l130 FB06  
                                  l220 F940                                    l118 FFFE  
                                  l223 F974                                    l207 FDEC  
                                  l240 FC7C                                    l233 FDBA  
                                  l217 F95A                                    l247 FBFC  
                                  l263 FA62                                    l273 FA96  
                                  l258 F9FA                                    l268 FA2E  
                         __CFG_CPB$OFF 000000           dc_motor_rotate_right@dc_mtor 0032  
                                  u610 FE82                           __CFG_CPD$OFF 000000  
                                  u611 FE7E                                    u700 FAAA  
                                  u604 FFA6                                    u701 FAA6  
                                  u605 FFA2                                    u710 FABC  
                                  u711 FAB8                                    u624 FE98  
                                  u800 FB38                                    u640 FC10  
                                  u625 FE94                                    u801 FB34  
                                  u641 FC0C                                    u634 FEDE  
                                  u810 FB56                                    u650 FC2E  
                                  u730 FA42                                    u635 FEDA  
                                  u811 FB52                                    u651 FC2A  
                                  u731 FA3E                                    u724 FAF2  
                                  u820 FC90                                    u580 FF4A  
                                  u660 FC4C                                    u740 FA0E  
                                  u725 FAEE                                    u821 FC8C  
                                  u581 FF46                                    u661 FC48  
                                  u741 FA0A                                    u830 FCAE  
                                  u670 FB90                                    u750 FA76  
                                  u831 FCAA                                    u671 FB8C  
                                  u751 FA72                                    u840 FCCC  
                                  u760 FD2C                                    u680 FBAE  
                                  u841 FCC8                                    u761 FD28  
                                  u681 FBAA                                    u594 FF60  
                                  u770 FD4A                                    u850 F9DA  
                                  u690 FBCC                                    u595 FF5C  
                                  u771 FD46                                    u851 F9D6  
                                  u691 FBC8                                    u780 FD68  
                                  u781 FD64                                    u790 FB1A  
                                  u950 FE24                                    u791 FB16  
                                  u951 FE20                                    u960 FE34  
                                  u961 FE30                                    u970 FE4C  
                                  u971 FE48                                    u980 FE5C  
                                  u981 FE58                                    prod 000FF3  
          __size_of_robot_move_forward 001A           __size_of_robot_move_backward 001A  
                         __CFG_WDT$OFF 000000                                   l1400 FE72  
                                 l1410 FECC                                   l1402 FE72  
                                 l1500 FA64                                   l1414 FF0C  
                                 l1430 FC2E                                   l1510 FA96  
                                 l1502 FA64                                   l1416 FF36  
                                 l1408 FE86                                   l1520 FD4A  
                                 l1424 FBFE                                   l1514 FD1A  
                                 l1442 FB7E                                   l1434 FC50  
                                 l1426 FBFE                                   l1460 FA9A  
                                 l1532 FB08                                   l1524 FD6C  
                                 l1516 FD1A                                   l1452 FBD0  
                                 l1444 FB7E                                   l1436 FC72  
                                 l1428 FC10                                   l1508 FA7A  
                                 l1462 FAAA                                   l1550 FC7E  
                                 l1542 FB5A                                   l1534 FB08  
                                 l1390 FFD4                                   l1526 FDB0  
                                 l1518 FD2C                                   l1454 FBF2  
                                 l1446 FB90                                   l1438 FC7C  
                                 l1560 FCF6                                   l1552 FC90  
                                 l1544 FB7C                                   l1536 FB1A  
                                 l1392 FFFE                                   l1384 FF4E  
                                 l1376 FF3A                                   l1528 FDBA  
                                 l1456 FBFC                                   l1448 FBAE  
                                 l1480 FA46                                   l1472 FA30  
                                 l1640 FE14                                   l1466 FAC0  
                                 l1562 FD18                                   l1554 FCAE  
                                 l1538 FB38                                   l1386 FF94  
                                 l1378 FF3A                                   l1482 FA62  
                                 l1474 FA30                                   l1650 FE5C  
                                 l1642 FE24                                   l1468 FB06  
                                 l1548 FC7E                                   l1580 F942  
                                 l1652 FE64                                   l1644 FE34  
                                 l1558 FCD0                                   l1662 FFE8  
                                 l1574 F9DE                                   l1566 F9C8  
                                 l1494 FA12                                   l1486 F9FC  
                                 l1582 F928                                   l1646 FE3C  
                                 l1638 FDBC                                   l1664 FF20  
                                 l1576 F9FA                                   l1568 F9C8  
                                 l1496 FA2E                                   l1488 F9FC  
                                 l1584 F95C                                   l1648 FE4C  
                                 _LATA 000F89                                   _LATB 000F8A  
                                 _LATC 000F8B                                   _LATD 000F8C  
                                 _LATE 000F8D                                   _btn1 0024  
                                 _btn2 0023                                   _main FDBC  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr1l 000FE1                  relay_initialize@relay 002E  
                                 fsr2l 000FD9                                   prodl 000FF3  
                                 start 0000                          __CFG_IESO$OFF 000000  
             __size_of_robot_move_stop 001A                          __CFG_MCLRE$ON 000000  
                         ___param_bank 000000                   _gpio_pin_write_value FF38  
                                ?_main 0025                                  _PORTA 000F80  
                                _PORTB 000F81                                  _PORTC 000F82  
                                _PORTD 000F83                                  _PORTE 000F84  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                                  _TRISD 000F95  
                                _TRISE 000F96                          __CFG_PWRT$OFF 000000  
                        __CFG_WRT0$OFF 000000                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                          __CFG_WRT3$OFF 000000  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                       __CFG_EBTR3$OFF 000000                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                                  tablat 000FF5  
                  relay_turn_off@relay 002E                                  status 000FD8  
                    _button_get_status FC7E                         __CFG_PBADEN$ON 000000  
gpio_pin_direction_intialize@direction 0026                     ?_button_get_status 002E  
                      __initialization F99A                  __end_of_relay_turn_on FC7E  
                         __end_of_main FE70                  ?_gpio_pin_write_value 0025  
                  ??_button_get_status 0032            __end_of_dc_motor_initialize F9FC  
                               ??_main 0035                          __activetblptr 000002  
                    _button_initialize FB08           __size_of_gpio_pin_read_value 0070  
                   ?_button_initialize 002E              __end_of_button_get_status FD1A  
        __size_of_dc_motor_rotate_left 0034                          _tris_register 0015  
                  ??_button_initialize 0030                         __CFG_XINST$OFF 000000  
                       __CFG_STVREN$ON 000000            dc_motor_rotate_left@dc_mtor 0032  
                    ??_robot_move_stop 0035                         _relay_turn_off FB7E  
                         __pdataCOMRAM 0001              __end_of_button_initialize FB7E  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                      ?_relay_initialize 002E  
                   ??_relay_initialize 0030               gpio_pin_read_value@logic 0026  
                           __accesstop 0080                __end_of__initialization F9BE  
                        ___rparam_used 000001                         __pcstackCOMRAM 0025  
               ??_gpio_pin_write_value 0027                    _robot_move_backward F928  
                 button_initialize@btn 002E                 __end_of_relay_turn_off FBFE  
                 ?_robot_move_backward 0025                  _dc_motor_rotate_right FA30  
           __size_of_button_get_status 009C                        ?_relay_turn_off 002E  
           __end_of_robot_move_forward F95C             __size_of_button_initialize 0076  
                ??_robot_move_backward 0035                 __size_of_dc_motor_stop 0034  
                              __Hparam 0000                                __Lparam 0000  
                  _gpio_pin_read_value FA98                                __pcinit F99A  
                              __ramtop 1000                                __ptext0 FDBC  
                              __ptext1 F95C                                __ptext2 FA64  
                              __ptext3 F942                                __ptext4 FA30  
                              __ptext5 F928                                __ptext6 F9FC  
                              __ptext7 FBFE                                __ptext8 FB7E  
                              __ptext9 F9C8                 ?_dc_motor_rotate_right 0032  
                 ?_gpio_pin_read_value 0025                   end_of_initialization F9BE  
                        __Lmediumconst 0000                        _robot_move_stop F95C  
                        _dc_motor_stop FA64                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE           __end_of_dc_motor_rotate_left FA30  
 __end_of_gpio_pin_direction_intialize FF38  __size_of_gpio_pin_direction_intialize 00C8  
         _gpio_pin_direction_intialize FE70           __size_of_dc_motor_initialize 0034  
                ??_gpio_pin_read_value 0028                 __size_of_relay_turn_on 0080  
                       ?_dc_motor_stop 0032              __size_of_relay_initialize 00A2  
                        __pidataCOMRAM F976                     relay_turn_on@relay 002E  
                  start_initialization F99A                   button_get_status@btn 002E  
        ?_gpio_pin_direction_intialize 0025                           _lat_register 000B  
              __end_of_robot_move_stop F976                       ??_relay_turn_off 0030  
             gpio_pin_write_value@port 002D                          _relay_turn_on FBFE  
        __size_of_gpio_pin_write_value 00C8                            _dc_motor1_1 0021  
                          _dc_motor1_2 001F                       __CFG_LPT1OSC$OFF 000000  
              gpio_pin_read_value@port 002D                            __pbssCOMRAM 0035  
                          _btn1_status 0036                            _btn2_status 0035  
                 _dc_motor_rotate_left F9FC                     _robot_move_forward F942  
      gpio_pin_direction_intialize@pin 0025                        ??_dc_motor_stop 0034  
                    __CFG_CCP2MX$PORTC 000000                    ?_robot_move_forward 0025  
                       ?_relay_turn_on 002E            __end_of_robot_move_backward F942  
              ??_dc_motor_rotate_right 0034                   ??_robot_move_forward 0035  
                     ?_robot_move_stop 0025                  ?_dc_motor_rotate_left 0032  
       ??_gpio_pin_direction_intialize 0027                       _relay_initialize FD1A  
                     __CFG_WDTPS$32768 000000                    _dc_motor_initialize F9C8  
                 ?_dc_motor_initialize 0032                              copy_data0 F9AE  
            gpio_pin_write_value@logic 0026                               __Hrparam 0000  
                      ??_relay_turn_on 0030                gpio_pin_write_value@pin 0025  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
               gpio_pin_read_value@pin 0025            __end_of_gpio_pin_read_value FB08  
                ??_dc_motor_initialize 0034                               __ptext10 FD1A  
                             __ptext11 FF38                               __ptext12 FB08  
                             __ptext13 FE70                               __ptext14 FC7E  
                             __ptext15 FA98                 ??_dc_motor_rotate_left 0034  
                        __size_of_main 00B4       gpio_pin_direction_intialize@port 002D  
                 dc_motor_stop@dc_mtor 0032           __end_of_gpio_pin_write_value 0000  
           dc_motor_initialize@dc_mtor 0032         __size_of_dc_motor_rotate_right 0034  
          button_get_status@btn_status 0030          __end_of_dc_motor_rotate_right FA64  
             __end_of_relay_initialize FDBC                          _port_register 0001  
                __end_of_dc_motor_stop FA98  
