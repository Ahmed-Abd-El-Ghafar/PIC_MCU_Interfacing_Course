

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Sep 19 23:49:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F46K20 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  00FF28                     __pidataCOMRAM:
    55                           	opt callstack 0
    56                           
    57                           ;initializer for _common_cathode_seg_table
    58  00FF28  C0                 	db	192
    59  00FF29  F9                 	db	249
    60  00FF2A  A4                 	db	164
    61  00FF2B  B0                 	db	176
    62  00FF2C  99                 	db	153
    63  00FF2D  92                 	db	146
    64  00FF2E  83                 	db	131
    65  00FF2F  F8                 	db	248
    66  00FF30  80                 	db	128
    67  00FF31  90                 	db	144
    68                           
    69                           ;initializer for _common_anode_seg_table
    70  00FF32  C0                 	db	192
    71  00FF33  F9                 	db	249
    72  00FF34  A4                 	db	164
    73  00FF35  B0                 	db	176
    74  00FF36  99                 	db	153
    75  00FF37  92                 	db	146
    76  00FF38  83                 	db	131
    77  00FF39  F8                 	db	248
    78  00FF3A  80                 	db	128
    79  00FF3B  90                 	db	144
    80                           
    81                           	psect	nvCOMRAM
    82  000019                     __pnvCOMRAM:
    83                           	opt callstack 0
    84  000019                     _counter:
    85                           	opt callstack 0
    86  000019                     	ds	1
    87  0000                     _OSCTUNE	set	3995
    88  0000                     _OSCCON	set	4051
    89  0000                     _INTCONbits	set	4082
    90  0000                     _INTCON2bits	set	4081
    91  0000                     _WPUB	set	3964
    92  0000                     _ANSELH	set	3967
    93  0000                     _ANSEL	set	3966
    94  0000                     _TRISD	set	3989
    95  0000                     _TRISC	set	3988
    96  0000                     _TRISB	set	3987
    97  0000                     _TRISA	set	3986
    98  0000                     _TRISE	set	3990
    99  0000                     _LATC	set	3979
   100  0000                     _LATB	set	3978
   101  0000                     _LATA	set	3977
   102  0000                     _LATD	set	3980
   103  0000                     _LATE	set	3981
   104  0000                     _PORTC	set	3970
   105                           
   106                           ; #config settings
   107  0000                     
   108                           	psect	cinit
   109  00FF3C                     __pcinit:
   110                           	opt callstack 0
   111  00FF3C                     start_initialization:
   112                           	opt callstack 0
   113  00FF3C                     __initialization:
   114                           	opt callstack 0
   115                           
   116                           ; Initialize objects allocated to COMRAM (20 bytes)
   117                           ; load TBLPTR registers with __pidataCOMRAM
   118  00FF3C  0E28               	movlw	low __pidataCOMRAM
   119  00FF3E  6EF6               	movwf	tblptrl,c
   120  00FF40  0EFF               	movlw	high __pidataCOMRAM
   121  00FF42  6EF7               	movwf	tblptrh,c
   122  00FF44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   123  00FF46  6EF8               	movwf	tblptru,c
   124  00FF48  EE00  F001         	lfsr	0,__pdataCOMRAM
   125  00FF4C  EE10 F014          	lfsr	1,20
   126  00FF50                     copy_data0:
   127  00FF50  0009               	tblrd		*+
   128  00FF52  CFF5 FFEE          	movff	tablat,postinc0
   129  00FF56  50E5               	movf	postdec1,w,c
   130  00FF58  50E1               	movf	fsr1l,w,c
   131  00FF5A  E1FA               	bnz	copy_data0
   132  00FF5C                     end_of_initialization:
   133                           	opt callstack 0
   134  00FF5C                     __end_of__initialization:
   135                           	opt callstack 0
   136  00FF5C  0100               	movlb	0
   137  00FF5E  EFDF  F07F         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	dataCOMRAM
   140  000001                     __pdataCOMRAM:
   141                           	opt callstack 0
   142  000001                     _common_cathode_seg_table:
   143                           	opt callstack 0
   144  000001                     	ds	10
   145  00000B                     _common_anode_seg_table:
   146                           	opt callstack 0
   147  00000B                     	ds	10
   148                           
   149                           	psect	cstackCOMRAM
   150  000015                     __pcstackCOMRAM:
   151                           	opt callstack 0
   152  000015                     
   153                           ; 1 bytes @ 0x0
   154  000015                     	ds	1
   155  000016                     print_number_seven_seg@number:
   156                           	opt callstack 0
   157                           
   158                           ; 1 bytes @ 0x1
   159  000016                     	ds	1
   160  000017                     ??_main:
   161                           
   162                           ; 1 bytes @ 0x2
   163  000017                     	ds	2
   164                           
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 7 in file "main.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;  ret             1    0        enum E2729
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   187 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   188 ;;Total ram usage:        3 bytes
   189 ;; Hardware stack levels required when called:    2
   190 ;; This function calls:
   191 ;;		_SYSTEM_Initialize
   192 ;;		_print_number_seven_seg
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           	psect	text0
   199  00FFBE                     __ptext0:
   200                           	opt callstack 0
   201  00FFBE                     _main:
   202                           	opt callstack 29
   203  00FFBE                     
   204                           ;main.c: 10:     SYSTEM_Initialize();
   205  00FFBE  EC8F  F07F         	call	_SYSTEM_Initialize	;wreg free
   206  00FFC2                     l793:
   207                           
   208                           ;main.c: 13:     {;main.c: 15:         for(counter = 0; counter <= 9; counter++){
   209  00FFC2  0E00               	movlw	0
   210  00FFC4  6E19               	movwf	_counter^0,c	;volatile
   211  00FFC6                     l795:
   212  00FFC6  0E09               	movlw	9
   213  00FFC8  6419               	cpfsgt	_counter^0,c	;volatile
   214  00FFCA  EFE9  F07F         	goto	u21
   215  00FFCE  EFEB  F07F         	goto	u20
   216  00FFD2                     u21:
   217  00FFD2  EFED  F07F         	goto	l799
   218  00FFD6                     u20:
   219  00FFD6  EFE1  F07F         	goto	l793
   220  00FFDA                     l799:
   221  00FFDA  5019               	movf	_counter^0,w,c	;volatile
   222  00FFDC  ECB1  F07F         	call	_print_number_seven_seg
   223  00FFE0                     
   224                           ;main.c: 17:             _delay((unsigned long)((500)*(8000000/4000.0)));
   225  00FFE0  0E06               	movlw	6
   226  00FFE2  6E18               	movwf	(??_main+1)^0,c
   227  00FFE4  0E13               	movlw	19
   228  00FFE6  6E17               	movwf	??_main^0,c
   229  00FFE8  0EAE               	movlw	174
   230  00FFEA                     u37:
   231  00FFEA  2EE8               	decfsz	wreg,f,c
   232  00FFEC  D7FE               	bra	u37
   233  00FFEE  2E17               	decfsz	??_main^0,f,c
   234  00FFF0  D7FC               	bra	u37
   235  00FFF2  2E18               	decfsz	(??_main+1)^0,f,c
   236  00FFF4  D7FA               	bra	u37
   237  00FFF6                     
   238                           ;main.c: 18:         }
   239  00FFF6  2A19               	incf	_counter^0,f,c	;volatile
   240  00FFF8  EFE3  F07F         	goto	l795
   241  00FFFC  EF00  F000         	goto	start
   242  010000                     __end_of_main:
   243                           	opt callstack 0
   244                           
   245 ;; *************** function _print_number_seven_seg *****************
   246 ;; Defined at:
   247 ;;		line 36 in file "ECU Layer/seven_seg.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;  number          1    wreg     unsigned char 
   250 ;; Auto vars:     Size  Location     Type
   251 ;;  number          1    1[COMRAM] unsigned char 
   252 ;;  ret             1    0        enum E2729
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      enum E2729
   255 ;; Registers used:
   256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   266 ;;Total ram usage:        2 bytes
   267 ;; Hardware stack levels used:    1
   268 ;; This function calls:
   269 ;;		Nothing
   270 ;; This function is called by:
   271 ;;		_main
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           	psect	text1
   276  00FF62                     __ptext1:
   277                           	opt callstack 0
   278  00FF62                     _print_number_seven_seg:
   279                           	opt callstack 30
   280                           
   281                           ;incstack = 0
   282                           ;print_number_seven_seg@number stored from wreg
   283  00FF62  6E16               	movwf	print_number_seven_seg@number^0,c
   284  00FF64                     
   285                           ;ECU Layer/seven_seg.c: 38:     if(number > 9){
   286  00FF64  0E09               	movlw	9
   287  00FF66  6416               	cpfsgt	print_number_seven_seg@number^0,c
   288  00FF68  EFB8  F07F         	goto	u11
   289  00FF6C  EFBA  F07F         	goto	u10
   290  00FF70                     u11:
   291  00FF70  EFBD  F07F         	goto	l779
   292  00FF74                     u10:
   293  00FF74                     
   294                           ;ECU Layer/seven_seg.c: 39:         return R_NOK;
   295  00FF74  0E00               	movlw	0
   296  00FF76  EFC6  F07F         	goto	l10
   297  00FF7A                     l779:
   298                           
   299                           ;ECU Layer/seven_seg.c: 42:         PORTC = common_anode_seg_table[number];
   300  00FF7A  0E0B               	movlw	low _common_anode_seg_table
   301  00FF7C  2416               	addwf	print_number_seven_seg@number^0,w,c
   302  00FF7E  6ED9               	movwf	fsr2l,c
   303  00FF80  6ADA               	clrf	fsr2h,c
   304  00FF82  0E00               	movlw	high _common_anode_seg_table
   305  00FF84  22DA               	addwfc	fsr2h,f,c
   306  00FF86  50DF               	movf	indf2,w,c
   307  00FF88  6E82               	movwf	130,c	;volatile
   308  00FF8A                     
   309                           ;ECU Layer/seven_seg.c: 44:     return R_OK;
   310  00FF8A  0E01               	movlw	1
   311  00FF8C                     l10:
   312  00FF8C  0012               	return		;funcret
   313  00FF8E                     __end_of_print_number_seven_seg:
   314                           	opt callstack 0
   315                           
   316 ;; *************** function _SYSTEM_Initialize *****************
   317 ;; Defined at:
   318 ;;		line 50 in file "mcc_generated_files/mcc.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, status,2, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   336 ;;Total ram usage:        0 bytes
   337 ;; Hardware stack levels used:    1
   338 ;; Hardware stack levels required when called:    1
   339 ;; This function calls:
   340 ;;		_OSCILLATOR_Initialize
   341 ;;		_PIN_MANAGER_Initialize
   342 ;; This function is called by:
   343 ;;		_main
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text2
   348  00FF1E                     __ptext2:
   349                           	opt callstack 0
   350  00FF1E                     _SYSTEM_Initialize:
   351                           	opt callstack 29
   352  00FF1E                     
   353                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   354  00FF1E  ECC7  F07F         	call	_PIN_MANAGER_Initialize	;wreg free
   355                           
   356                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   357  00FF22  EC8A  F07F         	call	_OSCILLATOR_Initialize	;wreg free
   358  00FF26  0012               	return		;funcret
   359  00FF28                     __end_of_SYSTEM_Initialize:
   360                           	opt callstack 0
   361                           
   362 ;; *************** function _PIN_MANAGER_Initialize *****************
   363 ;; Defined at:
   364 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, status,2
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;Total ram usage:        0 bytes
   383 ;; Hardware stack levels used:    1
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		_SYSTEM_Initialize
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text3
   392  00FF8E                     __ptext3:
   393                           	opt callstack 0
   394  00FF8E                     _PIN_MANAGER_Initialize:
   395                           	opt callstack 29
   396  00FF8E                     
   397                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   398  00FF8E  0E00               	movlw	0
   399  00FF90  6E8D               	movwf	141,c	;volatile
   400                           
   401                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   402  00FF92  0E00               	movlw	0
   403  00FF94  6E8C               	movwf	140,c	;volatile
   404                           
   405                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   406  00FF96  0E00               	movlw	0
   407  00FF98  6E89               	movwf	137,c	;volatile
   408                           
   409                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   410  00FF9A  0E00               	movlw	0
   411  00FF9C  6E8A               	movwf	138,c	;volatile
   412                           
   413                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   414  00FF9E  0E00               	movlw	0
   415  00FFA0  6E8B               	movwf	139,c	;volatile
   416                           
   417                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   418  00FFA2  0E07               	movlw	7
   419  00FFA4  6E96               	movwf	150,c	;volatile
   420  00FFA6                     
   421                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   422  00FFA6  6892               	setf	146,c	;volatile
   423  00FFA8                     
   424                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   425  00FFA8  6893               	setf	147,c	;volatile
   426                           
   427                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x00;
   428  00FFAA  0E00               	movlw	0
   429  00FFAC  6E94               	movwf	148,c	;volatile
   430  00FFAE                     
   431                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   432  00FFAE  6895               	setf	149,c	;volatile
   433  00FFB0                     
   434                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
   435  00FFB0  687E               	setf	126,c	;volatile
   436                           
   437                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
   438  00FFB2  0E1F               	movlw	31
   439  00FFB4  6E7F               	movwf	127,c	;volatile
   440                           
   441                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
   442  00FFB6  0E00               	movlw	0
   443  00FFB8  6E7C               	movwf	124,c	;volatile
   444  00FFBA                     
   445                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
   446  00FFBA  8EF1               	bsf	241,7,c	;volatile
   447  00FFBC  0012               	return		;funcret
   448  00FFBE                     __end_of_PIN_MANAGER_Initialize:
   449                           	opt callstack 0
   450                           
   451 ;; *************** function _OSCILLATOR_Initialize *****************
   452 ;; Defined at:
   453 ;;		line 57 in file "mcc_generated_files/mcc.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, status,2
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;Total ram usage:        0 bytes
   472 ;; Hardware stack levels used:    1
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_SYSTEM_Initialize
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text4
   481  00FF14                     __ptext4:
   482                           	opt callstack 0
   483  00FF14                     _OSCILLATOR_Initialize:
   484                           	opt callstack 29
   485  00FF14                     
   486                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x30;
   487  00FF14  0E30               	movlw	48
   488  00FF16  6ED3               	movwf	211,c	;volatile
   489                           
   490                           ;mcc_generated_files/mcc.c: 62:     OSCTUNE = 0x00;
   491  00FF18  0E00               	movlw	0
   492  00FF1A  6E9B               	movwf	155,c	;volatile
   493  00FF1C  0012               	return		;funcret
   494  00FF1E                     __end_of_OSCILLATOR_Initialize:
   495                           	opt callstack 0
   496  0000                     
   497                           	psect	rparam
   498  0000                     tosu	equ	0xFFF
   499                           tosh	equ	0xFFE
   500                           tosl	equ	0xFFD
   501                           stkptr	equ	0xFFC
   502                           pclatu	equ	0xFFB
   503                           pclath	equ	0xFFA
   504                           pcl	equ	0xFF9
   505                           tblptru	equ	0xFF8
   506                           tblptrh	equ	0xFF7
   507                           tblptrl	equ	0xFF6
   508                           tablat	equ	0xFF5
   509                           prodh	equ	0xFF4
   510                           prodl	equ	0xFF3
   511                           indf0	equ	0xFEF
   512                           postinc0	equ	0xFEE
   513                           postdec0	equ	0xFED
   514                           preinc0	equ	0xFEC
   515                           plusw0	equ	0xFEB
   516                           fsr0h	equ	0xFEA
   517                           fsr0l	equ	0xFE9
   518                           wreg	equ	0xFE8
   519                           indf1	equ	0xFE7
   520                           postinc1	equ	0xFE6
   521                           postdec1	equ	0xFE5
   522                           preinc1	equ	0xFE4
   523                           plusw1	equ	0xFE3
   524                           fsr1h	equ	0xFE2
   525                           fsr1l	equ	0xFE1
   526                           bsr	equ	0xFE0
   527                           indf2	equ	0xFDF
   528                           postinc2	equ	0xFDE
   529                           postdec2	equ	0xFDD
   530                           preinc2	equ	0xFDC
   531                           plusw2	equ	0xFDB
   532                           fsr2h	equ	0xFDA
   533                           fsr2l	equ	0xFD9
   534                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_print_number_seven_seg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              2 COMRAM     3     3      0
                  _SYSTEM_Initialize
             _print_number_seven_seg
 ---------------------------------------------------------------------------------
 (1) _print_number_seven_seg                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _print_number_seven_seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      5      1A       1       27.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      32        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Sep 19 23:49:00 2020

                             l10 FF8C                               l44 FFBC  
                             l61 FF1C                               l58 FF26  
                             u10 FF74                               u11 FF70  
                             u20 FFD6                               u21 FFD2  
                             u37 FFEA                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                      __CFG_LVP$ON 000000  
                            l801 FFE0                              l803 FFF6  
                            l761 FFAE                              l763 FFB0  
                            l755 FF8E                              l771 FF64  
                            l765 FFBA                              l757 FFA6  
                            l781 FF8A                              l773 FF74  
                            l767 FF14                              l759 FFA8  
                            l791 FFC2                              l785 FF1E  
                            l769 FF64                              l793 FFC2  
                            l779 FF7A                              l795 FFC6  
                            l789 FFBE                              l799 FFDA  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                   __CFG_BORV$18 000000                              wreg 000FE8  
                   __CFG_FOSC$HS 000000                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _LATD 000F8C                             _LATE 000F8D  
                           _WPUB 000F7C                             _main FFBE  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             start 0000  
                  __CFG_IESO$OFF 000000                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000   __size_of_OSCILLATOR_Initialize 000A  
  __end_of_OSCILLATOR_Initialize FF1E                            ?_main 0015  
                          _ANSEL 000F7E                   __CFG_DEBUG$OFF 000000  
                          _PORTC 000F82                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
                          tablat 000FF5                   __CFG_HFOFST$ON 000000  
                 __CFG_PBADEN$ON 000000                  __initialization FF3C  
                   __end_of_main 0000                           ??_main 0017  
                  __activetblptr 000000                           _ANSELH 000F7F  
                 __CFG_WDTEN$OFF 000000                           _OSCCON 000FD3  
       ??_print_number_seven_seg 0015                   __CFG_XINST$OFF 000000  
                 __CFG_STVREN$ON 000000                     __pdataCOMRAM 0001  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                _SYSTEM_Initialize FF1E  
                     __accesstop 0060          __end_of__initialization FF5C  
             ?_SYSTEM_Initialize 0015                    ___rparam_used 000001  
                 __pcstackCOMRAM 0015              ??_SYSTEM_Initialize 0015  
      __end_of_SYSTEM_Initialize FF28                       __pnvCOMRAM 0019  
__size_of_print_number_seven_seg 002C                          _OSCTUNE 000F9B  
                        __Hparam 0000                          __Lparam 0000  
       _common_cathode_seg_table 0001                          __pcinit FF3C  
                        __ramtop 1000                          __ptext0 FFBE  
                        __ptext1 FF62                          __ptext2 FF1E  
                        __ptext3 FF8E                          __ptext4 FF14  
         _print_number_seven_seg FF62                          _counter 0019  
          _OSCILLATOR_Initialize FF14         ??_PIN_MANAGER_Initialize 0015  
     __size_of_SYSTEM_Initialize 000A             end_of_initialization FF5C  
                        postdec1 000FE5                          postinc0 000FEE  
                  __pidataCOMRAM FF28           ?_OSCILLATOR_Initialize 0015  
            start_initialization FF3C  __size_of_PIN_MANAGER_Initialize 0030  
               __CFG_LPT1OSC$OFF 000000           _PIN_MANAGER_Initialize FF8E  
              __CFG_CCP2MX$PORTC 000000          ?_print_number_seven_seg 0015  
         _common_anode_seg_table 000B                 __CFG_WDTPS$32768 000000  
 __end_of_print_number_seven_seg FF8E     print_number_seven_seg@number 0016  
                    _INTCON2bits 000FF1                        copy_data0 FF50  
                       __Hrparam 0000                         __Lrparam 0000  
             __CFG_BOREN$SBORDIS 000000          ??_OSCILLATOR_Initialize 0015  
                  __size_of_main 0042                       _INTCONbits 000FF2  
        ?_PIN_MANAGER_Initialize 0015   __end_of_PIN_MANAGER_Initialize FFBE  
