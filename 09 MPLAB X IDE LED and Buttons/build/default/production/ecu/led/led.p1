Version 4.0 HI-TECH Software Intermediate Code
"17 ecu/led/led.c
[; ;ecu/led/led.c: 17: ret_status led_turn_on(led_t led){
[c E2691 0 1 2 3 4 .. ]
[n E2691 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
[c E2731 0 1 .. ]
[n E2731 . LED_OFF LED_ON  ]
"18 ecu/led/led.h
[; ;ecu/led/led.h: 18: typedef struct{
[s S303 `E2691 1 `uc 1 `E2731 1 ]
[n S303 . port_name pin led_status ]
"17 ecu/led/led.c
[; ;ecu/led/led.c: 17: ret_status led_turn_on(led_t led){
[c E2687 0 1 .. ]
[n E2687 . R_NOK R_OK  ]
"58 ecu/led/../../mcal/gpio/mcal_gpio.h
[; ;ecu/led/../../mcal/gpio/mcal_gpio.h: 58: ret_status gpio_pin_direction_init(port_index index, uint8_t pin, uint8_t pin_direction);
[v _gpio_pin_direction_init `(E2687 ~T0 @X0 0 ef3`E2691`uc`uc ]
"101
[; ;ecu/led/../../mcal/gpio/mcal_gpio.h: 101: ret_status gpio_write_pin_value(port_index index, uint8_t pin, uint8_t value);
[v _gpio_write_pin_value `(E2687 ~T0 @X0 0 ef3`E2691`uc`uc ]
"110
[; ;ecu/led/../../mcal/gpio/mcal_gpio.h: 110: ret_status gpio_toggle_pin_value(port_index index, uint8_t pin);
[v _gpio_toggle_pin_value `(E2687 ~T0 @X0 0 ef2`E2691`uc ]
[v F2759 `uc ~T0 @X0 -> 8 `i t ]
[v F2673 `(v ~T0 @X0 1 tf1`ul ]
"187 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18.h
[v __delay `JF2673 ~T0 @X0 0 e ]
[p i __delay ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\c99\../pic18f46k20.h
[; <" SSPMSK equ 0F77h ;# ">
"124
[; <" SLRCON equ 0F78h ;# ">
"168
[; <" CM2CON1 equ 0F79h ;# ">
"207
[; <" CM2CON0 equ 0F7Ah ;# ">
"277
[; <" CM1CON0 equ 0F7Bh ;# ">
"347
[; <" WPUB equ 0F7Ch ;# ">
"409
[; <" IOCB equ 0F7Dh ;# ">
"448
[; <" ANSEL equ 0F7Eh ;# ">
"510
[; <" ANSELH equ 0F7Fh ;# ">
"554
[; <" PORTA equ 0F80h ;# ">
"790
[; <" PORTB equ 0F81h ;# ">
"998
[; <" PORTC equ 0F82h ;# ">
"1186
[; <" PORTD equ 0F83h ;# ">
"1328
[; <" PORTE equ 0F84h ;# ">
"1534
[; <" LATA equ 0F89h ;# ">
"1646
[; <" LATB equ 0F8Ah ;# ">
"1758
[; <" LATC equ 0F8Bh ;# ">
"1870
[; <" LATD equ 0F8Ch ;# ">
"1982
[; <" LATE equ 0F8Dh ;# ">
"2034
[; <" TRISA equ 0F92h ;# ">
"2039
[; <" DDRA equ 0F92h ;# ">
"2256
[; <" TRISB equ 0F93h ;# ">
"2261
[; <" DDRB equ 0F93h ;# ">
"2478
[; <" TRISC equ 0F94h ;# ">
"2483
[; <" DDRC equ 0F94h ;# ">
"2700
[; <" TRISD equ 0F95h ;# ">
"2705
[; <" DDRD equ 0F95h ;# ">
"2922
[; <" TRISE equ 0F96h ;# ">
"2927
[; <" DDRE equ 0F96h ;# ">
"3074
[; <" OSCTUNE equ 0F9Bh ;# ">
"3144
[; <" PIE1 equ 0F9Dh ;# ">
"3221
[; <" PIR1 equ 0F9Eh ;# ">
"3298
[; <" IPR1 equ 0F9Fh ;# ">
"3375
[; <" PIE2 equ 0FA0h ;# ">
"3455
[; <" PIR2 equ 0FA1h ;# ">
"3535
[; <" IPR2 equ 0FA2h ;# ">
"3615
[; <" EECON1 equ 0FA6h ;# ">
"3681
[; <" EECON2 equ 0FA7h ;# ">
"3688
[; <" EEDATA equ 0FA8h ;# ">
"3695
[; <" EEADR equ 0FA9h ;# ">
"3757
[; <" EEADRH equ 0FAAh ;# ">
"3783
[; <" RCSTA equ 0FABh ;# ">
"3788
[; <" RCSTA1 equ 0FABh ;# ">
"3993
[; <" TXSTA equ 0FACh ;# ">
"3998
[; <" TXSTA1 equ 0FACh ;# ">
"4249
[; <" TXREG equ 0FADh ;# ">
"4254
[; <" TXREG1 equ 0FADh ;# ">
"4261
[; <" RCREG equ 0FAEh ;# ">
"4266
[; <" RCREG1 equ 0FAEh ;# ">
"4273
[; <" SPBRG equ 0FAFh ;# ">
"4278
[; <" SPBRG1 equ 0FAFh ;# ">
"4285
[; <" SPBRGH equ 0FB0h ;# ">
"4292
[; <" T3CON equ 0FB1h ;# ">
"4404
[; <" TMR3 equ 0FB2h ;# ">
"4411
[; <" TMR3L equ 0FB2h ;# ">
"4418
[; <" TMR3H equ 0FB3h ;# ">
"4425
[; <" CVRCON2 equ 0FB4h ;# ">
"4452
[; <" CVRCON equ 0FB5h ;# ">
"4531
[; <" ECCP1AS equ 0FB6h ;# ">
"4613
[; <" PWM1CON equ 0FB7h ;# ">
"4683
[; <" BAUDCON equ 0FB8h ;# ">
"4688
[; <" BAUDCTL equ 0FB8h ;# ">
"4849
[; <" PSTRCON equ 0FB9h ;# ">
"4893
[; <" CCP2CON equ 0FBAh ;# ">
"4957
[; <" CCPR2 equ 0FBBh ;# ">
"4964
[; <" CCPR2L equ 0FBBh ;# ">
"4971
[; <" CCPR2H equ 0FBCh ;# ">
"4978
[; <" CCP1CON equ 0FBDh ;# ">
"5060
[; <" CCPR1 equ 0FBEh ;# ">
"5067
[; <" CCPR1L equ 0FBEh ;# ">
"5074
[; <" CCPR1H equ 0FBFh ;# ">
"5081
[; <" ADCON2 equ 0FC0h ;# ">
"5152
[; <" ADCON1 equ 0FC1h ;# ">
"5203
[; <" ADCON0 equ 0FC2h ;# ">
"5322
[; <" ADRES equ 0FC3h ;# ">
"5329
[; <" ADRESL equ 0FC3h ;# ">
"5336
[; <" ADRESH equ 0FC4h ;# ">
"5343
[; <" SSPCON2 equ 0FC5h ;# ">
"5405
[; <" SSPCON1 equ 0FC6h ;# ">
"5475
[; <" SSPSTAT equ 0FC7h ;# ">
"5700
[; <" SSPADD equ 0FC8h ;# ">
"5707
[; <" SSPBUF equ 0FC9h ;# ">
"5714
[; <" T2CON equ 0FCAh ;# ">
"5785
[; <" PR2 equ 0FCBh ;# ">
"5790
[; <" MEMCON equ 0FCBh ;# ">
"5895
[; <" TMR2 equ 0FCCh ;# ">
"5902
[; <" T1CON equ 0FCDh ;# ">
"6005
[; <" TMR1 equ 0FCEh ;# ">
"6012
[; <" TMR1L equ 0FCEh ;# ">
"6019
[; <" TMR1H equ 0FCFh ;# ">
"6026
[; <" RCON equ 0FD0h ;# ">
"6159
[; <" WDTCON equ 0FD1h ;# ">
"6187
[; <" HLVDCON equ 0FD2h ;# ">
"6192
[; <" LVDCON equ 0FD2h ;# ">
"6457
[; <" OSCCON equ 0FD3h ;# ">
"6534
[; <" T0CON equ 0FD5h ;# ">
"6604
[; <" TMR0 equ 0FD6h ;# ">
"6611
[; <" TMR0L equ 0FD6h ;# ">
"6618
[; <" TMR0H equ 0FD7h ;# ">
"6625
[; <" STATUS equ 0FD8h ;# ">
"6696
[; <" FSR2 equ 0FD9h ;# ">
"6703
[; <" FSR2L equ 0FD9h ;# ">
"6710
[; <" FSR2H equ 0FDAh ;# ">
"6717
[; <" PLUSW2 equ 0FDBh ;# ">
"6724
[; <" PREINC2 equ 0FDCh ;# ">
"6731
[; <" POSTDEC2 equ 0FDDh ;# ">
"6738
[; <" POSTINC2 equ 0FDEh ;# ">
"6745
[; <" INDF2 equ 0FDFh ;# ">
"6752
[; <" BSR equ 0FE0h ;# ">
"6759
[; <" FSR1 equ 0FE1h ;# ">
"6766
[; <" FSR1L equ 0FE1h ;# ">
"6773
[; <" FSR1H equ 0FE2h ;# ">
"6780
[; <" PLUSW1 equ 0FE3h ;# ">
"6787
[; <" PREINC1 equ 0FE4h ;# ">
"6794
[; <" POSTDEC1 equ 0FE5h ;# ">
"6801
[; <" POSTINC1 equ 0FE6h ;# ">
"6808
[; <" INDF1 equ 0FE7h ;# ">
"6815
[; <" WREG equ 0FE8h ;# ">
"6827
[; <" FSR0 equ 0FE9h ;# ">
"6834
[; <" FSR0L equ 0FE9h ;# ">
"6841
[; <" FSR0H equ 0FEAh ;# ">
"6848
[; <" PLUSW0 equ 0FEBh ;# ">
"6855
[; <" PREINC0 equ 0FECh ;# ">
"6862
[; <" POSTDEC0 equ 0FEDh ;# ">
"6869
[; <" POSTINC0 equ 0FEEh ;# ">
"6876
[; <" INDF0 equ 0FEFh ;# ">
"6883
[; <" INTCON3 equ 0FF0h ;# ">
"6975
[; <" INTCON2 equ 0FF1h ;# ">
"7045
[; <" INTCON equ 0FF2h ;# ">
"7162
[; <" PROD equ 0FF3h ;# ">
"7169
[; <" PRODL equ 0FF3h ;# ">
"7176
[; <" PRODH equ 0FF4h ;# ">
"7183
[; <" TABLAT equ 0FF5h ;# ">
"7192
[; <" TBLPTR equ 0FF6h ;# ">
"7199
[; <" TBLPTRL equ 0FF6h ;# ">
"7206
[; <" TBLPTRH equ 0FF7h ;# ">
"7213
[; <" TBLPTRU equ 0FF8h ;# ">
"7222
[; <" PCLAT equ 0FF9h ;# ">
"7229
[; <" PC equ 0FF9h ;# ">
"7236
[; <" PCL equ 0FF9h ;# ">
"7243
[; <" PCLATH equ 0FFAh ;# ">
"7250
[; <" PCLATU equ 0FFBh ;# ">
"7257
[; <" STKPTR equ 0FFCh ;# ">
"7331
[; <" TOS equ 0FFDh ;# ">
"7338
[; <" TOSL equ 0FFDh ;# ">
"7345
[; <" TOSH equ 0FFEh ;# ">
"7352
[; <" TOSU equ 0FFFh ;# ">
"17 ecu/led/led.c
[; ;ecu/led/led.c: 17: ret_status led_turn_on(led_t led){
[v _led_turn_on `(E2687 ~T0 @X0 1 ef1`S303 ]
{
[e :U _led_turn_on ]
[v _led `S303 ~T0 @X0 1 r1 ]
[f ]
"18
[; ;ecu/led/led.c: 18:     gpio_pin_direction_init(led.port_name, led.pin, 0X00);
[e ( _gpio_pin_direction_init (3 , , . _led 0 . _led 1 -> -> 0 `i `uc ]
"19
[; ;ecu/led/led.c: 19:     led.led_status = LED_ON;
[e = . _led 2 . `E2731 1 ]
"20
[; ;ecu/led/led.c: 20:     gpio_write_pin_value(led.port_name, led.pin, led.led_status);
[e ( _gpio_write_pin_value (3 , , . _led 0 . _led 1 -> . _led 2 `uc ]
"21
[; ;ecu/led/led.c: 21:     return R_OK;
[e ) . `E2687 1 ]
[e $UE 304  ]
"22
[; ;ecu/led/led.c: 22: }
[e :UE 304 ]
}
"29
[; ;ecu/led/led.c: 29: ret_status led_turn_off(led_t led){
[v _led_turn_off `(E2687 ~T0 @X0 1 ef1`S303 ]
{
[e :U _led_turn_off ]
[v _led `S303 ~T0 @X0 1 r1 ]
[f ]
"30
[; ;ecu/led/led.c: 30:     gpio_pin_direction_init(led.port_name, led.pin, 0X00);
[e ( _gpio_pin_direction_init (3 , , . _led 0 . _led 1 -> -> 0 `i `uc ]
"31
[; ;ecu/led/led.c: 31:     led.led_status = LED_OFF;
[e = . _led 2 . `E2731 0 ]
"32
[; ;ecu/led/led.c: 32:     gpio_write_pin_value(led.port_name, led.pin, led.led_status);
[e ( _gpio_write_pin_value (3 , , . _led 0 . _led 1 -> . _led 2 `uc ]
"33
[; ;ecu/led/led.c: 33:     return R_OK;
[e ) . `E2687 1 ]
[e $UE 305  ]
"34
[; ;ecu/led/led.c: 34: }
[e :UE 305 ]
}
"41
[; ;ecu/led/led.c: 41: ret_status led_turn_toggle(led_t led){
[v _led_turn_toggle `(E2687 ~T0 @X0 1 ef1`S303 ]
{
[e :U _led_turn_toggle ]
[v _led `S303 ~T0 @X0 1 r1 ]
[f ]
"42
[; ;ecu/led/led.c: 42:     gpio_pin_direction_init(led.port_name, led.pin, 0X00);
[e ( _gpio_pin_direction_init (3 , , . _led 0 . _led 1 -> -> 0 `i `uc ]
"43
[; ;ecu/led/led.c: 43:     led.led_status = LED_ON;
[e = . _led 2 . `E2731 1 ]
"44
[; ;ecu/led/led.c: 44:     gpio_toggle_pin_value(led.port_name, led.pin);
[e ( _gpio_toggle_pin_value (2 , . _led 0 . _led 1 ]
"45
[; ;ecu/led/led.c: 45:     return R_OK;
[e ) . `E2687 1 ]
[e $UE 306  ]
"46
[; ;ecu/led/led.c: 46: }
[e :UE 306 ]
}
"55
[; ;ecu/led/led.c: 55: ret_status led_sequence (led_t leds[], uint8_t seq[][8], uint8_t seq_len){
[v _led_sequence `(E2687 ~T0 @X0 1 ef3`*S303`*F2759`uc ]
{
[e :U _led_sequence ]
[v _leds `*S303 ~T0 @X0 1 r1 ]
[v F2762 `uc ~T0 @X0 -> 8 `i t ]
[v _seq `*F2762 ~T0 @X0 1 r2 ]
[v _seq_len `uc ~T0 @X0 1 r3 ]
[f ]
"56
[; ;ecu/led/led.c: 56:     uint8_t l_counter = 0x0U, l_leds_count = 0x0U;
[v _l_counter `uc ~T0 @X0 1 a ]
[e = _l_counter -> -> 0 `ui `uc ]
[v _l_leds_count `uc ~T0 @X0 1 a ]
[e = _l_leds_count -> -> 0 `ui `uc ]
"57
[; ;ecu/led/led.c: 57:     for(l_counter = 0x0U; l_counter<seq_len; ++l_counter){
{
[e = _l_counter -> -> 0 `ui `uc ]
[e $U 311  ]
[e :U 308 ]
{
"58
[; ;ecu/led/led.c: 58:         for(l_leds_count = 0x0U; l_leds_count<8; ++l_leds_count){
{
[e = _l_leds_count -> -> 0 `ui `uc ]
[e $ < -> _l_leds_count `i -> 8 `i 312  ]
[e $U 313  ]
[e :U 312 ]
{
"59
[; ;ecu/led/led.c: 59:             gpio_write_pin_value(leds[l_leds_count].port_name, leds[l_leds_count].pin,
[e ( _gpio_write_pin_value (3 , , . *U + _leds * -> _l_leds_count `ux -> -> # *U _leds `ui `ux 0 . *U + _leds * -> _l_leds_count `ux -> -> # *U _leds `ui `ux 1 *U + &U *U + _seq * -> _l_counter `ux -> * -> # *U &U *U _seq `ui -> -> 8 `i `ui `ux * -> _l_leds_count `ux -> -> # *U &U *U + _seq * -> _l_counter `ux -> * -> # *U &U *U _seq `ui -> -> 8 `i `ui `ux `ui `ux ]
"61
[; ;ecu/led/led.c: 61:         }
}
[e =+ _l_leds_count -> -> 1 `i `uc ]
[e $ < -> _l_leds_count `i -> 8 `i 312  ]
[e :U 313 ]
}
"62
[; ;ecu/led/led.c: 62:         _delay((unsigned long)((250)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"63
[; ;ecu/led/led.c: 63:     }
}
[e =+ _l_counter -> -> 1 `i `uc ]
[e :U 311 ]
[e $ < -> _l_counter `i -> _seq_len `i 308  ]
[e :U 309 ]
}
"64
[; ;ecu/led/led.c: 64:     return R_OK;
[e ) . `E2687 1 ]
[e $UE 307  ]
"65
[; ;ecu/led/led.c: 65: }
[e :UE 307 ]
}
